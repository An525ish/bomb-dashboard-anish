{"version":3,"sources":["components/Spacer/Spacer.tsx","hooks/useLpStats.ts","hooks/useZap.ts","hooks/useStakedTokenPriceInDollars.ts","hooks/useApproveZapper.ts","views/Bank/components/ZapModal.tsx","components/PageHeader/PageHeader.tsx","../node_modules/@material-ui/icons/FlashOn.js","hooks/useEarnings.ts","hooks/useHarvest.ts","views/Bank/components/Harvest.tsx","hooks/useStake.ts","hooks/useStakedBalance.ts","hooks/useWithdraw.ts","views/Bank/components/DepositModal.tsx","views/Bank/components/WithdrawModal.tsx","views/Bank/components/Stake.tsx","hooks/useBank.ts","hooks/useStatsForPool.ts","hooks/useRedeem.ts","views/Bank/Bank.tsx","../node_modules/@material-ui/core/esm/CardActions/CardActions.js","views/Farm/FarmCard.js","hooks/useBanks.ts","views/Farm/Farm.js","hooks/useHandleTransactionReceipt.ts","state/transactions/hooks.tsx","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","components/ModalActions/ModalActions.tsx","hooks/useAllowance.ts","components/CardIcon/CardIcon.tsx","hooks/useApprove.ts","components/UnlockWallet/UnlockWallet.tsx","components/Value/Value.tsx","components/Icon/Icon.tsx","components/icons/AddIcon.tsx","components/icons/RemoveIcon.tsx","components/IconButton/IconButton.tsx"],"names":["StyledSpacer","styled","div","props","size","Spacer","s","spacing","useContext","ThemeContext","useLpStats","lpTicker","useState","stat","setStat","slowRefresh","useRefresh","bombFinance","useBombFinance","useEffect","a","getLPStat","console","error","fetchLpPrice","useZap","bank","handleTransactionReceipt","useHandleTransactionReceipt","onZap","useCallback","zappingToken","tokenName","amount","zapIn","depositTokenName","useStakedTokenPriceInDollars","stakedTokenName","stakedToken","stakedTokenPriceInDollars","setStakedTokenPriceInDollars","isUnlocked","fetchBalance","getDepositTokenPriceInDollars","balance","catch","err","stack","refreshStakedTokenPriceInDollars","setInterval","config","refreshInterval","clearInterval","ApprovalState","APPROVE_AMOUNT","ethers","constants","MaxUint256","APPROVE_BASE_AMOUNT","BigNumber","from","useApproveZapper","token","BNB_TICKER","BNB","BOMB_TICKER","BOMB","BSHARE_TICKER","BSHARE","BTC_TICKER","externalTokens","pendingApproval","useHasPendingApproval","address","ZAPPER_ROUTER_ADDR","currentAllowance","useAllowance","approvalState","useMemo","APPROVED","lt","PENDING","NOT_APPROVED","UNKNOWN","addTransaction","useTransactionAdder","approve","response","summary","symbol","approval","tokenAddress","spender","StyledActionSpacer","theme","StyledDescriptionText","color","grey","StyledMenuItem","withStyles","root","backgroundColor","selected","MenuItem","ZapModal","onConfirm","onDismiss","decimals","useWallet","ftmBalance","Number","toFixed","toString","bombBalance","useTokenBalance","bshareBalance","btcBalance","BTC","val","setVal","setZappingToken","zappingTokenBalance","setZappingTokenBalance","token0","token1","estimate","setEstimate","approveZapperStatus","approveZapper","bombFtmLpStats","tShareFtmLpStats","bombLPStats","bshareLPStats","ftmAmountPerLP","startsWith","ftmAmount","handleChange","e","currentTarget","value","n","isNaN","parseFloat","isFinite","estimateZapIn","String","estimateZap","handleSelectMax","Modal","ModalTitle","text","InputLabel","style","id","Select","onChange","event","target","getDisplayBalance","labelId","TokenInput","onSelectMax","max","Label","ModalActions","Button","variant","onClick","Alert","severity","StyledPageHeader","StyledTitle","h1","StyledSubtitle","h3","PageHeader","icon","subtitle","title","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","React","_default","createElement","d","useEarnings","poolName","earnTokenName","poolId","setBalance","earnedFromBank","myAccount","refreshBalance","useHarvest","onReward","harvest","contract","StyledCardHeader","StyledCardActions","StyledCardContentInner","Harvest","earnings","bombStats","useBombStats","tShareStats","useShareStats","tokenStats","tokenPriceInDollars","priceInDollars","earnedInDollars","Card","CardContent","CardIcon","TokenSymbol","earnToken","Value","Typography","textTransform","disabled","eq","className","useStake","onStake","amountBn","parseUnits","depositToken","decimal","stake","useStakedBalance","stakedBalanceOnBank","useWithdraw","onWithdraw","unstake","DepositModal","fullBalance","getFullDisplayBalance","WithdrawModal","Stake","log","useApprove","approveStatus","themeColor","tokenBalance","stakedBalance","useModal","onDismissDeposit","onPresentDeposit","onDissmissZap","onPresentZap","onDismissWithdraw","onPresentWithdraw","closedForStaking","marginTop","IconButton","useBank","contractName","BanksContext","banks","find","useStatsForPool","poolAPRs","setPoolAPRs","fetchAPRsForPool","getPoolAPRs","useRedeem","onRedeem","exit","useStyles","makeStyles","gridItem","height","breakpoints","up","LPTokenHelpText","pairName","uniswapUrl","bombAddr","bshareAddr","busmAddr","BUSM","busdAddr","BUSD","includes","StyledLink","href","BankNotFound","Center","StyledBank","primary","main","StyledCardsWrapper","StyledCardWrapper","Bank","window","scrollTo","vaultUrl","classes","bankId","useParams","account","statsOnPool","name","Box","mt","Grid","container","justify","marginBottom","item","xs","md","lg","textAlign","yearlyAPR","dailyAPR","TVL","UnlockWallet","CardActions","ref","_props$disableSpacing","disableSpacing","other","_objectWithoutProperties","_extends","clsx","display","alignItems","padding","marginLeft","FarmCard","toUpperCase","position","right","top","width","borderRadius","justifyContent","component","Link","to","useBanks","BackgroundImage","createGlobalStyle","HomeImage","Farm","path","useRouteMatch","activeBanks","filter","finished","Page","exact","Helmet","Container","maxWidth","align","gutterBottom","hidden","sectionInUI","length","map","Fragment","key","addPopup","useAddPopup","promise","then","tx","message","toLowerCase","slice","chainId","dispatch","useDispatch","hash","Error","useAllTransactions","state","useSelector","transactions","allTransactions","keys","some","receipt","Date","getTime","addedTime","isTransactionRecent","StyledInputWrapper","StyledInput","input","Input","endAdornment","placeholder","startAdornment","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","toLocaleString","StyledModalActions","StyledModalAction","children","l","Children","toArray","child","i","allowance","setAllowance","fetchAllowance","StyledCardIcon","AccountButton","StyledValue","StyledIcon","Icon","AddIcon","viewBox","fill","RemoveIcon","StyledButton","button","undefined"],"mappings":"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","file":"static/js/11.ef64bfa8.chunk.js","sourcesContent":["import React, {useContext} from 'react';\nimport styled, {ThemeContext} from 'styled-components';\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg';\n}\n\nconst Spacer: React.FC<SpacerProps> = ({size = 'md'}) => {\n  const {spacing} = useContext(ThemeContext);\n\n  let s: number;\n  switch (size) {\n    case 'lg':\n      s = spacing[6];\n      break;\n    case 'sm':\n      s = spacing[2];\n      break;\n    case 'md':\n    default:\n      s = spacing[4];\n  }\n\n  return <StyledSpacer size={s} />;\n};\n\ninterface StyledSpacerProps {\n  size: number;\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`;\n\nexport default Spacer;\n","import {useEffect, useState} from 'react';\nimport useBombFinance from './useBombFinance';\nimport {LPStat} from '../bomb-finance/types';\nimport useRefresh from './useRefresh';\n\nconst useLpStats = (lpTicker: string) => {\n  const [stat, setStat] = useState<LPStat>();\n  const {slowRefresh} = useRefresh();\n  const bombFinance = useBombFinance();\n\n  useEffect(() => {\n    async function fetchLpPrice() {\n      try {\n        setStat(await bombFinance.getLPStat(lpTicker));\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchLpPrice();\n  }, [setStat, bombFinance, slowRefresh, lpTicker]);\n\n  return stat;\n};\n\nexport default useLpStats;\n","import {useCallback} from 'react';\nimport useBombFinance from './useBombFinance';\nimport {Bank} from '../bomb-finance';\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\n\nconst useZap = (bank: Bank) => {\n  const bombFinance = useBombFinance();\n  const handleTransactionReceipt = useHandleTransactionReceipt();\n\n  const handleZap = useCallback(\n    (zappingToken: string, tokenName: string, amount: string) => {\n      handleTransactionReceipt(\n        bombFinance.zapIn(zappingToken, tokenName, amount),\n        `Zap ${amount} in ${bank.depositTokenName}.`,\n      );\n    },\n    [bank, bombFinance, handleTransactionReceipt],\n  );\n  return {onZap: handleZap};\n};\n\nexport default useZap;\n","import {useCallback, useEffect, useState} from 'react';\n\nimport useBombFinance from './useBombFinance';\nimport config from '../config';\nimport ERC20 from '../bomb-finance/ERC20';\n\nconst useStakedTokenPriceInDollars = (stakedTokenName: string, stakedToken: ERC20) => {\n  const [stakedTokenPriceInDollars, setStakedTokenPriceInDollars] = useState('0');\n  const bombFinance = useBombFinance();\n  const isUnlocked = bombFinance?.isUnlocked;\n\n  const fetchBalance = useCallback(async () => {\n    const balance = await bombFinance.getDepositTokenPriceInDollars(stakedTokenName, stakedToken);\n    setStakedTokenPriceInDollars(balance);\n  }, [stakedToken, stakedTokenName, bombFinance]);\n\n  useEffect(() => {\n    if (isUnlocked) {\n      fetchBalance().catch((err) => console.error(err.stack));\n\n      const refreshStakedTokenPriceInDollars = setInterval(fetchBalance, config.refreshInterval);\n      return () => clearInterval(refreshStakedTokenPriceInDollars);\n    }\n  }, [isUnlocked, setStakedTokenPriceInDollars, bombFinance, fetchBalance]);\n\n  return stakedTokenPriceInDollars;\n};\n\nexport default useStakedTokenPriceInDollars;\n","import {BigNumber, ethers} from 'ethers';\nimport {useCallback, useMemo} from 'react';\nimport {useHasPendingApproval, useTransactionAdder} from '../state/transactions/hooks';\nimport useAllowance from './useAllowance';\nimport ERC20 from '../bomb-finance/ERC20';\nimport {BNB_TICKER, BOMB_TICKER, BSHARE_TICKER, BTC_TICKER, ZAPPER_ROUTER_ADDR} from '../utils/constants';\nimport useBombFinance from './useBombFinance';\n\nconst APPROVE_AMOUNT = ethers.constants.MaxUint256;\nconst APPROVE_BASE_AMOUNT = BigNumber.from('1000000000000000000000000');\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nfunction useApproveZapper(zappingToken: string): [ApprovalState, () => Promise<void>] {\n  const bombFinance = useBombFinance();\n  let token: ERC20;\n  if (zappingToken === BNB_TICKER) token = bombFinance.BNB;\n  else if (zappingToken === BOMB_TICKER) token = bombFinance.BOMB;\n  else if (zappingToken === BSHARE_TICKER) token = bombFinance.BSHARE;\n  else if (zappingToken === BTC_TICKER) token = bombFinance.externalTokens[BTC_TICKER];\n  const pendingApproval = useHasPendingApproval(token.address, ZAPPER_ROUTER_ADDR);\n  const currentAllowance = useAllowance(token, ZAPPER_ROUTER_ADDR, pendingApproval);\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    // we might not have enough data to know whether or not we need to approve\n    if (token === bombFinance.BNB) return ApprovalState.APPROVED;\n    if (!currentAllowance) return ApprovalState.UNKNOWN;\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lt(APPROVE_BASE_AMOUNT)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED;\n  }, [currentAllowance, pendingApproval, token, bombFinance]);\n\n  const addTransaction = useTransactionAdder();\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily');\n      return;\n    }\n\n    const response = await token.approve(ZAPPER_ROUTER_ADDR, APPROVE_AMOUNT);\n    addTransaction(response, {\n      summary: `Approve ${token.symbol}`,\n      approval: {\n        tokenAddress: token.address,\n        spender: ZAPPER_ROUTER_ADDR,\n      },\n    });\n  }, [approvalState, token, addTransaction]);\n\n  return [approvalState, approve];\n}\n\nexport default useApproveZapper;\n","import React, {useState, useMemo} from 'react';\n\nimport {Button, Select, MenuItem, InputLabel, withStyles} from '@material-ui/core';\n// import Button from '../../../components/Button'\nimport Modal, {ModalProps} from '../../../components/Modal';\nimport ModalActions from '../../../components/ModalActions';\nimport ModalTitle from '../../../components/ModalTitle';\nimport TokenInput from '../../../components/TokenInput';\nimport styled from 'styled-components';\n\nimport {getDisplayBalance} from '../../../utils/formatBalance';\nimport Label from '../../../components/Label';\nimport useLpStats from '../../../hooks/useLpStats';\nimport useTokenBalance from '../../../hooks/useTokenBalance';\nimport useBombFinance from '../../../hooks/useBombFinance';\nimport {useWallet} from 'use-wallet';\nimport useApproveZapper, {ApprovalState} from '../../../hooks/useApproveZapper';\nimport {BOMB_TICKER, BSHARE_TICKER, BNB_TICKER, BTC_TICKER} from '../../../utils/constants';\nimport {Alert} from '@material-ui/lab';\n\ninterface ZapProps extends ModalProps {\n  onConfirm: (zapAsset: string, lpName: string, amount: string) => void;\n  tokenName?: string;\n  decimals?: number;\n}\n\nconst ZapModal: React.FC<ZapProps> = ({onConfirm, onDismiss, tokenName = '', decimals = 18}) => {\n  const bombFinance = useBombFinance();\n  const {balance} = useWallet();\n  const ftmBalance = (Number(balance) / 1e18).toFixed(4).toString();\n  const bombBalance = useTokenBalance(bombFinance.BOMB);\n  const bshareBalance = useTokenBalance(bombFinance.BSHARE);\n  const btcBalance = useTokenBalance(bombFinance.BTC);\n  const [val, setVal] = useState('');\n  const [zappingToken, setZappingToken] = useState(BNB_TICKER);\n  const [zappingTokenBalance, setZappingTokenBalance] = useState(ftmBalance);\n  const [estimate, setEstimate] = useState({token0: '0', token1: '0'}); // token0 will always be BNB in this case\n  const [approveZapperStatus, approveZapper] = useApproveZapper(zappingToken);\n  const bombFtmLpStats = useLpStats('BOMB-BTCB-LP');\n  const tShareFtmLpStats = useLpStats('BSHARE-BNB-LP');\n  const bombLPStats = useMemo(() => (bombFtmLpStats ? bombFtmLpStats : null), [bombFtmLpStats]);\n  const bshareLPStats = useMemo(() => (tShareFtmLpStats ? tShareFtmLpStats : null), [tShareFtmLpStats]);\n  const ftmAmountPerLP = tokenName.startsWith(BOMB_TICKER) ? bombLPStats?.ftmAmount : bshareLPStats?.ftmAmount;\n  /**\n   * Checks if a value is a valid number or not\n   * @param n is the value to be evaluated for a number\n   * @returns\n   */\n  function isNumeric(n: any) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  }\n  const handleChangeAsset = (event: any) => {\n    const value = event.target.value;\n    setZappingToken(value);\n    setZappingTokenBalance(ftmBalance);\n    if (event.target.value === BSHARE_TICKER) {\n      setZappingTokenBalance(getDisplayBalance(bshareBalance, decimals));\n    }\n    if (event.target.value === BOMB_TICKER) {\n      setZappingTokenBalance(getDisplayBalance(bombBalance, decimals));\n    }\n    if (event.target.value === BTC_TICKER) {\n      setZappingTokenBalance(getDisplayBalance(btcBalance, decimals));\n    }\n  };\n\n  const handleChange = async (e: any) => {\n    if (e.currentTarget.value === '' || e.currentTarget.value === 0) {\n      setVal(e.currentTarget.value);\n      setEstimate({token0: '0', token1: '0'});\n    }\n    if (!isNumeric(e.currentTarget.value)) return;\n    setVal(e.currentTarget.value);\n    const estimateZap = await bombFinance.estimateZapIn(zappingToken, tokenName, String(e.currentTarget.value));\n    setEstimate({token0: estimateZap[0].toString(), token1: estimateZap[1].toString()});\n  };\n\n  const handleSelectMax = async () => {\n    setVal(zappingTokenBalance);\n    const estimateZap = await bombFinance.estimateZapIn(zappingToken, tokenName, String(zappingTokenBalance));\n    setEstimate({token0: estimateZap[0].toString(), token1: estimateZap[1].toString()});\n  };\n\n  return (\n    <Modal>\n      <ModalTitle text={`Zap in ${tokenName}`} />\n\n      <StyledActionSpacer />\n      <InputLabel style={{color: '#2c2560'}} id=\"label\">\n        Select asset to zap with\n      </InputLabel>\n      <Select onChange={handleChangeAsset} style={{color: '#2c2560'}} labelId=\"label\" id=\"select\" value={zappingToken}>\n        <StyledMenuItem value={BNB_TICKER}>BNB</StyledMenuItem>\n        <StyledMenuItem value={BSHARE_TICKER}>BSHARE</StyledMenuItem>\n        {/* <StyledMenuItem value={BTC_TICKER}>BTC</StyledMenuItem> */}\n        {/* Bomb as an input for zapping will be disabled due to issues occuring with the Gatekeeper system */}\n        {/* <StyledMenuItem value={BOMB_TICKER}>BOMB</StyledMenuItem> */}\n      </Select>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={zappingTokenBalance}\n        symbol={zappingToken}\n      />\n      <Label text=\"Zap Estimations\" />\n      <StyledDescriptionText>\n        {' '}\n        {tokenName}: {Number(estimate.token0) / Number(ftmAmountPerLP)}\n      </StyledDescriptionText>\n      <StyledDescriptionText>\n        {' '}\n        ({Number(estimate.token0)} {tokenName.startsWith(BSHARE_TICKER) ? BSHARE_TICKER : BNB_TICKER} /{' '}\n        {Number(estimate.token1)} {tokenName.startsWith(BSHARE_TICKER) ? BNB_TICKER : BSHARE_TICKER}){' '}\n      </StyledDescriptionText>\n      <ModalActions>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={() =>\n            approveZapperStatus !== ApprovalState.APPROVED ? approveZapper() : onConfirm(zappingToken, tokenName, val)\n          }\n        >\n          {approveZapperStatus !== ApprovalState.APPROVED ? 'Approve' : \"Let's go\"}\n        </Button>\n      </ModalActions>\n\n      <StyledActionSpacer />\n      <Alert variant=\"filled\" severity=\"info\">\n        New feature. Use at your own risk!\n      </Alert>\n    </Modal>\n  );\n};\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`;\n\nconst StyledDescriptionText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.color.grey[400]};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 22px;\n  justify-content: flex-start;\n`;\nconst StyledMenuItem = withStyles({\n  root: {\n    backgroundColor: 'white',\n    color: '#2c2560',\n    '&:hover': {\n      backgroundColor: 'grey',\n      color: '#2c2560',\n    },\n    selected: {\n      backgroundColor: 'black',\n    },\n  },\n})(MenuItem);\n\nexport default ZapModal;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface PageHeaderProps {\n  icon: React.ReactNode;\n  subtitle?: string;\n  title?: string;\n}\n\nconst PageHeader: React.FC<PageHeaderProps> = ({icon, subtitle, title}) => {\n  return (\n    <StyledPageHeader>\n      {/* <StyledIcon>{icon}</StyledIcon> */}\n      <StyledTitle>{title}</StyledTitle>\n      <StyledSubtitle>{subtitle}</StyledSubtitle>\n    </StyledPageHeader>\n  );\n};\n\nconst StyledPageHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  padding-bottom: ${(props) => props.theme.spacing[6]}px;\n  padding-top: ${(props) => props.theme.spacing[6]}px;\n  max-width: 512px;\n  width: 100%;\n  margin: 0 auto;\n`;\n\nconst StyledTitle = styled.h1`\n  color: '#f9d749';\n  font-size: 36px;\n  font-weight: 700;\n  margin: 0;\n  padding: 0;\n`;\n\nconst StyledSubtitle = styled.h3`\n  color: ${(props) => props.theme.color.grey[400]};\n  font-size: 18px;\n  font-weight: 400;\n  margin: 0;\n  padding: 0;\n  text-align: center;\n`;\n\nexport default PageHeader;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M7 2v11h3v9l7-12h-4l4-8z\"\n}), 'FlashOn');\n\nexports.default = _default;","import {useCallback, useEffect, useState} from 'react';\nimport {BigNumber} from 'ethers';\nimport useBombFinance from './useBombFinance';\nimport {ContractName} from '../bomb-finance';\nimport config from '../config';\n\nconst useEarnings = (poolName: ContractName, earnTokenName: String, poolId: Number) => {\n  const [balance, setBalance] = useState(BigNumber.from(0));\n  const bombFinance = useBombFinance();\n  const isUnlocked = bombFinance?.isUnlocked;\n\n  const fetchBalance = useCallback(async () => {\n    const balance = await bombFinance.earnedFromBank(poolName, earnTokenName, poolId, bombFinance.myAccount);\n    setBalance(balance);\n  }, [poolName, earnTokenName, poolId, bombFinance]);\n\n  useEffect(() => {\n    if (isUnlocked) {\n      fetchBalance().catch((err) => console.error(err.stack));\n\n      const refreshBalance = setInterval(fetchBalance, config.refreshInterval);\n      return () => clearInterval(refreshBalance);\n    }\n  }, [isUnlocked, poolName, bombFinance, fetchBalance]);\n\n  return balance;\n};\n\nexport default useEarnings;\n","import {useCallback} from 'react';\nimport useBombFinance from './useBombFinance';\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\nimport {Bank} from '../bomb-finance';\n\nconst useHarvest = (bank: Bank) => {\n  const bombFinance = useBombFinance();\n  const handleTransactionReceipt = useHandleTransactionReceipt();\n\n  const handleReward = useCallback(() => {\n    handleTransactionReceipt(\n      bombFinance.harvest(bank.contract, bank.poolId),\n      `Claim ${bank.earnTokenName} from ${bank.contract}`,\n    );\n  }, [bank, bombFinance, handleTransactionReceipt]);\n\n  return {onReward: handleReward};\n};\n\nexport default useHarvest;\n","import React, {useMemo} from 'react';\nimport styled from 'styled-components';\n\nimport {Button, Card, CardContent, Typography} from '@material-ui/core';\n// import Button from '../../../components/Button';\n// import Card from '../../../components/Card';\n// import CardContent from '../../../components/CardContent';\nimport CardIcon from '../../../components/CardIcon';\nimport Value from '../../../components/Value';\nimport useEarnings from '../../../hooks/useEarnings';\nimport useHarvest from '../../../hooks/useHarvest';\n\nimport {getDisplayBalance} from '../../../utils/formatBalance';\nimport TokenSymbol from '../../../components/TokenSymbol';\nimport {Bank} from '../../../bomb-finance';\nimport useBombStats from '../../../hooks/useBombStats';\nimport useShareStats from '../../../hooks/usebShareStats';\n\ninterface HarvestProps {\n  bank: Bank;\n}\n\nconst Harvest: React.FC<HarvestProps> = ({bank}) => {\n  const earnings = useEarnings(bank.contract, bank.earnTokenName, bank.poolId);\n  const {onReward} = useHarvest(bank);\n  const bombStats = useBombStats();\n  const tShareStats = useShareStats();\n\n  const tokenName = bank.earnTokenName === 'BSHARE' ? 'BSHARE' : 'BOMB';\n  const tokenStats = bank.earnTokenName === 'BSHARE' ? tShareStats : bombStats;\n  const tokenPriceInDollars = useMemo(\n    () => (tokenStats ? Number(tokenStats.priceInDollars).toFixed(2) : null),\n    [tokenStats],\n  );\n  const earnedInDollars = (Number(tokenPriceInDollars) * Number(getDisplayBalance(earnings))).toFixed(2);\n  return (\n    <Card>\n      <CardContent>\n        <StyledCardContentInner>\n          <StyledCardHeader>\n            <CardIcon>\n              <TokenSymbol symbol={bank.earnToken.symbol} />\n            </CardIcon>\n            <Value value={getDisplayBalance(earnings)} />\n                          <Typography style={{textTransform: 'uppercase', color: '#fffff'}}>\n                      {`≈ $${earnedInDollars}`}\n                    </Typography>\n            {/* <Label text={`≈ $${earnedInDollars}`} /> */}\n                  <Typography style={{textTransform: 'uppercase', color: '#f9d749'}}>\n              {`${tokenName} Earned`}\n                    </Typography>\n             {/* <Label text={`${tokenName} Earned`} /> */}\n          </StyledCardHeader>\n          <StyledCardActions>\n            <Button\n              onClick={onReward}\n              disabled={earnings.eq(0)}\n              className={earnings.eq(0) ? 'shinyButtonDisabled' : 'shinyButton'}\n            >\n              Claim\n            </Button>\n          </StyledCardActions>\n        </StyledCardContentInner>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${(props) => props.theme.spacing[6]}px;\n  width: 100%;\n`;\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport default Harvest;\n","import {useCallback} from 'react';\nimport useBombFinance from './useBombFinance';\nimport {Bank} from '../bomb-finance';\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\nimport {parseUnits} from 'ethers/lib/utils';\n\nconst useStake = (bank: Bank) => {\n  const bombFinance = useBombFinance();\n  const handleTransactionReceipt = useHandleTransactionReceipt();\n\n  const handleStake = useCallback(\n    (amount: string) => {\n      const amountBn = parseUnits(amount, bank.depositToken.decimal);\n      handleTransactionReceipt(\n        bombFinance.stake(bank.contract, bank.poolId, amountBn),\n        `Stake ${amount} ${bank.depositTokenName} to ${bank.contract}`,\n      );\n    },\n    [bank, bombFinance, handleTransactionReceipt],\n  );\n  return {onStake: handleStake};\n};\n\nexport default useStake;\n","import {useCallback, useEffect, useState} from 'react';\n\nimport {BigNumber} from 'ethers';\nimport useBombFinance from './useBombFinance';\nimport {ContractName} from '../bomb-finance';\nimport config from '../config';\n\nconst useStakedBalance = (poolName: ContractName, poolId: Number) => {\n  const [balance, setBalance] = useState(BigNumber.from(0));\n  const bombFinance = useBombFinance();\n  const isUnlocked = bombFinance?.isUnlocked;\n\n  const fetchBalance = useCallback(async () => {\n    const balance = await bombFinance.stakedBalanceOnBank(poolName, poolId, bombFinance.myAccount);\n    setBalance(balance);\n  }, [poolName, poolId, bombFinance]);\n\n  useEffect(() => {\n    if (isUnlocked) {\n      fetchBalance().catch((err) => console.error(err.stack));\n\n      const refreshBalance = setInterval(fetchBalance, config.refreshInterval);\n      return () => clearInterval(refreshBalance);\n    }\n  }, [isUnlocked, poolName, setBalance, bombFinance, fetchBalance]);\n\n  return balance;\n};\n\nexport default useStakedBalance;\n","import {useCallback} from 'react';\nimport useBombFinance from './useBombFinance';\nimport {Bank} from '../bomb-finance';\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\nimport {parseUnits} from 'ethers/lib/utils';\n\nconst useWithdraw = (bank: Bank) => {\n  const bombFinance = useBombFinance();\n  const handleTransactionReceipt = useHandleTransactionReceipt();\n\n  const handleWithdraw = useCallback(\n    (amount: string) => {\n      const amountBn = parseUnits(amount, bank.depositToken.decimal);\n      handleTransactionReceipt(\n        bombFinance.unstake(bank.contract, bank.poolId, amountBn),\n        `Withdraw ${amount} ${bank.depositTokenName} from ${bank.contract}`,\n      );\n    },\n    [bank, bombFinance, handleTransactionReceipt],\n  );\n  return {onWithdraw: handleWithdraw};\n};\n\nexport default useWithdraw;\n","import React, {useCallback, useMemo, useState} from 'react';\n\nimport {Button} from '@material-ui/core';\n// import Button from '../../../components/Button'\nimport Modal, {ModalProps} from '../../../components/Modal';\nimport ModalActions from '../../../components/ModalActions';\nimport ModalTitle from '../../../components/ModalTitle';\nimport TokenInput from '../../../components/TokenInput';\n\nimport {getFullDisplayBalance} from '../../../utils/formatBalance';\nimport {BigNumber} from 'ethers';\n\ninterface DepositModalProps extends ModalProps {\n  max: BigNumber;\n  decimals: number;\n  onConfirm: (amount: string) => void;\n  tokenName?: string;\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({max, decimals, onConfirm, onDismiss, tokenName = ''}) => {\n  const [val, setVal] = useState('');\n\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max, decimals, false);\n  }, [max, decimals]);\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value);\n    },\n    [setVal],\n  );\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance);\n  }, [fullBalance, setVal]);\n\n  return (\n    <Modal>\n      <ModalTitle text={`Deposit ${tokenName}`} />\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        {/* <Button color=\"secondary\" variant=\"outlined\" onClick={onDismiss}>Cancel</Button> */}\n        <Button className=\"shinyButtonSecondary\" onClick={() => onConfirm(val)}>\n          Confirm\n        </Button>\n      </ModalActions>\n    </Modal>\n  );\n};\n\nexport default DepositModal;\n","import React, {useCallback, useMemo, useState} from 'react';\n\nimport {Button} from '@material-ui/core';\n// import Button from '../../../components/Button'\nimport Modal, {ModalProps} from '../../../components/Modal';\nimport ModalActions from '../../../components/ModalActions';\nimport ModalTitle from '../../../components/ModalTitle';\nimport TokenInput from '../../../components/TokenInput';\n\nimport {getFullDisplayBalance} from '../../../utils/formatBalance';\nimport {BigNumber} from 'ethers';\n\ninterface WithdrawModalProps extends ModalProps {\n  max: BigNumber;\n  onConfirm: (amount: string) => void;\n  tokenName?: string;\n  decimals?: number;\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({onConfirm, onDismiss, max, tokenName = '', decimals = 18}) => {\n  const [val, setVal] = useState('');\n\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max, decimals, false);\n  }, [max, decimals]);\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value);\n    },\n    [setVal],\n  );\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance);\n  }, [fullBalance, setVal]);\n\n  return (\n    <Modal>\n      <ModalTitle text={`Withdraw ${tokenName}`} />\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button className=\"shinyButtonSecondary\" onClick={() => onConfirm(val)}>\n          Confirm\n        </Button>\n        {/* <Button color=\"secondary\" onClick={onDismiss}>Cancel</Button> */}\n\n        {/* <Button text=\"Cancel\" variant=\"secondary\" onClick={onDismiss} />\n        <Button text=\"Confirm\" onClick={() => onConfirm(val)} /> */}\n      </ModalActions>\n    </Modal>\n  );\n};\n\nexport default WithdrawModal;\n","import React, {useMemo, useContext} from 'react';\nimport styled from 'styled-components';\n\n// import Button from '../../../components/Button';\nimport {Button, Card, CardContent, Typography} from '@material-ui/core';\n// import Card from '../../../components/Card';\n// import CardContent from '../../../components/CardContent';\nimport CardIcon from '../../../components/CardIcon';\nimport {AddIcon, RemoveIcon} from '../../../components/icons';\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\nimport IconButton from '../../../components/IconButton';\n//import Label from '../../../components/Label';\nimport Value from '../../../components/Value';\nimport {ThemeContext} from 'styled-components';\n\nimport useApprove, {ApprovalState} from '../../../hooks/useApprove';\nimport useModal from '../../../hooks/useModal';\nimport useStake from '../../../hooks/useStake';\nimport useZap from '../../../hooks/useZap';\nimport useStakedBalance from '../../../hooks/useStakedBalance';\nimport useStakedTokenPriceInDollars from '../../../hooks/useStakedTokenPriceInDollars';\nimport useTokenBalance from '../../../hooks/useTokenBalance';\nimport useWithdraw from '../../../hooks/useWithdraw';\n\nimport {getDisplayBalance} from '../../../utils/formatBalance';\n\nimport DepositModal from './DepositModal';\nimport WithdrawModal from './WithdrawModal';\nimport ZapModal from './ZapModal';\nimport TokenSymbol from '../../../components/TokenSymbol';\nimport {Bank} from '../../../bomb-finance';\n\ninterface StakeProps {\n  bank: Bank;\n}\n\nconst Stake: React.FC<StakeProps> = ({ bank }) => {\n  console.log({bank})\n  const [approveStatus, approve] = useApprove(bank.depositToken, bank.address);\n\n  const {color: themeColor} = useContext(ThemeContext);\n  const tokenBalance = useTokenBalance(bank.depositToken);\n  const stakedBalance = useStakedBalance(bank.contract, bank.poolId);\n  const stakedTokenPriceInDollars = useStakedTokenPriceInDollars(bank.depositTokenName, bank.depositToken);\n  const tokenPriceInDollars = useMemo(\n    () => (stakedTokenPriceInDollars ? stakedTokenPriceInDollars : null),\n    [stakedTokenPriceInDollars],\n  );\n  const earnedInDollars = (\n    Number(tokenPriceInDollars) * Number(getDisplayBalance(stakedBalance, bank.depositToken.decimal))\n  ).toFixed(2);\n  const {onStake} = useStake(bank);\n  const {onZap} = useZap(bank);\n  const {onWithdraw} = useWithdraw(bank);\n\n  const [onPresentDeposit, onDismissDeposit] = useModal(\n    <DepositModal\n      max={tokenBalance}\n      decimals={bank.depositToken.decimal}\n      onConfirm={(amount) => {\n        if (Number(amount) <= 0 || isNaN(Number(amount))) return;\n        onStake(amount);\n        onDismissDeposit();\n      }}\n      tokenName={bank.depositTokenName}\n    />,\n  );\n\n  const [onPresentZap, onDissmissZap] = useModal(\n    <ZapModal\n      decimals={bank.depositToken.decimal}\n      onConfirm={(zappingToken, tokenName, amount) => {\n        if (Number(amount) <= 0 || isNaN(Number(amount))) return;\n        onZap(zappingToken, tokenName, amount);\n        onDissmissZap();\n      }}\n      tokenName={bank.depositTokenName}\n    />,\n  );\n\n  const [onPresentWithdraw, onDismissWithdraw] = useModal(\n    <WithdrawModal\n      max={stakedBalance}\n      decimals={bank.depositToken.decimal}\n      onConfirm={(amount) => {\n        if (Number(amount) <= 0 || isNaN(Number(amount))) return;\n        onWithdraw(amount);\n        onDismissWithdraw();\n      }}\n      tokenName={bank.depositTokenName}\n    />,\n  );\n\n  return (\n    <Card>\n      <CardContent>\n        <StyledCardContentInner>\n          <StyledCardHeader>\n            <CardIcon>\n              <TokenSymbol symbol={bank.depositToken.symbol} size={54} />\n            </CardIcon>\n            <Value value={getDisplayBalance(stakedBalance, bank.depositToken.decimal)} />\n\n            \n            {/* <Label text={`≈ $${earnedInDollars}`} /> */}\n\n                 <Typography style={{textTransform: 'uppercase', color: '#fffff'}}>\n                      {`≈ $${earnedInDollars}`}\n            </Typography>\n               <Typography style={{textTransform: 'uppercase', color: '#f9d749'}}>\n              {`${bank.depositTokenName} Staked`}\n                    </Typography>\n            {/* <Label text={`${bank.depositTokenName} Staked`} /> */}\n          </StyledCardHeader>\n          <StyledCardActions>\n            {approveStatus !== ApprovalState.APPROVED ? (\n              <Button\n                disabled={\n                  bank.closedForStaking ||\n                  approveStatus === ApprovalState.PENDING ||\n                  approveStatus === ApprovalState.UNKNOWN\n                }\n                onClick={approve}\n                className={\n                  bank.closedForStaking ||\n                  approveStatus === ApprovalState.PENDING ||\n                  approveStatus === ApprovalState.UNKNOWN\n                    ? 'shinyButtonDisabled'\n                    : 'shinyButton'\n                }\n                style={{marginTop: '20px'}}\n              >\n                {`Approve ${bank.depositTokenName}`}\n              </Button>\n            ) : (\n              <>\n                <IconButton onClick={onPresentWithdraw}>\n                  <RemoveIcon />\n                </IconButton>\n                <StyledActionSpacer />\n                <IconButton\n                  disabled={\n                    bank.closedForStaking ||\n                      bank.depositTokenName === 'BOMB-BSHARE-LP' ||\n                       bank.depositTokenName === 'BOMB' ||\n                      bank.depositTokenName === 'BOMB-BTCB-LP' ||\n                      bank.depositTokenName === '80BOMB-20BTCB-LP' ||\n                        bank.depositTokenName === '80BSHARE-20WBNB-LP' ||\n                      bank.depositTokenName === 'BUSM-BUSD-LP' ||\n                      bank.depositTokenName === 'BBOND'\n\n                  }\n                  onClick={() => (bank.closedForStaking ? null : onPresentZap())}\n                >\n                  <FlashOnIcon style={{color: themeColor.grey[400]}} />\n                </IconButton>\n                <StyledActionSpacer />\n                <IconButton\n                  disabled={bank.closedForStaking}\n                  onClick={() => (bank.closedForStaking ? null : onPresentDeposit())}\n                >\n                  <AddIcon />\n                </IconButton>\n              </>\n            )}\n          </StyledCardActions>\n        </StyledCardContentInner>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 28px;\n  width: 100%;\n`;\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`;\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport default Stake;\n","import {useContext} from 'react';\nimport {Context as BanksContext} from '../contexts/Banks';\nimport {Bank, ContractName} from '../bomb-finance';\n\nconst useBank = (contractName: ContractName): Bank => {\n  const {banks} = useContext(BanksContext);\n  return banks.find((bank) => bank.contract === contractName);\n};\n\nexport default useBank;\n","import {useCallback, useState, useEffect} from 'react';\nimport useBombFinance from './useBombFinance';\nimport {Bank} from '../bomb-finance';\nimport {PoolStats} from '../bomb-finance/types';\nimport config from '../config';\n\nconst useStatsForPool = (bank: Bank) => {\n  const bombFinance = useBombFinance();\n\n  const [poolAPRs, setPoolAPRs] = useState<PoolStats>();\n\n  const fetchAPRsForPool = useCallback(async () => {\n    setPoolAPRs(await bombFinance.getPoolAPRs(bank));\n  }, [bombFinance, bank]);\n\n  useEffect(() => {\n    fetchAPRsForPool().catch((err) => console.error(`Failed to fetch APR info: ${err.stack}`));\n    const refreshInterval = setInterval(fetchAPRsForPool, config.refreshInterval);\n    return () => clearInterval(refreshInterval);\n  }, [setPoolAPRs, bombFinance, fetchAPRsForPool]);\n\n  return poolAPRs;\n};\n\nexport default useStatsForPool;\n","import {useCallback} from 'react';\nimport useBombFinance from './useBombFinance';\nimport {Bank} from '../bomb-finance';\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\n\nconst useRedeem = (bank: Bank) => {\n  const bombFinance = useBombFinance();\n  const handleTransactionReceipt = useHandleTransactionReceipt();\n\n  const handleRedeem = useCallback(() => {\n    handleTransactionReceipt(bombFinance.exit(bank.contract, bank.poolId), `Redeem ${bank.contract}`);\n  }, [bank, bombFinance, handleTransactionReceipt]);\n\n  return {onRedeem: handleRedeem};\n};\n\nexport default useRedeem;\n","import React, {useEffect} from 'react';\nimport styled from 'styled-components';\n\nimport {useParams} from 'react-router-dom';\nimport {useWallet} from 'use-wallet';\nimport {makeStyles} from '@material-ui/core/styles';\n\nimport {Box, Button, Card, CardContent, Typography, Grid} from '@material-ui/core';\n\nimport PageHeader from '../../components/PageHeader';\nimport Spacer from '../../components/Spacer';\nimport UnlockWallet from '../../components/UnlockWallet';\nimport Harvest from './components/Harvest';\nimport Stake from './components/Stake';\nimport useBank from '../../hooks/useBank';\nimport useStatsForPool from '../../hooks/useStatsForPool';\nimport useRedeem from '../../hooks/useRedeem';\nimport {Bank as BankEntity} from '../../bomb-finance';\nimport useBombFinance from '../../hooks/useBombFinance';\nimport {Alert} from '@material-ui/lab';\n//import { bankDefinitions } from '../../config';\n\nconst useStyles = makeStyles((theme) => ({\n  gridItem: {\n    height: '100%',\n    [theme.breakpoints.up('md')]: {\n      height: '90px',\n    },\n  },\n}));\n\nconst Bank: React.FC = () => {\n  useEffect(() => window.scrollTo(0, 0));\n  const classes = useStyles();\n  const {bankId} = useParams();\n  const bank = useBank(bankId);\n\n  const {account} = useWallet();\n  const { onRedeem } = useRedeem(bank);\n\n\n   let statsOnPool = useStatsForPool(bank);\n  // console.log(statsOnPool);\n\n  //   if (bank.depositTokenName.includes('80BOMB-20BTCB-LP') || bank.depositTokenName.includes('80BSHARE-20WBNB-LP')) {\n  //     statsOnPool = {\n  //       dailyAPR: 'COMING SOON',\n  //       yearlyAPR: 'COMING SOON',\n  //       TVL: 'COMING SOON',\n  //     }\n  //   } \n  \n  \n  //const statsOnPool = useStatsForPool(bank);\n  let vaultUrl: string;\n  if (bank.depositTokenName.includes('BOMB-BTCB')) {\n    vaultUrl = 'https://www.bomb.farm/#/bsc/vault/bomb-bomb-btcb';\n  }\n  \n   else if (bank.depositTokenName.includes('BOMB-BSHARE')) {\n    vaultUrl = 'https://www.bomb.farm/#/bsc/';\n  }\n     else if (bank.depositTokenName.includes('BSHARE-BNB')) {\n    vaultUrl = 'https://www.bomb.farm/#/bsc/vault/bomb-bshare-wbnb';\n  }\n\n  return account && bank ? (\n    <>\n      <PageHeader\n        icon=\"💣\"\n   //     subtitle={`Deposit ${bank?.depositTokenName} and earn ${bank?.earnTokenName}`}\n        title={bank?.name}\n      />\n         <Box mt={5}>\n          {(vaultUrl) ? (\n        <Grid container justify=\"center\" spacing={3} style={{ marginBottom: '30px' }}>\n        <Alert variant=\"filled\" severity=\"info\">\n            <h3>Our autocompounding vaults are live!</h3><br />\n            We support zapping tokens, and auto-compound every 2 hours!<br />\n            Check it out here: <a href={vaultUrl}>{vaultUrl}</a>\n            </Alert> </Grid> \n          ) : \"\"}\n      </Box>\n      <Box>\n        <Grid container justify=\"center\" spacing={3} style={{marginBottom: '50px'}}>\n          <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\n            <Card className={classes.gridItem}>\n              <CardContent style={{textAlign: 'center'}}>\n                <Typography>APR</Typography>\n                <Typography>{bank.closedForStaking ? '0.00' : statsOnPool?.yearlyAPR}%</Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\n            <Card className={classes.gridItem}>\n              <CardContent style={{textAlign: 'center'}}>\n                <Typography>Daily APR</Typography>\n                <Typography>{bank.closedForStaking ? '0.00' : statsOnPool?.dailyAPR}%</Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\n            <Card className={classes.gridItem}>\n              <CardContent style={{textAlign: 'center'}}>\n                <Typography>TVL</Typography>\n                <Typography>${statsOnPool?.TVL}</Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </Box>\n   \n      <Box mt={5}>\n        <StyledBank>\n          <StyledCardsWrapper>\n            <StyledCardWrapper>\n              <Harvest bank={bank} />\n            </StyledCardWrapper>\n            <Spacer />\n            <StyledCardWrapper>{<Stake bank={bank} />}</StyledCardWrapper>\n          </StyledCardsWrapper>\n          <Spacer size=\"lg\" />\n          {bank.depositTokenName.includes('LP') && <LPTokenHelpText bank={bank} />}\n          <Spacer size=\"lg\" />\n          <div>\n            <Button onClick={onRedeem} className=\"shinyButtonSecondary\">\n              Claim &amp; Withdraw\n            </Button>\n          </div>\n          <Spacer size=\"lg\" />\n        </StyledBank>\n      </Box>\n    </>\n  ) : !bank ? (\n    <BankNotFound />\n  ) : (\n    <UnlockWallet />\n  );\n};\n\nconst LPTokenHelpText: React.FC<{bank: BankEntity}> = ({bank}) => {\n  const bombFinance = useBombFinance();\n  const bombAddr = bombFinance.BOMB.address;\n  const bshareAddr = bombFinance.BSHARE.address;\n    const busmAddr = bombFinance.BUSM.address;\n  const busdAddr = bombFinance.BUSD.address;\n\n  //const depositToken = bank.depositTokenName;\n  //console.log({depositToken})\n  let pairName: string;\n  let uniswapUrl: string;\n // let vaultUrl: string;\n  if (bank.depositTokenName.includes('BOMB-BTCB')) {\n    pairName = 'BOMB-BTCB pair';\n    uniswapUrl = 'https://pancakeswap.finance/add/0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c/' + bombAddr;\n //   vaultUrl = 'https://www.bomb.farm/#/bsc/vault/bomb-bomb-btcb';\n  }\n    else if (bank.depositTokenName.includes('80BOMB-20BTCB-LP')) {\n    pairName = 'BOMB MAXI 80% BOMB - 20% BTCB (at ACSI.finance)';\n    uniswapUrl = 'https://app.acsi.finance/#/pool/0xd6f52e8ab206e59a1e13b3d6c5b7f31e90ef46ef000200000000000000000028/invest';\n //   vaultUrl = 'https://www.bomb.farm/#/bsc/vault/bomb-bomb-btcb';\n  }\n      else if (bank.depositTokenName.includes('80BSHARE-20WBNB-LP')) {\n    pairName = 'BSHARE MAXI 80% BSHARE - 20% BNB (at ACSI.finance)';\n    uniswapUrl = 'https://app.acsi.finance/#/pool/0x2c374ed1575e5c2c02c569f627299e902a1972cb000200000000000000000027/invest';\n //   vaultUrl = 'https://www.bomb.farm/#/bsc/vault/bomb-bomb-btcb';\n  }\n  else if (bank.depositTokenName.includes('BOMB-BSHARE')) {\n    pairName = 'BOMB-BSHARE pair';\n    uniswapUrl = 'https://pancakeswap.finance/add/' + bombAddr + '/' + bshareAddr;\n //   vaultUrl = 'https://www.bomb.farm/#/bsc/vault/bomb-bomb-btcb';\n  }\n      else if (bank.depositTokenName.includes('BUSM-BUSD')) {\n    pairName = 'BUSM-BUSD pair';\n    uniswapUrl = 'https://pancakeswap.finance/add/' + busmAddr + '/' + busdAddr;\n //   vaultUrl = 'https://www.bomb.farm/#/bsc/vault/bomb-bomb-btcb';\n  }\n    \n  else {\n    pairName = 'BSHARE-BNB pair';\n    uniswapUrl = 'https://pancakeswap.finance/add/BNB/' + bshareAddr;\n //   vaultUrl = 'https://www.bomb.farm/#/bsc/vault/bomb-bshare-bnb';\n\n  }\n  return (\n    <Card>\n      <CardContent>\n        <StyledLink href={uniswapUrl} target=\"_blank\">\n          {`Provide liquidity for ${pairName} now!`}\n        </StyledLink>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst BankNotFound = () => {\n  return (\n    <Center>\n      <PageHeader icon=\"🏚\" title=\"Not Found\" subtitle=\"You've hit a bank just robbed by unicorns.\" />\n    </Center>\n  );\n};\n\nconst StyledBank = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst StyledLink = styled.a`\n  font-weight: 700;\n  text-decoration: none;\n  color: ${(props) => props.theme.color.primary.main};\n`;\n\nconst StyledCardsWrapper = styled.div`\n  display: flex;\n  width: 600px;\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-flow: column nowrap;\n    align-items: center;\n  }\n`;\n\nconst StyledCardWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 80%;\n  }\n`;\n\nconst Center = styled.div`\n  display: flex;\n  flex: 1;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default Bank;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = /*#__PURE__*/React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Box, Button, Card, CardActions, CardContent, Typography, Grid } from '@material-ui/core';\n\nimport TokenSymbol from '../../components/TokenSymbol';\nimport { useWallet } from 'use-wallet';\nimport UnlockWallet from '../../components/UnlockWallet';\n\nconst FarmCard = ({ bank }) => {\n  const { account } = useWallet();\n\n  let depositToken = bank.depositTokenName.toUpperCase();\n  if (depositToken === '80BOMB-20BTCB-LP') {\n    depositToken = 'BOMB-MAXI';\n  }\n  if (depositToken === '80BSHARE-20WBNB-LP') {\n    depositToken = 'BSHARE-MAXI';\n  }\n  return (\n    <Grid item xs={12} md={4} lg={4}>\n      <Card variant=\"outlined\">\n        <CardContent>\n          <Box style={{ position: 'relative' }}>\n            <Box\n              style={{\n                position: 'absolute',\n                right: '0px',\n                top: '-5px',\n                height: '48px',\n                width: '48px',\n                borderRadius: '40px',\n                backgroundColor: '#363746',\n                alignItems: 'center',\n                display: 'flex',\n                justifyContent: 'center',\n              }}\n            >\n              <TokenSymbol size={32} symbol={bank.depositTokenName} />\n            </Box>\n            <Typography variant=\"h5\" component=\"h2\">\n              {bank.depositTokenName}\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {/* {bank.name} */}\n              Deposit {depositToken.toUpperCase()} Earn {` ${bank.earnTokenName}`}\n            </Typography>\n          </Box>\n        </CardContent>\n        <CardActions style={{ justifyContent: 'flex-end' }}>\n          {!!account ? (\n              <Button className=\"shinyButtonSecondary\" component={Link} to={`/farm/${bank.contract}`}>\n                  View\n              </Button>\n          ) : (\n              <UnlockWallet />\n          )}\n        </CardActions>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default FarmCard;\n","import {useContext} from 'react';\nimport {Context as BanksContext} from '../contexts/Banks';\n\nconst useBanks = () => {\n  const {banks} = useContext(BanksContext);\n  return [banks];\n};\n\nexport default useBanks;\n","import React from 'react';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\nimport Bank from '../Bank';\n\nimport { Box, Container, Typography, Grid } from '@material-ui/core';\n\nimport { Alert } from '@material-ui/lab';\n\nimport Page from '../../components/Page';\nimport FarmCard from './FarmCard';\n//import FarmImage from '../../assets/img/farm.png';\nimport { createGlobalStyle } from 'styled-components';\n\nimport useBanks from '../../hooks/useBanks';\nimport { Helmet } from 'react-helmet';\n\nimport HomeImage from '../../assets/img/background.jpg';\nconst BackgroundImage = createGlobalStyle`\n  body {\n    background: url(${HomeImage}) repeat !important;\n    background-size: cover !important;\n    background-color: #171923;\n  }\n`;\n\nconst TITLE = 'bomb.money | Farms';\n\nconst Farm = () => {\n  const [banks] = useBanks();\n  const { path } = useRouteMatch();\n  const activeBanks = banks.filter((bank) => !bank.finished);\n  return (\n    <Switch>\n      <Page>\n        <Route exact path={path}>\n          <BackgroundImage />\n          <Helmet>\n            <title>{TITLE}</title>\n          </Helmet>\n          <Container maxWidth=\"lg\">\n            <Typography color=\"textPrimary\" align=\"center\" variant=\"h3\" gutterBottom>\n              Reward Farms\n            </Typography>\n\n            <Box mt={5}>\n              <div hidden={activeBanks.filter((bank) => bank.sectionInUI === 3).length === 0}>\n                <Typography color=\"textYellow\" align=\"center\" variant=\"h4\" gutterBottom>\n                  Earn BSHARE by staking Pancake LPs & BBOND\n                </Typography>\n                {/* <Alert variant=\"filled\" severity=\"info\">\n                    <h4>\n                      Farms started November 25th 2021 and will continue running for 1 full year.</h4>\n                  </Alert> */}\n                <Grid container spacing={3} style={{ marginTop: '20px' }}>\n                  {activeBanks\n                    .filter((bank) => bank.sectionInUI === 3)\n                    .map((bank) => (\n                      <React.Fragment key={bank.name}>\n                        <FarmCard bank={bank} />\n                      </React.Fragment>\n                    ))}\n                </Grid>\n              </div>\n\n              <div hidden={activeBanks.filter((bank) => bank.sectionInUI === 2).length === 0}>\n                {/* <Typography color=\"textPrimary\" variant=\"h4\" gutterBottom style={{ marginTop: '20px' }}>\n                    Inactive ApeSwap Farms\n                  </Typography> */}\n                <Typography color=\"textYellow\" align=\"center\" variant=\"h4\" gutterBottom style={{ marginTop: '40px' }}>\n                  Earn BSHARE by ACSI Maxi LPs\n                </Typography>\n                {/* <Alert variant=\"filled\" severity=\"info\">\n                    These farms are functioning properly, but need an update to show the accurate TVL and APR.\n                    <br />\n                    Reward allocations are 20% of all BSHARE rewards to the 80BOMB-20BTCB-LP and 10% of all rewards to\n                    the 80BSHARE-20BSHARE.\n                  </Alert> */}\n                <Grid container spacing={3} style={{ marginTop: '20px', display: 'flex', alignItems: 'center' }}>\n                  {activeBanks\n                    .filter((bank) => bank.sectionInUI === 2)\n                    .map((bank) => (\n                      <React.Fragment key={bank.name}>\n                        <FarmCard bank={bank} />\n                      </React.Fragment>\n                    ))}\n                </Grid>\n              </div>\n\n              <div hidden={activeBanks.filter((bank) => bank.sectionInUI === 1).length === 0}>\n                <Typography color=\"textYellow\" align=\"center\" variant=\"h4\" gutterBottom style={{ marginTop: '40px' }}>\n                  Earn BSHARE by staking BUSM Liquidity\n                </Typography>\n                {/* <Alert variant=\"filled\" severity=\"warning\">\n                    Genesis pools have ended. Please claim all rewards and remove funds from Genesis pools.\n                  </Alert> */}\n                <Grid container spacing={3} style={{ marginTop: '20px' }}>\n                  {activeBanks\n                    .filter((bank) => bank.sectionInUI === 1)\n                    .map((bank) => (\n                      <React.Fragment key={bank.name}>\n                        <FarmCard bank={bank} />\n                      </React.Fragment>\n                    ))}\n                </Grid>\n              </div>\n\n              <div hidden={activeBanks.filter((bank) => bank.sectionInUI === 0).length === 0}>\n                <Typography color=\"textYellow\" align=\"center\" variant=\"h4\" gutterBottom style={{ marginTop: '40px' }}>\n                  Deprecated Farms\n                </Typography>\n                <Alert variant=\"filled\" severity=\"warning\">\n                  All farms here have ended or are ending soon. Deposits have been paused, please remove funds.\n                </Alert>\n                <Grid container spacing={3} style={{ marginTop: '20px' }}>\n                  {activeBanks\n                    .filter((bank) => bank.sectionInUI === 0)\n                    .map((bank) => (\n                      <React.Fragment key={bank.name}>\n                        <FarmCard bank={bank} />\n                      </React.Fragment>\n                    ))}\n                </Grid>\n              </div>\n            </Box>\n          </Container>\n        </Route>\n        <Route path={`${path}/:bankId`}>\n          <BackgroundImage />\n          <Bank />\n        </Route>\n      </Page>\n    </Switch>\n  );\n};\n\nexport default Farm;\n","import {useCallback} from 'react';\nimport {TransactionResponse} from '@ethersproject/providers';\nimport {useTransactionAdder} from '../state/transactions/hooks';\nimport {useAddPopup} from '../state/application/hooks';\n\nfunction useHandleTransactionReceipt(): (promise: Promise<TransactionResponse>, summary: string) => void {\n  const addTransaction = useTransactionAdder();\n  const addPopup = useAddPopup();\n\n  return useCallback(\n    (promise: Promise<TransactionResponse>, summary: string) => {\n      promise\n        .then((tx) => addTransaction(tx, {summary}))\n        .catch((err) => {\n          if (err.message.includes('User denied')) {\n            // User denied transaction signature on MetaMask.\n            return;\n          }\n          const message = `Unable to ${summary[0].toLowerCase()}${summary.slice(1)}`;\n          console.error(`${message}: ${err.message || err.stack}`);\n          addPopup({error: {message, stack: err.message || err.stack}});\n        });\n    },\n    [addPopup, addTransaction],\n  );\n}\n\nexport default useHandleTransactionReceipt;\n","import {TransactionResponse} from '@ethersproject/providers';\nimport {useCallback, useMemo} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {useWallet} from 'use-wallet';\n\nimport {AppDispatch, AppState} from '../index';\nimport {addTransaction, clearAllTransactions} from './actions';\nimport {TransactionDetails} from './reducer';\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {summary?: string; approval?: {tokenAddress: string; spender: string}},\n) => void {\n  const {chainId, account} = useWallet();\n  const dispatch = useDispatch<AppDispatch>();\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {summary, approval}: {summary?: string; approval?: {tokenAddress: string; spender: string}} = {},\n    ) => {\n      if (!account) return;\n      if (!chainId) return;\n\n      const {hash} = response;\n      if (!hash) {\n        throw Error('No transaction hash found.');\n      }\n      dispatch(addTransaction({hash, from: account, chainId, approval, summary}));\n    },\n    [dispatch, chainId, account],\n  );\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): {[txHash: string]: TransactionDetails} {\n  const {chainId} = useWallet();\n  const state = useSelector<AppState, AppState['transactions']>((state) => state.transactions);\n\n  return chainId ? state[chainId] ?? {} : {};\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions();\n  if (!transactionHash || !transactions[transactionHash]) {\n    return false;\n  }\n  return !transactions[transactionHash].receipt;\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000;\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions();\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash];\n        if (!tx) return false;\n        if (tx.receipt) {\n          return false;\n        } else {\n          const approval = tx.approval;\n          if (!approval) return false;\n          return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx);\n        }\n      }),\n    [allTransactions, spender, tokenAddress],\n  );\n}\n\nexport function useClearAllTransactions(): {clearAllTransactions: () => void} {\n  const {chainId} = useWallet();\n  const dispatch = useDispatch<AppDispatch>();\n  return {\n    clearAllTransactions: useCallback(() => dispatch(clearAllTransactions({chainId})), [dispatch, chainId]),\n  };\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode;\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void;\n  placeholder?: string;\n  startAdornment?: React.ReactNode;\n  value: string;\n}\n\nconst Input: React.FC<InputProps> = ({endAdornment, onChange, placeholder, startAdornment, value}) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  );\n};\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.color.grey[200]};\n  border-radius: ${(props) => props.theme.borderRadius}px;\n  display: flex;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`;\n\nconst StyledInput = styled.input`\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.color.grey[600]};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`;\n\nexport default Input;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport {Button} from '@material-ui/core';\nimport Input, {InputProps} from '../Input';\n\ninterface TokenInputProps extends InputProps {\n  max: number | string;\n  symbol: string;\n  onSelectMax?: () => void;\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({max, symbol, onChange, onSelectMax, value}) => {\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} Available\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            {/* <StyledTokenSymbol>{symbol}</StyledTokenSymbol> */}\n            <StyledSpacer />\n            <div>\n              <Button size=\"small\" color=\"primary\" variant=\"contained\" onClick={onSelectMax}>\n                Max\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n    </StyledTokenInput>\n  );\n};\n\n/*\n            <div>\n              <Button size=\"sm\" text=\"Max\" />\n            </div>\n*/\n\nconst StyledTokenInput = styled.div``;\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`;\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`;\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.color.grey[400]};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`;\n\nexport default TokenInput;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst ModalActions: React.FC = ({children}) => {\n  const l = React.Children.toArray(children).length;\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <StyledSpacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  );\n};\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.color.grey[100]}00;\n  display: flex;\n  height: 96px;\n  margin: ${(props) => props.theme.spacing[4]}px ${(props) => -props.theme.spacing[4]}px\n    ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n`;\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`;\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[4]}px;\n`;\n\nexport default ModalActions;\n","import { useCallback, useEffect, useState } from 'react';\nimport { useWallet } from 'use-wallet';\nimport { BigNumber } from 'ethers';\nimport ERC20 from '../bomb-finance/ERC20';\n\nconst useAllowance = (token: ERC20, spender: string, pendingApproval?: boolean) => {\n  const [allowance, setAllowance] = useState<BigNumber>(null);\n  const { account } = useWallet();\n\n  const fetchAllowance = useCallback(async () => {\n    const allowance = await token.allowance(account, spender);\n    setAllowance(allowance);\n  }, [account, spender, token]);\n\n  useEffect(() => {\n    if (account && spender && token) {\n      fetchAllowance().catch((err) => console.error(`Failed to fetch allowance: ${err.stack}`));\n    }\n  }, [account, spender, token, pendingApproval, fetchAllowance]);\n\n  return allowance;\n};\n\nexport default useAllowance;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface CardIconProps {\n  children?: React.ReactNode;\n}\n\nconst CardIcon: React.FC<CardIconProps> = ({children}) => <StyledCardIcon>{children}</StyledCardIcon>;\n\nconst StyledCardIcon = styled.div`\n  background-color: #363746;\n  font-size: 36px;\n  height: 95px;\n  width: 95px;\n  border-radius: 95px;\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  margin: 0 auto ${(props) => props.theme.spacing[3]}px;\n`;\n\nexport default CardIcon;\n","import {BigNumber, ethers} from 'ethers';\nimport {useCallback, useMemo} from 'react';\nimport {useHasPendingApproval, useTransactionAdder} from '../state/transactions/hooks';\nimport useAllowance from './useAllowance';\nimport ERC20 from '../bomb-finance/ERC20';\n\nconst APPROVE_AMOUNT = ethers.constants.MaxUint256;\nconst APPROVE_BASE_AMOUNT = BigNumber.from('1000000000000000000000000');\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nfunction useApprove(token: ERC20, spender: string): [ApprovalState, () => Promise<void>] {\n  const pendingApproval = useHasPendingApproval(token.address, spender);\n  const currentAllowance = useAllowance(token, spender, pendingApproval);\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN;\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lt(APPROVE_BASE_AMOUNT)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED;\n  }, [currentAllowance, pendingApproval]);\n\n  const addTransaction = useTransactionAdder();\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily');\n      return;\n    }\n\n    const response = await token.approve(spender, APPROVE_AMOUNT);\n    addTransaction(response, {\n      summary: `Approve ${token.symbol}`,\n      approval: {\n        tokenAddress: token.address,\n        spender: spender,\n      },\n    });\n  }, [approvalState, token, spender, addTransaction]);\n\n  return [approvalState, approve];\n}\n\nexport default useApprove;\n","import React from 'react';\nimport {Box} from '@material-ui/core';\nimport AccountButton from '../Nav/AccountButton';\n\nconst UnlockWallet = () => {\n  return (\n    <Box style={{'textAlign': 'center', 'marginTop': '25px'}}>\n      <AccountButton />\n      {/* <Button color=\"primary\" variant=\"contained\" onClick={() => connect('injected')}>Unlock Wallet</Button> */}\n    </Box>\n  );\n};\n\nexport default UnlockWallet;\n","import React from 'react';\n\nimport styled from 'styled-components';\n\ninterface ValueProps {\n  value: string;\n}\n\nconst Value: React.FC<ValueProps> = ({value}) => {\n  return <StyledValue>{value}</StyledValue>;\n};\n\nconst StyledValue = styled.div`\n  font-size: 36px;\n  font-weight: 700;\n`;\n\nexport default Value;\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport interface IconProps {\n  color?: string;\n  children?: string;\n}\n\nconst Icon: React.FC = ({children}) => <StyledIcon>{children}</StyledIcon>;\n\nconst StyledIcon = styled.div``;\n\nexport default Icon;\n","import React, {useContext} from 'react';\nimport {ThemeContext} from 'styled-components';\n\nimport Icon, {IconProps} from '../Icon';\n\nconst AddIcon: React.FC<IconProps> = ({color}) => {\n  const {color: themeColor} = useContext(ThemeContext);\n  return (\n    <Icon>\n      <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\" fill={color ? color : themeColor.grey[400]} />\n      </svg>\n    </Icon>\n  );\n};\n\nexport default AddIcon;\n","import React, {useContext} from 'react';\nimport {ThemeContext} from 'styled-components';\n\nimport Icon, {IconProps} from '../Icon';\n\nconst RemoveIcon: React.FC<IconProps> = ({color}) => {\n  const {color: themeColor} = useContext(ThemeContext);\n  return (\n    <Icon>\n      <svg viewBox=\"0 0 24 24\" fill={color ? color : themeColor.grey[400]} width=\"18px\" height=\"18px\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 13H5v-2h14v2z\" />\n      </svg>\n    </Icon>\n  );\n};\n\nexport default RemoveIcon;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport {Link} from 'react-router-dom';\n\ninterface IconButtonProps {\n  children?: React.ReactNode;\n  disabled?: boolean;\n  onClick?: () => void;\n  to?: string;\n}\n\nconst IconButton: React.FC<IconButtonProps> = ({children, disabled, onClick, to}) => {\n  return (\n    <StyledButton disabled={disabled} onClick={onClick}>\n      {!!to ? <StyledLink to={to}>{children}</StyledLink> : children}\n    </StyledButton>\n  );\n};\n\ninterface StyledButtonProps {\n  disabled?: boolean;\n}\n/*\n  box-shadow: 6px 6px 12px ${props => props.theme.color.grey[600]},\n    -12px -12px 24px ${props => props.theme.color.grey[800]}aa;\n */\n\n// background-color: ${(props) => (!props.disabled ? '#571eb1' : props.theme.color.grey[900])};\n// color: ${(props) => (!props.disabled ? props.theme.color.primary.main : props.theme.color.grey[500])};\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  align-items: center;\n  border: 2px solid;\n  border-radius: 28px;\n  background-color: #171923;\n  box-shadow: ${(props) => ('0px 0px 5px 0px ' + !props.disabled ? 'rgba(251,221,76,1)' : 'grey' )};\n  color: ${(props) => (!props.disabled ? '#f9d749' : 'grey')};\n  cursor: pointer;\n  display: flex;\n  font-weight: 700;\n  height: 56px;\n  justify-content: center;\n  letter-spacing: 1px;\n  outline: none;\n  padding: 0;\n  margin: 0;\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\n  text-transform: uppercase;\n  width: 56px;\n\n  &:hover {\n    background-color: #f9d749;\n    color: #171923;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`;\n\nexport default IconButton;\n"],"sourceRoot":""}