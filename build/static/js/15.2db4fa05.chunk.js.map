{"version":3,"sources":["hooks/useBondStats.ts","hooks/useTotalValueLocked.ts","hooks/useLpStats.ts","hooks/useZap.ts","hooks/useApproveZapper.ts","views/Bank/components/ZapModal.tsx","hooks/useLpStatsBTC.ts","views/Home/Home.js","hooks/useHandleTransactionReceipt.ts","state/transactions/hooks.tsx","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","components/ModalActions/ModalActions.tsx","hooks/useAllowance.ts","components/CardIcon/CardIcon.tsx"],"names":["useBondStats","useState","stat","setStat","slowRefresh","useRefresh","bombFinance","useBombFinance","useEffect","a","getBondStat","console","error","fetchBondPrice","useTotalValueLocked","totalValueLocked","setTotalValueLocked","getTotalValueLocked","fetchTVL","useLpStats","lpTicker","getLPStat","fetchLpPrice","useZap","bank","handleTransactionReceipt","useHandleTransactionReceipt","onZap","useCallback","zappingToken","tokenName","amount","zapIn","depositTokenName","ApprovalState","APPROVE_AMOUNT","ethers","constants","MaxUint256","APPROVE_BASE_AMOUNT","BigNumber","from","useApproveZapper","token","BNB_TICKER","BNB","BOMB_TICKER","BOMB","BSHARE_TICKER","BSHARE","BTC_TICKER","externalTokens","pendingApproval","useHasPendingApproval","address","ZAPPER_ROUTER_ADDR","currentAllowance","useAllowance","approvalState","useMemo","APPROVED","lt","PENDING","NOT_APPROVED","UNKNOWN","addTransaction","useTransactionAdder","approve","response","summary","symbol","approval","tokenAddress","spender","StyledActionSpacer","styled","div","props","theme","spacing","StyledDescriptionText","color","grey","StyledMenuItem","withStyles","root","backgroundColor","selected","MenuItem","ZapModal","onConfirm","onDismiss","decimals","balance","useWallet","ftmBalance","Number","toFixed","toString","bombBalance","useTokenBalance","bshareBalance","btcBalance","BTC","val","setVal","setZappingToken","zappingTokenBalance","setZappingTokenBalance","token0","token1","estimate","setEstimate","approveZapperStatus","approveZapper","bombFtmLpStats","tShareFtmLpStats","bombLPStats","bshareLPStats","ftmAmountPerLP","startsWith","ftmAmount","handleChange","e","currentTarget","value","n","isNaN","parseFloat","isFinite","estimateZapIn","String","estimateZap","handleSelectMax","Modal","ModalTitle","text","InputLabel","style","id","Select","onChange","event","target","getDisplayBalance","labelId","TokenInput","onSelectMax","max","Label","ModalActions","Button","variant","onClick","Alert","severity","useLpStatsBTC","getLPStatBTC","BackgroundImage","createGlobalStyle","HomeImage","useStyles","makeStyles","button","breakpoints","down","Home","classes","TVL","bShareFtmLpStats","bombStats","useBombStats","bShareStats","usebShareStats","tBondStats","bombPriceInDollars","priceInDollars","bombPriceInBNB","tokenInFtm","bombCirculatingSupply","circulatingSupply","bombTotalSupply","totalSupply","bSharePriceInDollars","bSharePriceInBNB","bShareCirculatingSupply","bShareTotalSupply","tBondPriceInDollars","tBondPriceInBNB","tBondCirculatingSupply","tBondTotalSupply","bombLpZap","bshareLpZap","useModal","onDissmissBombZap","onPresentBombZap","onDissmissBshareZap","onPresentBshareZap","modal","setModal","videoLoading","setVideoLoading","Page","Helmet","Grid","container","item","xs","sm","display","justifyContent","verticalAlign","overflow","src","BombImage","alt","maxHeight","Paper","Box","p","textAlign","href","rel","className","arial-label","fadeIn","onLoad","loading","width","height","title","frameBorder","allow","allowFullscreen","justify","margin","Card","CardContent","align","fontSize","end","separator","prefix","marginTop","position","mt","CardIcon","TokenSymbol","watchAssetInMetamask","top","right","border","filter","MetamaskFox","marginBottom","alignContent","roundAndFormatNumber","disabled","tokenAmount","priceOfOne","totalLiquidity","addPopup","useAddPopup","promise","then","tx","catch","err","message","includes","toLowerCase","slice","stack","chainId","account","dispatch","useDispatch","hash","Error","useAllTransactions","state","useSelector","transactions","allTransactions","Object","keys","some","receipt","Date","getTime","addedTime","isTransactionRecent","StyledInputWrapper","borderRadius","StyledInput","input","Input","endAdornment","placeholder","startAdornment","StyledTokenInput","StyledSpacer","StyledTokenAdornmentWrapper","StyledMaxText","toLocaleString","size","StyledModalActions","StyledModalAction","children","l","React","Children","toArray","length","map","child","i","allowance","setAllowance","fetchAllowance","StyledCardIcon"],"mappings":"qLAwBeA,IAnBM,WACnB,MAAwBC,qBAAxB,mBAAOC,EAAP,KAAaC,EAAb,KACOC,EAAeC,cAAfD,YACDE,EAAcC,cAapB,OAXAC,qBAAU,WAAM,4CACd,sBAAAC,EAAA,2EAEIN,EAFJ,SAEkBG,EAAYI,cAF9B,kFAIIC,QAAQC,MAAR,MAJJ,0DADc,uBAAC,WAAD,wBAQdC,KACC,CAACV,EAASG,EAAaF,IAEnBF,I,+FCEMY,IAnBa,WAC1B,MAAgDb,mBAAiB,GAAjE,mBAAOc,EAAP,KAAyBC,EAAzB,KACOZ,EAAeC,cAAfD,YACDE,EAAcC,cAapB,OAXAC,qBAAU,WAAM,4CACd,sBAAAC,EAAA,2EAEIO,EAFJ,SAE8BV,EAAYW,sBAF1C,kFAIIN,QAAQC,MAAR,MAJJ,0DADc,uBAAC,WAAD,wBAQdM,KACC,CAACF,EAAqBV,EAAaF,IAE/BW,I,+FCIMI,IAnBI,SAACC,GAClB,MAAwBnB,qBAAxB,mBAAOC,EAAP,KAAaC,EAAb,KACOC,EAAeC,cAAfD,YACDE,EAAcC,cAapB,OAXAC,qBAAU,WAAM,4CACd,sBAAAC,EAAA,2EAEIN,EAFJ,SAEkBG,EAAYe,UAAUD,GAFxC,kFAIIT,QAAQC,MAAR,MAJJ,0DADc,uBAAC,WAAD,wBAQdU,KACC,CAACnB,EAASG,EAAaF,EAAagB,IAEhClB,I,kCCrBT,6BAqBeqB,IAhBA,SAACC,GACd,IAAMlB,EAAcC,cACdkB,EAA2BC,cAWjC,MAAO,CAACC,MATUC,uBAChB,SAACC,EAAsBC,EAAmBC,GACxCN,EACEnB,EAAY0B,MAAMH,EAAcC,EAAWC,GADrB,cAEfA,EAFe,eAEFP,EAAKS,iBAFH,QAK1B,CAACT,EAAMlB,EAAamB,O,sCCLZS,E,sPAHNC,EAAiBC,IAAOC,UAAUC,WAClCC,EAAsBC,IAAUC,KAAK,8B,SAE/BP,O,qBAAAA,I,+BAAAA,I,qBAAAA,I,wBAAAA,M,KAqDGQ,I,IAAAA,EA7Cf,SAA0Bb,GACxB,IACIc,EADErC,EAAcC,cAEhBsB,IAAiBe,IAAYD,EAAQrC,EAAYuC,IAC5ChB,IAAiBiB,IAAaH,EAAQrC,EAAYyC,KAClDlB,IAAiBmB,IAAeL,EAAQrC,EAAY2C,OACpDpB,IAAiBqB,MAAYP,EAAQrC,EAAY6C,eAAeD,MACzE,IAAME,EAAkBC,YAAsBV,EAAMW,QAASC,KACvDC,EAAmBC,YAAad,EAAOY,IAAoBH,GAG3DM,EAA+BC,mBAAQ,WAE3C,OAAIhB,IAAUrC,EAAYuC,IAAYX,EAAc0B,SAC/CJ,EAGEA,EAAiBK,GAAGtB,GACvBa,EACElB,EAAc4B,QACd5B,EAAc6B,aAChB7B,EAAc0B,SAPY1B,EAAc8B,UAQ3C,CAACR,EAAkBJ,EAAiBT,EAAOrC,IAExC2D,EAAiBC,cAEjBC,EAAUvC,sBAAW,sBAAC,4BAAAnB,EAAA,yDACtBiD,IAAkBxB,EAAc6B,aADV,uBAExBpD,QAAQC,MAAM,oCAFU,0CAMH+B,EAAMwB,QAAQZ,IAAoBpB,GAN/B,OAMpBiC,EANoB,OAO1BH,EAAeG,EAAU,CACvBC,QAAQ,WAAD,OAAa1B,EAAM2B,QAC1BC,SAAU,CACRC,aAAc7B,EAAMW,QACpBmB,QAASlB,OAXa,2CAczB,CAACG,EAAef,EAAOsB,IAE1B,MAAO,CAACP,EAAeS,I,UC0EnBO,EAAqBC,IAAOC,IAAV,+DACZ,SAACC,GAAD,OAAWA,EAAMC,MAAMC,QAAQ,MAChC,SAACF,GAAD,OAAWA,EAAMC,MAAMC,QAAQ,MAGpCC,EAAwBL,IAAOC,IAAV,+KAEhB,SAACC,GAAD,OAAWA,EAAMC,MAAMG,MAAMC,KAAK,QAOvCC,EAAiBC,YAAW,CAChCC,KAAM,CACJC,gBAAiB,QACjBL,MAAO,UACP,UAAW,CACTK,gBAAiB,OACjBL,MAAO,WAETM,SAAU,CACRD,gBAAiB,WATAF,CAYpBI,KAEYC,IAzIsB,SAAC,GAA2D,IAA1DC,EAAyD,EAAzDA,UAAyD,KAA9CC,UAA8C,EAAnC7D,kBAAmC,MAAvB,GAAuB,MAAnB8D,gBAAmB,MAAR,GAAQ,EACxFtF,EAAcC,cACbsF,EAAWC,cAAXD,QACDE,GAAcC,OAAOH,GAAW,MAAMI,QAAQ,GAAGC,WACjDC,EAAcC,YAAgB9F,EAAYyC,MAC1CsD,EAAgBD,YAAgB9F,EAAY2C,QAC5CqD,EAAaF,YAAgB9F,EAAYiG,KAC/C,EAAsBtG,mBAAS,IAA/B,mBAAOuG,EAAP,KAAYC,EAAZ,KACA,EAAwCxG,mBAAS2C,KAAjD,mBAAOf,EAAP,KAAqB6E,EAArB,KACA,EAAsDzG,mBAAS8F,GAA/D,mBAAOY,EAAP,KAA4BC,EAA5B,KACA,EAAgC3G,mBAAS,CAAC4G,OAAQ,IAAKC,OAAQ,MAA/D,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA6CtE,EAAiBb,GAA9D,oBAAOoF,GAAP,MAA4BC,GAA5B,MACMC,GAAiBhG,YAAW,gBAC5BiG,GAAmBjG,YAAW,iBAC9BkG,GAAc1D,mBAAQ,kBAAOwD,IAAkC,OAAO,CAACA,KACvEG,GAAgB3D,mBAAQ,kBAAOyD,IAAsC,OAAO,CAACA,KAC7EG,GAAiBzF,EAAU0F,WAAW1E,KAArB,OAAoCuE,SAApC,IAAoCA,QAApC,EAAoCA,GAAaI,UAAjD,OAA6DH,SAA7D,IAA6DA,QAA7D,EAA6DA,GAAeG,UASnG,IAeMC,GAAY,uCAAG,WAAOC,GAAP,eAAAlH,EAAA,yDACW,KAA1BkH,EAAEC,cAAcC,OAA0C,IAA1BF,EAAEC,cAAcC,QAClDpB,EAAOkB,EAAEC,cAAcC,OACvBb,EAAY,CAACH,OAAQ,IAAKC,OAAQ,OArBnBgB,EAuBFH,EAAEC,cAAcC,OAtBvBE,MAAMC,WAAWF,KAAOG,SAASH,GAiBtB,wDAMnBrB,EAAOkB,EAAEC,cAAcC,OANJ,SAOOvH,EAAY4H,cAAcrG,EAAcC,EAAWqG,OAAOR,EAAEC,cAAcC,QAPjF,OAObO,EAPa,OAQnBpB,EAAY,CAACH,OAAQuB,EAAY,GAAGlC,WAAYY,OAAQsB,EAAY,GAAGlC,aARpD,iCAlBrB,IAAmB4B,IAkBE,OAAH,sDAWZO,GAAe,uCAAG,4BAAA5H,EAAA,6DACtBgG,EAAOE,GADe,SAEIrG,EAAY4H,cAAcrG,EAAcC,EAAWqG,OAAOxB,IAF9D,OAEhByB,EAFgB,OAGtBpB,EAAY,CAACH,OAAQuB,EAAY,GAAGlC,WAAYY,OAAQsB,EAAY,GAAGlC,aAHjD,2CAAH,qDAMrB,OACE,kBAACoC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,KAAI,iBAAY1G,KAE5B,kBAAC4C,EAAD,MACA,kBAAC+D,EAAA,EAAD,CAAYC,MAAO,CAACzD,MAAO,WAAY0D,GAAG,SAA1C,4BAGA,kBAACC,EAAA,EAAD,CAAQC,SAxCc,SAACC,GACzB,IAAMjB,EAAQiB,EAAMC,OAAOlB,MAC3BnB,EAAgBmB,GAChBjB,EAAuBb,GACnB+C,EAAMC,OAAOlB,QAAU7E,KACzB4D,EAAuBoC,YAAkB3C,EAAeT,IAEtDkD,EAAMC,OAAOlB,QAAU/E,KACzB8D,EAAuBoC,YAAkB7C,EAAaP,IAEpDkD,EAAMC,OAAOlB,QAAU3E,KACzB0D,EAAuBoC,YAAkB1C,EAAYV,KA6BhB8C,MAAO,CAACzD,MAAO,WAAYgE,QAAQ,QAAQN,GAAG,SAASd,MAAOhG,GACjG,kBAACsD,EAAD,CAAgB0C,MAAOjF,KAAvB,OACA,kBAACuC,EAAD,CAAgB0C,MAAO7E,KAAvB,WAKF,kBAACkG,EAAA,EAAD,CACEC,YAAad,GACbQ,SAAUnB,GACVG,MAAOrB,EACP4C,IAAKzC,EACLrC,OAAQzC,IAEV,kBAACwH,EAAA,EAAD,CAAOb,KAAK,oBACZ,kBAACxD,EAAD,KACG,IACAlD,EAFH,KAEgBkE,OAAOe,EAASF,QAAUb,OAAOuB,KAEjD,kBAACvC,EAAD,KACG,IADH,IAEIgB,OAAOe,EAASF,QAFpB,IAE8B/E,EAAU0F,WAAWxE,KAAiBA,IAAgBJ,IAFpF,KAEkG,IAC/FoD,OAAOe,EAASD,QAHnB,IAG6BhF,EAAU0F,WAAWxE,KAAiBJ,IAAaI,IAHhF,IAGgG,KAEhG,kBAACsG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEtE,MAAM,UACNuE,QAAQ,YACRC,QAAS,kBACPxC,KAAwB/E,EAAc0B,SAAWsD,KAAkBxB,EAAU7D,EAAcC,EAAW0E,KAGvGS,KAAwB/E,EAAc0B,SAAW,UAAY,aAIlE,kBAACc,EAAD,MACA,kBAACgF,EAAA,EAAD,CAAOF,QAAQ,SAASG,SAAS,QAAjC,yC,oPCxGSC,EAnBO,SAACxI,GACrB,MAAwBnB,qBAAxB,mBAAOC,EAAP,KAAaC,EAAb,KACOC,EAAeC,cAAfD,YACDE,EAAcC,cAapB,OAXAC,qBAAU,WAAM,4CACd,sBAAAC,EAAA,2EAEIN,EAFJ,SAEkBG,EAAYuJ,aAAazI,GAF3C,kFAIIT,QAAQC,MAAR,MAJJ,0DADc,uBAAC,WAAD,wBAQdU,KACC,CAACnB,EAASG,EAAaF,EAAagB,IAEhClB,G,0OCWH4J,EAAkBC,YAAH,+JAECC,KAchBC,EAAYC,aAAW,SAACpF,GAAD,MAAY,CACvCqF,OAAO,eACJrF,EAAMsF,YAAYC,KAAK,OAAS,QAydtBC,EAndF,WACX,IAAMC,EAAUN,IACVO,EAAM1J,cACNqG,EAAiByC,EAAc,gBAC/Ba,EAAmBtJ,YAAW,iBAC9BuJ,EAAYC,cACZC,EAAcC,cACdC,EAAa9K,cACbM,EAAcC,cAmBd8G,EAAc1D,mBAAQ,kBAAOwD,GAAkC,OAAO,CAACA,IACvEG,EAAgB3D,mBAAQ,kBAAO8G,GAAsC,OAAO,CAACA,IAC7EM,EAAqBpH,mBACzB,kBAAO+G,EAAY1E,OAAO0E,EAAUM,gBAAgB/E,QAAQ,GAAK,OACjE,CAACyE,IAEGO,EAAiBtH,mBAAQ,kBAAO+G,EAAY1E,OAAO0E,EAAUQ,YAAYjF,QAAQ,GAAK,OAAO,CAACyE,IAC9FS,EAAwBxH,mBAAQ,kBAAO+G,EAAYvC,OAAOuC,EAAUU,mBAAqB,OAAO,CAACV,IACjGW,EAAkB1H,mBAAQ,kBAAO+G,EAAYvC,OAAOuC,EAAUY,aAAe,OAAO,CAACZ,IAErFa,EAAuB5H,mBAC3B,kBAAOiH,EAAc5E,OAAO4E,EAAYI,gBAAgB/E,QAAQ,GAAK,OACrE,CAAC2E,IAEGY,EAAmB7H,mBACvB,kBAAOiH,EAAc5E,OAAO4E,EAAYM,YAAYjF,QAAQ,GAAK,OACjE,CAAC2E,IAEGa,EAA0B9H,mBAC9B,kBAAOiH,EAAczC,OAAOyC,EAAYQ,mBAAqB,OAC7D,CAACR,IAEGc,EAAoB/H,mBAAQ,kBAAOiH,EAAczC,OAAOyC,EAAYU,aAAe,OAAO,CAACV,IAE3Fe,EAAsBhI,mBAC1B,kBAAOmH,EAAa9E,OAAO8E,EAAWE,gBAAgB/E,QAAQ,GAAK,OACnE,CAAC6E,IAEGc,EAAkBjI,mBAAQ,kBAAOmH,EAAa9E,OAAO8E,EAAWI,YAAYjF,QAAQ,GAAK,OAAO,CAAC6E,IACjGe,EAAyBlI,mBAC7B,kBAAOmH,EAAa3C,OAAO2C,EAAWM,mBAAqB,OAC3D,CAACN,IAEGgB,EAAmBnI,mBAAQ,kBAAOmH,EAAa3C,OAAO2C,EAAWQ,aAAe,OAAO,CAACR,IAExFiB,GAAYxK,YAAO,CAAEU,iBAAkB,iBACvC+J,GAAczK,YAAO,CAAEU,iBAAkB,kBAE/C,GAA8CgK,YAC5C,kBAACxG,EAAA,EAAD,CACEG,SAAU,GACVF,UAAW,SAAC7D,EAAcC,EAAWC,GAC/BiE,OAAOjE,IAAW,GAAKgG,MAAM/B,OAAOjE,MACxCgK,GAAUpK,MAAME,EAAcC,EAAWC,GACzCmK,OAEFpK,UAAW,kBARf,qBAAOqK,GAAP,MAAyBD,GAAzB,MAYA,GAAkDD,YAChD,kBAACxG,EAAA,EAAD,CACEG,SAAU,GACVF,UAAW,SAAC7D,EAAcC,EAAWC,GAC/BiE,OAAOjE,IAAW,GAAKgG,MAAM/B,OAAOjE,MACxCiK,GAAYrK,MAAME,EAAcC,EAAWC,GAC3CqK,OAEFtK,UAAW,mBARf,qBAAOuK,GAAP,MAA2BD,GAA3B,MAYA,GAA0BnM,oBAAS,GAAnC,qBAAOqM,GAAP,MAAcC,GAAd,MACA,GAAwCtM,oBAAS,GAAjD,qBAAOuM,GAAP,MAAqBC,GAArB,MA4BA,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,+BA1IM,qCA4IR,kBAAC7C,EAAD,MACA,kBAAC8C,EAAA,EAAD,CAAMC,WAAS,EAAC9H,QAAS,GAEvB,kBAAC6H,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,GACJC,GAAI,EACJtE,MAAO,CAAEuE,QAAS,OAAQC,eAAgB,SAAUC,cAAe,SAAUC,SAAU,WAEvF,yBAAKC,IAAKC,IAAWC,IAAI,aAAa7E,MAAO,CAAE8E,UAAW,YAG5D,kBAACZ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACS,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,EAAG,EAAGjF,MAAO,CAAEkF,UAAW,WAC7B,kEACA,2BACE,sHAEF,2BACE,oFAIF,sCAEW,IACT,uBACEC,KAAK,4BACLC,IAAI,sBACJ/E,OAAO,SACPL,MAAO,CAAEzD,MAAO,YAJlB,YAOK,IAVP,KAWK,IACH,uBACE4I,KAAK,6BACLC,IAAI,sBACJ/E,OAAO,SACPL,MAAO,CAAEzD,MAAO,YAJlB,WAOK,IAnBP,qBAuBA,4BAAQwE,QA9EF,WAChB8C,IAAUD,KA6E4ByB,UAAU,wBAAtC,mBAEGzB,GACC,6BAASyB,UAAU,aACjB,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,iBAAiBzB,MAAOA,IACrC,kBAAC,IAAD,CAAgByB,UAAU,eAAeC,cAAY,cAAcvE,QAAS8C,KAC5E,yBAAKwB,UAAU,sBACZvB,GACC,yBAAKuB,UAAU,kBACZ,IACD,kBAAC,IAAD,CAAaA,UAAU,uBAAuBE,OAAO,UAErD,KACJ,4BACEF,UAAU,qBACVG,OA1FV,WACdzB,IAAiBD,KA0FO2B,QAAQ,OACRC,MAAM,MACNC,OAAO,MACPhB,IAAI,4CACJiB,MAAM,mBACNC,YAAY,IACZC,MAAM,2FACNC,iBAAe,QAMvB,SAMZ,kBAAC7B,EAAA,EAAD,CAAMC,WAAS,EAAC9H,QAAS,GACvB,kBAAC6H,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAI0B,QAAQ,SAAShG,MAAO,CAAEiG,OAAQ,OAAQ1B,QAAS,SAC5E,kBAACvD,EAAA,EAAD,CAAOF,QAAQ,SAASG,SAAS,QAC/B,wEACA,oFAA6D,IAC7D,kBAACJ,EAAA,EAAD,CACEsE,KAAK,iFACL9E,OAAQ,SACRgF,UAAU,cACVrF,MAAO,CAAEiG,OAAQ,SAJnB,mBAaN,kBAAC/B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAAC4B,EAAA,EAAD,CAAMlG,MAAO,CAAC,WAAc,SAC1B,kBAACmG,EAAA,EAAD,CAAaC,MAAM,UACjB,kDACA,kBAAC,IAAD,CAASpG,MAAO,CAAEqG,SAAU,QAAUC,IAAKxE,EAAKyE,UAAU,IAAIC,OAAO,SAM3E,kBAACtC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAAC4B,EAAA,EAAD,CAAMlG,MAAO,CAAE2F,OAAQ,SACrB,kBAACQ,EAAA,EAAD,CAAaC,MAAM,SAASpG,MAAO,CAAEyG,UAAW,SAE9C,kBAAC5F,EAAA,EAAD,CAAQsE,KAAK,qBAAqBE,UAAU,mBAAmBrF,MAAO,CAAEiG,OAAQ,QAAhF,cAGA,kBAACpF,EAAA,EAAD,CACEsE,KA7NZ,6IA8NYnF,MAAO,CAAEiG,OAAQ,OACjB5F,OAAO,SACPgF,UAAW,eAAiBxD,EAAQJ,QAJtC,YAQA,kBAACZ,EAAA,EAAD,CACEsE,KAlOZ,sGAmOYE,UAAW,eAAiBxD,EAAQJ,OACpCpB,OAAO,SACPL,MAAO,CAAEiG,OAAQ,QAJnB,cAQA,kBAACpF,EAAA,EAAD,CACEsE,KAxOZ,6IAyOYE,UAAW,eAAiBxD,EAAQJ,OACpCpB,OAAO,SACPL,MAAO,CAAEiG,OAAQ,QAJnB,YAQA,kBAACpF,EAAA,EAAD,CACER,OAAO,SACP8E,KAAK,yEACLE,UAAU,cACVrF,MAAO,CAAEiG,OAAQ,QAJnB,cAQA,kBAACpF,EAAA,EAAD,CACER,OAAO,SACP8E,KAAK,yEACLE,UAAU,cACVrF,MAAO,CAAEiG,OAAQ,QAJnB,mBAaN,kBAAC/B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAAC4B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAaC,MAAM,SAASpG,MAAO,CAAE0G,SAAU,aAC7C,kBAAC1B,EAAA,EAAD,CAAK2B,GAAI,GACP,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAajL,OAAO,WAGxB,kBAACiF,EAAA,EAAD,CACEE,QAAS,WACPnJ,EAAYkP,qBAAqB,SAEnC9G,MAAO,CAAE0G,SAAU,WAAYK,IAAK,OAAQC,MAAO,OAAQC,OAAQ,mBAElE,IACD,gCAPF,WAQE,yBAAKpC,IAAI,eAAe7E,MAAO,CAAE0F,MAAO,OAAQwB,OAAQ,mBAAqBvC,IAAKwC,OAEpF,wBAAInH,MAAO,CAAEoH,aAAc,SAA3B,QAhBF,0BAkBE,kBAACpC,EAAA,EAAD,KACE,0BAAMhF,MAAO,CAAEqG,SAAU,OAAQ9J,MAAO,UACrCgG,GAAkC,SADrC,SAIF,kBAACyC,EAAA,EAAD,KACE,0BAAMhF,MAAO,CAAEqG,SAAU,OAAQgB,aAAc,eAA/C,IACIhF,EAAqBiF,YAAqBjF,EAAoB,GAAK,OADvE,YAIF,0BAAMrC,MAAO,CAAEqG,SAAU,SAAzB,gBACgBiB,YAAqB7E,EAAwBJ,EAAoB,GADjF,IACqF,6BADrF,uBAEuBiF,YAAqB7E,EAAuB,GAFnE,IAEuE,6BAFvE,iBAGiB6E,YAAqB3E,EAAiB,OAO7D,kBAACuB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAAC4B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAaC,MAAM,SAASpG,MAAO,CAAE0G,SAAU,aAC7C,kBAAC7F,EAAA,EAAD,CACEE,QAAS,WACPnJ,EAAYkP,qBAAqB,WAEnC9G,MAAO,CAAE0G,SAAU,WAAYK,IAAK,OAAQC,MAAO,OAAQC,OAAQ,mBAElE,IACD,gCAPF,WAQE,yBAAKpC,IAAI,eAAe7E,MAAO,CAAE0F,MAAO,OAAQwB,OAAQ,mBAAqBvC,IAAKwC,OAEpF,kBAACnC,EAAA,EAAD,CAAK2B,GAAI,GACP,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAajL,OAAO,aAGxB,wBAAIoE,MAAO,CAAEoH,aAAc,SAA3B,UAhBF,gBAkBE,kBAACpC,EAAA,EAAD,KACE,0BAAMhF,MAAO,CAAEqG,SAAU,OAAQ9J,MAAO,UACrCuG,GAAsC,SADzC,SAIF,kBAACkC,EAAA,EAAD,KACE,0BAAMhF,MAAO,CAAEqG,SAAU,SAAzB,IACIxD,GAA8C,OADlD,cAIF,0BAAM7C,MAAO,CAAEqG,SAAU,SAAzB,gBACgBiB,aAAsBvE,EAA0BF,GAAsBtF,QAAQ,GAAI,GAAI,IACpG,6BAFF,uBAGuB+J,YAAqBvE,EAAyB,GAHrE,IAGyE,6BAHzE,iBAIiBuE,YAAqBtE,EAAmB,OAO/D,kBAACkB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAAC4B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAaC,MAAM,SAASpG,MAAO,CAAE0G,SAAU,aAC7C,kBAAC7F,EAAA,EAAD,CACEE,QAAS,WACPnJ,EAAYkP,qBAAqB,UAEnC9G,MAAO,CAAE0G,SAAU,WAAYK,IAAK,OAAQC,MAAO,OAAQC,OAAQ,mBAElE,IACD,gCAPF,WAQE,yBAAKpC,IAAI,eAAe7E,MAAO,CAAE0F,MAAO,OAAQwB,OAAQ,mBAAqBvC,IAAKwC,OAEpF,kBAACnC,EAAA,EAAD,CAAK2B,GAAI,GACP,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAajL,OAAO,YAGxB,wBAAIoE,MAAO,CAAEoH,aAAc,SAA3B,SAhBF,eAkBE,kBAACpC,EAAA,EAAD,KACE,0BAAMhF,MAAO,CAAEqG,SAAU,OAAQ9J,MAAO,UACrC2G,GAAoC,SADvC,SAIF,kBAAC8B,EAAA,EAAD,KACE,0BAAMhF,MAAO,CAAEqG,SAAU,SAAzB,IAAqCpD,GAA4C,OAAjF,aAEF,0BAAMjD,MAAO,CAAEqG,SAAU,SAAzB,gBACgBiB,aAAsBnE,EAAyBF,GAAqB1F,QAAQ,GAAI,GADhG,IACoG,6BADpG,uBAEuB+J,YAAqBnE,EAAwB,GAFpE,IAEwE,6BAFxE,iBAGiBmE,YAAqBlE,EAAkB,OAK9D,kBAACc,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAAC4B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAaC,MAAM,UACjB,kBAACpB,EAAA,EAAD,CAAK2B,GAAI,GACP,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAajL,OAAO,mBAGxB,wDACA,kBAACoJ,EAAA,EAAD,CAAK2B,GAAI,GACP,kBAAC9F,EAAA,EAAD,CAAQ0G,UAAQ,EAACxG,QAAS0C,GAAkB4B,UAAU,gCAAtD,WAIF,kBAACL,EAAA,EAAD,CAAK2B,GAAI,GACP,0BAAM3G,MAAO,CAAEqG,SAAU,UACX,OAAX1H,QAAW,IAAXA,OAAA,EAAAA,EAAa6I,aAAb,OAA2B7I,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAa6I,YAAc,OADzD,UACwE,KAC1D,OAAX7I,QAAW,IAAXA,OAAA,EAAAA,EAAaI,WAAb,OAAyBJ,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAaI,UAAY,OAFrD,UAKF,kBAACiG,EAAA,EAAD,UAAkB,OAAXrG,QAAW,IAAXA,OAAA,EAAAA,EAAa8I,YAAa9I,EAAY8I,WAAa,QAC1D,0BAAMzH,MAAO,CAAEqG,SAAU,SAAzB,gBAC0B,OAAX1H,QAAW,IAAXA,OAAA,EAAAA,EAAa+I,gBAAiBJ,YAAqB3I,EAAY+I,eAAgB,GAAK,OAAQ,IACzG,6BAFF,kBAG4B,OAAX/I,QAAW,IAAXA,OAAA,EAAAA,EAAaiE,aAAc0E,YAAqB3I,EAAYiE,YAAa,GAAK,WAKrG,kBAACsB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAAC4B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAaC,MAAM,UACjB,kBAACpB,EAAA,EAAD,CAAK2B,GAAI,GACP,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAajL,OAAO,oBAGxB,yDACA,kBAACoJ,EAAA,EAAD,CAAK2B,GAAI,GACP,kBAAC9F,EAAA,EAAD,CAAQE,QAAS4C,GAAoB0B,UAAU,wBAA/C,WAIF,kBAACL,EAAA,EAAD,CAAK2B,GAAI,GACP,0BAAM3G,MAAO,CAAEqG,SAAU,UACT,OAAbzH,QAAa,IAAbA,OAAA,EAAAA,EAAe4I,aAAf,OAA6B5I,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAe4I,YAAc,OAD7D,YAC8E,KAC9D,OAAb5I,QAAa,IAAbA,OAAA,EAAAA,EAAeG,WAAf,OAA2BH,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAeG,UAAY,OAFzD,SAKF,kBAACiG,EAAA,EAAD,UAAoB,OAAbpG,QAAa,IAAbA,OAAA,EAAAA,EAAe6I,YAAa7I,EAAc6I,WAAa,QAC9D,0BAAMzH,MAAO,CAAEqG,SAAU,SAAzB,gBAEgB,OAAbzH,QAAa,IAAbA,OAAA,EAAAA,EAAe8I,gBAAiBJ,YAAqB1I,EAAc8I,eAAgB,GAAK,OACzF,6BAHF,kBAI8B,OAAb9I,QAAa,IAAbA,OAAA,EAAAA,EAAegE,aAAc0E,YAAqB1I,EAAcgE,YAAa,GAAK,e,iCCjgBjH,6BA2Be5J,IAtBf,WACE,IAAMuC,EAAiBC,cACjBmM,EAAWC,cAEjB,OAAO1O,uBACL,SAAC2O,EAAuClM,GACtCkM,EACGC,MAAK,SAACC,GAAD,OAAQxM,EAAewM,EAAI,CAACpM,eACjCqM,OAAM,SAACC,GACN,IAAIA,EAAIC,QAAQC,SAAS,eAAzB,CAIA,IAAMD,EAAO,oBAAgBvM,EAAQ,GAAGyM,eAA3B,OAA2CzM,EAAQ0M,MAAM,IACtEpQ,QAAQC,MAAR,UAAiBgQ,EAAjB,aAA6BD,EAAIC,SAAWD,EAAIK,QAChDX,EAAS,CAACzP,MAAO,CAACgQ,UAASI,MAAOL,EAAIC,SAAWD,EAAIK,eAG3D,CAACX,EAAUpM,M,iCCtBf,wGASO,SAASC,IAId,MAA2B4B,cAApBmL,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,QACVC,EAAWC,cAEjB,OAAOxP,uBACL,SACEwC,GAEI,IAAD,yDAD2F,GAA7FC,EACE,EADFA,QAASE,EACP,EADOA,SAEV,GAAK2M,GACAD,EAAL,CAEA,IAAOI,EAAQjN,EAARiN,KACP,IAAKA,EACH,MAAMC,MAAM,8BAEdH,EAASlN,YAAe,CAACoN,OAAM5O,KAAMyO,EAASD,UAAS1M,WAAUF,gBAEnE,CAAC8M,EAAUF,EAASC,IAKjB,SAASK,IAA8D,IAAD,EACpEN,EAAWnL,cAAXmL,QACDO,EAAQC,aAAgD,SAACD,GAAD,OAAWA,EAAME,gBAE/E,OAAOT,GAAO,UAAGO,EAAMP,UAAT,QAA0B,GAoBnC,SAAS5N,EAAsBmB,EAAkCC,GACtE,IAAMkN,EAAkBJ,IACxB,OAAO5N,mBACL,iBAC0B,kBAAjBa,GACY,kBAAZC,GACPmN,OAAOC,KAAKF,GAAiBG,MAAK,SAACT,GACjC,IAAMZ,EAAKkB,EAAgBN,GAC3B,IAAKZ,EAAI,OAAO,EAChB,GAAIA,EAAGsB,QACL,OAAO,EAEP,IAAMxN,EAAWkM,EAAGlM,SACpB,QAAKA,IACEA,EAASE,UAAYA,GAAWF,EAASC,eAAiBA,GAnBpE,SAA6BiM,GAClC,OAAO,IAAIuB,MAAOC,UAAYxB,EAAGyB,UAAY,MAkB4CC,CAAoB1B,SAG3G,CAACkB,EAAiBlN,EAASD,M,6HCxDzB4N,EAAqBzN,IAAOC,IAAV,8IAEF,SAACC,GAAD,OAAWA,EAAMC,MAAMG,MAAMC,KAAK,QACrC,SAACL,GAAD,OAAWA,EAAMC,MAAMuN,gBAE3B,SAACxN,GAAD,OAAWA,EAAMC,MAAMC,QAAQ,MAGxCuN,EAAc3N,IAAO4N,MAAV,8KAGN,SAAC1N,GAAD,OAAWA,EAAMC,MAAMG,MAAMC,KAAK,QAS9BsN,EA9BqB,SAAC,GAAkE,IAAjEC,EAAgE,EAAhEA,aAAc5J,EAAkD,EAAlDA,SAAU6J,EAAwC,EAAxCA,YAAaC,EAA2B,EAA3BA,eAAgB9K,EAAW,EAAXA,MACzF,OACE,kBAACuK,EAAD,OACKO,GAAkBA,EACrB,kBAACL,EAAD,CAAaI,YAAaA,EAAa7K,MAAOA,EAAOgB,SAAUA,MAC5D4J,GAAgBA,IC4BnBG,EAAmBjO,IAAOC,IAAV,0BAEhBiO,EAAelO,IAAOC,IAAV,6CACP,SAACC,GAAD,OAAWA,EAAMC,MAAMC,QAAQ,MAGpC+N,EAA8BnO,IAAOC,IAAV,sEAK3BmO,EAAgBpO,IAAOC,IAAV,6KAER,SAACC,GAAD,OAAWA,EAAMC,MAAMG,MAAMC,KAAK,QAQ9BgE,EArD+B,SAAC,GAAiD,IAAhDE,EAA+C,EAA/CA,IAAK9E,EAA0C,EAA1CA,OAAQuE,EAAkC,EAAlCA,SAAUM,EAAwB,EAAxBA,YAAatB,EAAW,EAAXA,MAClF,OACE,kBAAC+K,EAAD,KACE,kBAACG,EAAD,KACG3J,EAAI4J,iBADP,IAC0B1O,EAD1B,cAGA,kBAAC,EAAD,CACEmO,aACE,kBAACK,EAAD,KAEE,kBAACD,EAAD,MACA,6BACE,kBAACtJ,EAAA,EAAD,CAAQ0J,KAAK,QAAQhO,MAAM,UAAUuE,QAAQ,YAAYC,QAASN,GAAlE,SAMNN,SAAUA,EACV6J,YAAY,IACZ7K,MAAOA,O,6GCfTqL,EAAqBvO,IAAOC,IAAV,2KAEF,SAACC,GAAD,OAAWA,EAAMC,MAAMG,MAAMC,KAAK,QAG5C,SAACL,GAAD,OAAWA,EAAMC,MAAMC,QAAQ,MAAQ,SAACF,GAAD,OAAYA,EAAMC,MAAMC,QAAQ,MAC7E,SAACF,GAAD,OAAYA,EAAMC,MAAMC,QAAQ,MACvB,SAACF,GAAD,OAAWA,EAAMC,MAAMC,QAAQ,MAGxCoO,EAAoBxO,IAAOC,IAAV,wCAIjBiO,EAAelO,IAAOC,IAAV,6CACP,SAACC,GAAD,OAAWA,EAAMC,MAAMC,QAAQ,MAG3BuE,EAhCgB,SAAC,GAAgB,IAAf8J,EAAc,EAAdA,SACzBC,EAAIC,IAAMC,SAASC,QAAQJ,GAAUK,OAC3C,OACE,kBAACP,EAAD,KACGI,IAAMC,SAASG,IAAIN,GAAU,SAACO,EAAOC,GAAR,OAC5B,oCACE,kBAACT,EAAD,KAAoBQ,GACnBC,EAAIP,EAAI,GAAK,kBAACR,EAAD,a,oFCaTpP,IAlBM,SAACd,EAAc8B,EAAiBrB,GACnD,MAAkCnD,mBAAoB,MAAtD,mBAAO4T,EAAP,KAAkBC,EAAlB,KACQ5C,EAAYpL,cAAZoL,QAEF6C,EAAiBnS,sBAAW,sBAAC,4BAAAnB,EAAA,sEACTkC,EAAMkR,UAAU3C,EAASzM,GADhB,OAC3BoP,EAD2B,OAEjCC,EAAaD,GAFoB,2CAGhC,CAAC3C,EAASzM,EAAS9B,IAQtB,OANAnC,qBAAU,WACJ0Q,GAAWzM,GAAW9B,GACxBoR,IAAiBrD,OAAM,SAACC,GAAD,OAAShQ,QAAQC,MAAR,qCAA4C+P,EAAIK,aAEjF,CAACE,EAASzM,EAAS9B,EAAOS,EAAiB2Q,IAEvCF,I,iGCXHG,E,MAAiBrP,EAAOC,IAAV,sOASD,SAACC,GAAD,OAAWA,EAAMC,MAAMC,QAAQ,MAGnCuK,EAd2B,SAAC,GAAD,IAAE8D,EAAF,EAAEA,SAAF,OAAgB,kBAACY,EAAD,KAAiBZ","file":"static/js/15.2db4fa05.chunk.js","sourcesContent":["import {useEffect, useState} from 'react';\nimport useBombFinance from './useBombFinance';\nimport {TokenStat} from '../bomb-finance/types';\nimport useRefresh from './useRefresh';\n\nconst useBondStats = () => {\n  const [stat, setStat] = useState<TokenStat>();\n  const {slowRefresh} = useRefresh();\n  const bombFinance = useBombFinance();\n\n  useEffect(() => {\n    async function fetchBondPrice() {\n      try {\n        setStat(await bombFinance.getBondStat());\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchBondPrice();\n  }, [setStat, bombFinance, slowRefresh]);\n\n  return stat;\n};\n\nexport default useBondStats;\n","import {useEffect, useState} from 'react';\nimport useBombFinance from './useBombFinance';\nimport useRefresh from './useRefresh';\n\nconst useTotalValueLocked = () => {\n  const [totalValueLocked, setTotalValueLocked] = useState<Number>(0);\n  const {slowRefresh} = useRefresh();\n  const bombFinance = useBombFinance();\n\n  useEffect(() => {\n    async function fetchTVL() {\n      try {\n        setTotalValueLocked(await bombFinance.getTotalValueLocked());\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchTVL();\n  }, [setTotalValueLocked, bombFinance, slowRefresh]);\n\n  return totalValueLocked;\n};\n\nexport default useTotalValueLocked;\n","import {useEffect, useState} from 'react';\nimport useBombFinance from './useBombFinance';\nimport {LPStat} from '../bomb-finance/types';\nimport useRefresh from './useRefresh';\n\nconst useLpStats = (lpTicker: string) => {\n  const [stat, setStat] = useState<LPStat>();\n  const {slowRefresh} = useRefresh();\n  const bombFinance = useBombFinance();\n\n  useEffect(() => {\n    async function fetchLpPrice() {\n      try {\n        setStat(await bombFinance.getLPStat(lpTicker));\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchLpPrice();\n  }, [setStat, bombFinance, slowRefresh, lpTicker]);\n\n  return stat;\n};\n\nexport default useLpStats;\n","import {useCallback} from 'react';\nimport useBombFinance from './useBombFinance';\nimport {Bank} from '../bomb-finance';\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\n\nconst useZap = (bank: Bank) => {\n  const bombFinance = useBombFinance();\n  const handleTransactionReceipt = useHandleTransactionReceipt();\n\n  const handleZap = useCallback(\n    (zappingToken: string, tokenName: string, amount: string) => {\n      handleTransactionReceipt(\n        bombFinance.zapIn(zappingToken, tokenName, amount),\n        `Zap ${amount} in ${bank.depositTokenName}.`,\n      );\n    },\n    [bank, bombFinance, handleTransactionReceipt],\n  );\n  return {onZap: handleZap};\n};\n\nexport default useZap;\n","import {BigNumber, ethers} from 'ethers';\nimport {useCallback, useMemo} from 'react';\nimport {useHasPendingApproval, useTransactionAdder} from '../state/transactions/hooks';\nimport useAllowance from './useAllowance';\nimport ERC20 from '../bomb-finance/ERC20';\nimport {BNB_TICKER, BOMB_TICKER, BSHARE_TICKER, BTC_TICKER, ZAPPER_ROUTER_ADDR} from '../utils/constants';\nimport useBombFinance from './useBombFinance';\n\nconst APPROVE_AMOUNT = ethers.constants.MaxUint256;\nconst APPROVE_BASE_AMOUNT = BigNumber.from('1000000000000000000000000');\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nfunction useApproveZapper(zappingToken: string): [ApprovalState, () => Promise<void>] {\n  const bombFinance = useBombFinance();\n  let token: ERC20;\n  if (zappingToken === BNB_TICKER) token = bombFinance.BNB;\n  else if (zappingToken === BOMB_TICKER) token = bombFinance.BOMB;\n  else if (zappingToken === BSHARE_TICKER) token = bombFinance.BSHARE;\n  else if (zappingToken === BTC_TICKER) token = bombFinance.externalTokens[BTC_TICKER];\n  const pendingApproval = useHasPendingApproval(token.address, ZAPPER_ROUTER_ADDR);\n  const currentAllowance = useAllowance(token, ZAPPER_ROUTER_ADDR, pendingApproval);\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    // we might not have enough data to know whether or not we need to approve\n    if (token === bombFinance.BNB) return ApprovalState.APPROVED;\n    if (!currentAllowance) return ApprovalState.UNKNOWN;\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lt(APPROVE_BASE_AMOUNT)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED;\n  }, [currentAllowance, pendingApproval, token, bombFinance]);\n\n  const addTransaction = useTransactionAdder();\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily');\n      return;\n    }\n\n    const response = await token.approve(ZAPPER_ROUTER_ADDR, APPROVE_AMOUNT);\n    addTransaction(response, {\n      summary: `Approve ${token.symbol}`,\n      approval: {\n        tokenAddress: token.address,\n        spender: ZAPPER_ROUTER_ADDR,\n      },\n    });\n  }, [approvalState, token, addTransaction]);\n\n  return [approvalState, approve];\n}\n\nexport default useApproveZapper;\n","import React, {useState, useMemo} from 'react';\n\nimport {Button, Select, MenuItem, InputLabel, withStyles} from '@material-ui/core';\n// import Button from '../../../components/Button'\nimport Modal, {ModalProps} from '../../../components/Modal';\nimport ModalActions from '../../../components/ModalActions';\nimport ModalTitle from '../../../components/ModalTitle';\nimport TokenInput from '../../../components/TokenInput';\nimport styled from 'styled-components';\n\nimport {getDisplayBalance} from '../../../utils/formatBalance';\nimport Label from '../../../components/Label';\nimport useLpStats from '../../../hooks/useLpStats';\nimport useTokenBalance from '../../../hooks/useTokenBalance';\nimport useBombFinance from '../../../hooks/useBombFinance';\nimport {useWallet} from 'use-wallet';\nimport useApproveZapper, {ApprovalState} from '../../../hooks/useApproveZapper';\nimport {BOMB_TICKER, BSHARE_TICKER, BNB_TICKER, BTC_TICKER} from '../../../utils/constants';\nimport {Alert} from '@material-ui/lab';\n\ninterface ZapProps extends ModalProps {\n  onConfirm: (zapAsset: string, lpName: string, amount: string) => void;\n  tokenName?: string;\n  decimals?: number;\n}\n\nconst ZapModal: React.FC<ZapProps> = ({onConfirm, onDismiss, tokenName = '', decimals = 18}) => {\n  const bombFinance = useBombFinance();\n  const {balance} = useWallet();\n  const ftmBalance = (Number(balance) / 1e18).toFixed(4).toString();\n  const bombBalance = useTokenBalance(bombFinance.BOMB);\n  const bshareBalance = useTokenBalance(bombFinance.BSHARE);\n  const btcBalance = useTokenBalance(bombFinance.BTC);\n  const [val, setVal] = useState('');\n  const [zappingToken, setZappingToken] = useState(BNB_TICKER);\n  const [zappingTokenBalance, setZappingTokenBalance] = useState(ftmBalance);\n  const [estimate, setEstimate] = useState({token0: '0', token1: '0'}); // token0 will always be BNB in this case\n  const [approveZapperStatus, approveZapper] = useApproveZapper(zappingToken);\n  const bombFtmLpStats = useLpStats('BOMB-BTCB-LP');\n  const tShareFtmLpStats = useLpStats('BSHARE-BNB-LP');\n  const bombLPStats = useMemo(() => (bombFtmLpStats ? bombFtmLpStats : null), [bombFtmLpStats]);\n  const bshareLPStats = useMemo(() => (tShareFtmLpStats ? tShareFtmLpStats : null), [tShareFtmLpStats]);\n  const ftmAmountPerLP = tokenName.startsWith(BOMB_TICKER) ? bombLPStats?.ftmAmount : bshareLPStats?.ftmAmount;\n  /**\n   * Checks if a value is a valid number or not\n   * @param n is the value to be evaluated for a number\n   * @returns\n   */\n  function isNumeric(n: any) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  }\n  const handleChangeAsset = (event: any) => {\n    const value = event.target.value;\n    setZappingToken(value);\n    setZappingTokenBalance(ftmBalance);\n    if (event.target.value === BSHARE_TICKER) {\n      setZappingTokenBalance(getDisplayBalance(bshareBalance, decimals));\n    }\n    if (event.target.value === BOMB_TICKER) {\n      setZappingTokenBalance(getDisplayBalance(bombBalance, decimals));\n    }\n    if (event.target.value === BTC_TICKER) {\n      setZappingTokenBalance(getDisplayBalance(btcBalance, decimals));\n    }\n  };\n\n  const handleChange = async (e: any) => {\n    if (e.currentTarget.value === '' || e.currentTarget.value === 0) {\n      setVal(e.currentTarget.value);\n      setEstimate({token0: '0', token1: '0'});\n    }\n    if (!isNumeric(e.currentTarget.value)) return;\n    setVal(e.currentTarget.value);\n    const estimateZap = await bombFinance.estimateZapIn(zappingToken, tokenName, String(e.currentTarget.value));\n    setEstimate({token0: estimateZap[0].toString(), token1: estimateZap[1].toString()});\n  };\n\n  const handleSelectMax = async () => {\n    setVal(zappingTokenBalance);\n    const estimateZap = await bombFinance.estimateZapIn(zappingToken, tokenName, String(zappingTokenBalance));\n    setEstimate({token0: estimateZap[0].toString(), token1: estimateZap[1].toString()});\n  };\n\n  return (\n    <Modal>\n      <ModalTitle text={`Zap in ${tokenName}`} />\n\n      <StyledActionSpacer />\n      <InputLabel style={{color: '#2c2560'}} id=\"label\">\n        Select asset to zap with\n      </InputLabel>\n      <Select onChange={handleChangeAsset} style={{color: '#2c2560'}} labelId=\"label\" id=\"select\" value={zappingToken}>\n        <StyledMenuItem value={BNB_TICKER}>BNB</StyledMenuItem>\n        <StyledMenuItem value={BSHARE_TICKER}>BSHARE</StyledMenuItem>\n        {/* <StyledMenuItem value={BTC_TICKER}>BTC</StyledMenuItem> */}\n        {/* Bomb as an input for zapping will be disabled due to issues occuring with the Gatekeeper system */}\n        {/* <StyledMenuItem value={BOMB_TICKER}>BOMB</StyledMenuItem> */}\n      </Select>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={zappingTokenBalance}\n        symbol={zappingToken}\n      />\n      <Label text=\"Zap Estimations\" />\n      <StyledDescriptionText>\n        {' '}\n        {tokenName}: {Number(estimate.token0) / Number(ftmAmountPerLP)}\n      </StyledDescriptionText>\n      <StyledDescriptionText>\n        {' '}\n        ({Number(estimate.token0)} {tokenName.startsWith(BSHARE_TICKER) ? BSHARE_TICKER : BNB_TICKER} /{' '}\n        {Number(estimate.token1)} {tokenName.startsWith(BSHARE_TICKER) ? BNB_TICKER : BSHARE_TICKER}){' '}\n      </StyledDescriptionText>\n      <ModalActions>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={() =>\n            approveZapperStatus !== ApprovalState.APPROVED ? approveZapper() : onConfirm(zappingToken, tokenName, val)\n          }\n        >\n          {approveZapperStatus !== ApprovalState.APPROVED ? 'Approve' : \"Let's go\"}\n        </Button>\n      </ModalActions>\n\n      <StyledActionSpacer />\n      <Alert variant=\"filled\" severity=\"info\">\n        New feature. Use at your own risk!\n      </Alert>\n    </Modal>\n  );\n};\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`;\n\nconst StyledDescriptionText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.color.grey[400]};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 22px;\n  justify-content: flex-start;\n`;\nconst StyledMenuItem = withStyles({\n  root: {\n    backgroundColor: 'white',\n    color: '#2c2560',\n    '&:hover': {\n      backgroundColor: 'grey',\n      color: '#2c2560',\n    },\n    selected: {\n      backgroundColor: 'black',\n    },\n  },\n})(MenuItem);\n\nexport default ZapModal;\n","import {useEffect, useState} from 'react';\nimport useBombFinance from './useBombFinance';\nimport {LPStat} from '../bomb-finance/types';\nimport useRefresh from './useRefresh';\n\nconst useLpStatsBTC = (lpTicker: string) => {\n  const [stat, setStat] = useState<LPStat>();\n  const {slowRefresh} = useRefresh();\n  const bombFinance = useBombFinance();\n\n  useEffect(() => {\n    async function fetchLpPrice() {\n      try {\n        setStat(await bombFinance.getLPStatBTC(lpTicker));\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchLpPrice();\n  }, [setStat, bombFinance, slowRefresh, lpTicker]);\n\n  return stat;\n};\n\nexport default useLpStatsBTC;\n","import React, { useMemo, useState } from 'react';\nimport Page from '../../components/Page';\nimport { createGlobalStyle } from 'styled-components';\nimport CountUp from 'react-countup';\nimport CardIcon from '../../components/CardIcon';\nimport TokenSymbol from '../../components/TokenSymbol';\nimport useBombStats from '../../hooks/useBombStats';\nimport useLpStats from '../../hooks/useLpStats';\nimport useLpStatsBTC from '../../hooks/useLpStatsBTC';\nimport useModal from '../../hooks/useModal';\nimport useZap from '../../hooks/useZap';\nimport useBondStats from '../../hooks/useBondStats';\nimport usebShareStats from '../../hooks/usebShareStats';\nimport useTotalValueLocked from '../../hooks/useTotalValueLocked';\n// import { Bomb as bombTesting } from '../../bomb-finance/deployments/deployments.testing.json';\n//import { Bomb as bombProd } from '../../bomb-finance/deployments/deployments.mainnet.json';\nimport { roundAndFormatNumber } from '../../0x';\nimport MetamaskFox from '../../assets/img/metamask-fox.svg';\nimport { Box, Button, Card, CardContent, Grid, Paper } from '@material-ui/core';\nimport ZapModal from '../Bank/components/ZapModal';\nimport { Alert } from '@material-ui/lab';\nimport { IoCloseOutline } from 'react-icons/io5';\nimport { BiLoaderAlt } from 'react-icons/bi';\nimport { makeStyles } from '@material-ui/core/styles';\nimport useBombFinance from '../../hooks/useBombFinance';\n//import { ReactComponent as IconTelegram } from '../../assets/img/telegram.svg';\nimport { Helmet } from 'react-helmet';\nimport BombImage from '../../assets/img/bomb.png';\n\n//import useBombMaxiStats from '../../hooks/useBombMaxiStats';\n\nimport HomeImage from '../../assets/img/background.jpg';\nconst BackgroundImage = createGlobalStyle`\n  body {\n    background: url(${HomeImage}) repeat !important;\n    background-size: cover !important;\n    background-color: #171923;\n  }\n`;\nconst TITLE = 'bomb.money | BTC pegged algocoin';\n\n// const BackgroundImage = createGlobalStyle`\n//   body {\n//     background-color: grey;\n//     background-size: cover !important;\n//   }\n// `;\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    [theme.breakpoints.down('415')]: {\n      // marginTop: '10px'\n    },\n  },\n}));\n\nconst Home = () => {\n  const classes = useStyles();\n  const TVL = useTotalValueLocked();\n  const bombFtmLpStats = useLpStatsBTC('BOMB-BTCB-LP');\n  const bShareFtmLpStats = useLpStats('BSHARE-BNB-LP');\n  const bombStats = useBombStats();\n  const bShareStats = usebShareStats();\n  const tBondStats = useBondStats();\n  const bombFinance = useBombFinance();\n  // const bombmaxi = useBombMaxiStats('0xd6f52e8ab206e59a1e13b3d6c5b7f31e90ef46ef000200000000000000000028');\n\n  // console.log(bombmaxi);\n  // let bomb;\n  // if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n  //   bomb = bombTesting;\n  // } else {\n  //   bomb = bombProd;\n  // }\n\n  const buyBombAddress = //'https://app.1inch.io/#/56/swap/BTCB/BOMB';\n    //  'https://pancakeswap.finance/swap?inputCurrency=0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c&outputCurrency=' +\n    'https://app.bogged.finance/bsc/swap?tokenIn=0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c&tokenOut=0x522348779DCb2911539e76A1042aA922F9C47Ee3';\n  //https://pancakeswap.finance/swap?outputCurrency=0x531780FAcE85306877D7e1F05d713D1B50a37F7A';\n  const buyBShareAddress = //'https://app.1inch.io/#/56/swap/BNB/BSHARE';\n    'https://app.bogged.finance/bsc/swap?tokenIn=BNB&tokenOut=0x531780FAcE85306877D7e1F05d713D1B50a37F7A';\n  const buyBusmAddress =\n    'https://app.bogged.finance/bsc/swap?tokenIn=0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56&tokenOut=0x6216B17f696B14701E17BCB24Ec14430261Be94A';\n  const bombLPStats = useMemo(() => (bombFtmLpStats ? bombFtmLpStats : null), [bombFtmLpStats]);\n  const bshareLPStats = useMemo(() => (bShareFtmLpStats ? bShareFtmLpStats : null), [bShareFtmLpStats]);\n  const bombPriceInDollars = useMemo(\n    () => (bombStats ? Number(bombStats.priceInDollars).toFixed(2) : null),\n    [bombStats],\n  );\n  const bombPriceInBNB = useMemo(() => (bombStats ? Number(bombStats.tokenInFtm).toFixed(4) : null), [bombStats]);\n  const bombCirculatingSupply = useMemo(() => (bombStats ? String(bombStats.circulatingSupply) : null), [bombStats]);\n  const bombTotalSupply = useMemo(() => (bombStats ? String(bombStats.totalSupply) : null), [bombStats]);\n\n  const bSharePriceInDollars = useMemo(\n    () => (bShareStats ? Number(bShareStats.priceInDollars).toFixed(2) : null),\n    [bShareStats],\n  );\n  const bSharePriceInBNB = useMemo(\n    () => (bShareStats ? Number(bShareStats.tokenInFtm).toFixed(4) : null),\n    [bShareStats],\n  );\n  const bShareCirculatingSupply = useMemo(\n    () => (bShareStats ? String(bShareStats.circulatingSupply) : null),\n    [bShareStats],\n  );\n  const bShareTotalSupply = useMemo(() => (bShareStats ? String(bShareStats.totalSupply) : null), [bShareStats]);\n\n  const tBondPriceInDollars = useMemo(\n    () => (tBondStats ? Number(tBondStats.priceInDollars).toFixed(2) : null),\n    [tBondStats],\n  );\n  const tBondPriceInBNB = useMemo(() => (tBondStats ? Number(tBondStats.tokenInFtm).toFixed(4) : null), [tBondStats]);\n  const tBondCirculatingSupply = useMemo(\n    () => (tBondStats ? String(tBondStats.circulatingSupply) : null),\n    [tBondStats],\n  );\n  const tBondTotalSupply = useMemo(() => (tBondStats ? String(tBondStats.totalSupply) : null), [tBondStats]);\n\n  const bombLpZap = useZap({ depositTokenName: 'BOMB-BTCB-LP' });\n  const bshareLpZap = useZap({ depositTokenName: 'BSHARE-BNB-LP' });\n\n  const [onPresentBombZap, onDissmissBombZap] = useModal(\n    <ZapModal\n      decimals={18}\n      onConfirm={(zappingToken, tokenName, amount) => {\n        if (Number(amount) <= 0 || isNaN(Number(amount))) return;\n        bombLpZap.onZap(zappingToken, tokenName, amount);\n        onDissmissBombZap();\n      }}\n      tokenName={'BOMB-BTCB-LP'}\n    />,\n  );\n\n  const [onPresentBshareZap, onDissmissBshareZap] = useModal(\n    <ZapModal\n      decimals={18}\n      onConfirm={(zappingToken, tokenName, amount) => {\n        if (Number(amount) <= 0 || isNaN(Number(amount))) return;\n        bshareLpZap.onZap(zappingToken, tokenName, amount);\n        onDissmissBshareZap();\n      }}\n      tokenName={'BSHARE-BNB-LP'}\n    />,\n  );\n\n  const [modal, setModal] = useState(false);\n  const [videoLoading, setVideoLoading] = useState(true);\n\n  const openModal = () => {\n    setModal(!modal);\n  };\n\n  const spinner = () => {\n    setVideoLoading(!videoLoading);\n  };\n\n  // const [onPresentIntroVid] = useModal(\n  //   <grid>\n  //     <Paper>\n  //       <div>\n  //         <iframe\n  //           width=\"560\"\n  //           height=\"315\"\n  //           src=\"https://www.youtube.com/embed/nhCWmmRNNhc\"\n  //           title=\"YouTube video player\"\n  //           frameborder=\"0\"\n  //           allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n  //           allowfullscreen\n  //         ></iframe>\n  //       </div>\n  //     </Paper>\n  //   </grid>,\n  // );\n\n  return (\n    <Page>\n      <Helmet>\n        <title>{TITLE}</title>\n      </Helmet>\n      <BackgroundImage />\n      <Grid container spacing={3}>\n        {/* Logo */}\n        <Grid\n          item\n          xs={12}\n          sm={4}\n          style={{ display: 'flex', justifyContent: 'center', verticalAlign: 'middle', overflow: 'hidden' }}\n        >\n          <img src={BombImage} alt=\"Bomb.money\" style={{ maxHeight: '240px' }} />\n        </Grid>\n        {/* Explanation text */}\n        <Grid item xs={12} sm={8}>\n          <Paper>\n            <Box p={4} style={{ textAlign: 'center' }}>\n              <h1>BOMB: BITCOIN SAFETY + DEFI YIELDS</h1>\n              <p>\n                <strong>BOMB is pegged via algorithm to a 10,000:1 ratio to BTC. $100k BTC = $10 BOMB PEG</strong>\n              </p>\n              <p>\n                <h2>Best Algocoin | 0.5%+ DAILY | Audited | Doxxed team</h2>\n                {/* Stake your BOMB-BTC LP in the Farm to earn BSHARE rewards. Then stake your earned BSHARE in the\n                Boardroom to earn more BOMB! */}\n              </p>\n              <p>\n                {/* <IconTelegram alt=\"telegram\" style={{ fill: '#dddfee', height: '15px' }} /> */}\n                Join our{' '}\n                <a\n                  href=\"https://t.me/bombmoneybsc\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                  style={{ color: '#dddfee' }}\n                >\n                  Telegram\n                </a>{' '}\n                or{' '}\n                <a\n                  href=\"https://discord.bomb.money\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                  style={{ color: '#dddfee' }}\n                >\n                  Discord\n                </a>{' '}\n                to find out more!\n              </p>\n\n              <button onClick={openModal} className=\"shinyButtonSecondary\">\n                Learn about BOMB\n                {modal ? (\n                  <section className=\"modal__bg\">\n                    <div className=\"modal__align\">\n                      <div className=\"modal__content\" modal={modal}>\n                        <IoCloseOutline className=\"modal__close\" arial-label=\"Close modal\" onClick={setModal} />\n                        <div className=\"modal__video-align\">\n                          {videoLoading ? (\n                            <div className=\"modal__spinner\">\n                              {' '}\n                              <BiLoaderAlt className=\"modal__spinner-style\" fadeIn=\"none\" />\n                            </div>\n                          ) : null}\n                          <iframe\n                            className=\"modal__video-style\"\n                            onLoad={spinner}\n                            loading=\"lazy\"\n                            width=\"800\"\n                            height=\"500\"\n                            src=\"https://www.youtube.com/embed/nhCWmmRNNhc\"\n                            title=\"BOMB Intro Video\"\n                            frameBorder=\"0\"\n                            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                            allowFullscreen\n                          ></iframe>\n                        </div>\n                      </div>\n                    </div>\n                  </section>\n                ) : null}\n              </button>\n            </Box>\n          </Paper>\n        </Grid>\n\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={12} justify=\"center\" style={{ margin: '12px', display: 'flex' }}>\n            <Alert variant=\"filled\" severity=\"info\">\n              <h2>BOMB Cycle: Guide to Indefinite Printing</h2>\n              <b>How to maximize earnings while keeping BOMB printing!</b>{' '}\n              <Button\n                href=\"https://bombbshare.medium.com/the-bomb-cycle-how-to-print-forever-e89dc82c12e5\"\n                target={'_blank'}\n                className=\"shinyButton\"\n                style={{ margin: '10px' }}\n              >\n                READ ARTICLE\n              </Button>\n            </Alert>\n          </Grid>\n        </Grid>\n\n        {/* TVL */}\n        <Grid item xs={12} sm={4}>\n          <Card style={{'paddingTop': '10px'}}>\n            <CardContent align=\"center\">\n              <h2>Total Value Locked</h2>\n              <CountUp style={{ fontSize: '25px' }} end={TVL} separator=\",\" prefix=\"$\" />\n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* Wallet */}\n        <Grid item xs={12} sm={8}>\n          <Card style={{ height: '100%' }}>\n            <CardContent align=\"center\" style={{ marginTop: '2.5%' }}>\n              {/* <h2 style={{ marginBottom: '20px' }}>Wallet Balance</h2> */}\n              <Button href=\"https://bomb.farm/\" className=\"shinyButtonGreen\" style={{ margin: '5px' }}>\n                Autovaults\n              </Button>\n              <Button\n                href={buyBombAddress}\n                style={{ margin: '5px' }}\n                target=\"_blank\"\n                className={'shinyButton ' + classes.button}\n              >\n                Buy BOMB\n              </Button>\n              <Button\n                href={buyBShareAddress}\n                className={'shinyButton ' + classes.button}\n                target=\"_blank\"\n                style={{ margin: '5px' }}\n              >\n                Buy BSHARE\n              </Button>\n              <Button\n                href={buyBusmAddress}\n                className={'shinyButton ' + classes.button}\n                target=\"_blank\"\n                style={{ margin: '5px' }}\n              >\n                Buy BUSM\n              </Button>\n              <Button\n                target=\"_blank\"\n                href=\"https://dexscreener.com/bsc/0x84392649eb0bc1c1532f2180e58bae4e1dabd8d6\"\n                className=\"shinyButton\"\n                style={{ margin: '5px' }}\n              >\n                BOMB Chart\n              </Button>\n              <Button\n                target=\"_blank\"\n                href=\"https://dexscreener.com/bsc/0x1303246855b5b5ebc71f049fdb607494e97218f8\"\n                className=\"shinyButton\"\n                style={{ margin: '5px' }}\n              >\n                BSHARE Chart\n              </Button>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* BOMB */}\n        <Grid item xs={12} sm={4}>\n          <Card>\n            <CardContent align=\"center\" style={{ position: 'relative' }}>\n              <Box mt={2}>\n                <CardIcon>\n                  <TokenSymbol symbol=\"BOMB\" />\n                </CardIcon>\n              </Box>\n              <Button\n                onClick={() => {\n                  bombFinance.watchAssetInMetamask('BOMB');\n                }}\n                style={{ position: 'absolute', top: '10px', right: '10px', border: '1px grey solid' }}\n              >\n                {' '}\n                <b>+</b>&nbsp;&nbsp;\n                <img alt=\"metamask fox\" style={{ width: '20px', filter: 'grayscale(100%)' }} src={MetamaskFox} />\n              </Button>\n              <h2 style={{ marginBottom: '10px' }}>BOMB</h2>\n              10,000 BOMB (1.0 Peg) =\n              <Box>\n                <span style={{ fontSize: '30px', color: 'white' }}>\n                  {bombPriceInBNB ? bombPriceInBNB : '-.----'} BTC\n                </span>\n              </Box>\n              <Box>\n                <span style={{ fontSize: '16px', alignContent: 'flex-start' }}>\n                  ${bombPriceInDollars ? roundAndFormatNumber(bombPriceInDollars, 2) : '-.--'} / BOMB\n                </span>\n              </Box>\n              <span style={{ fontSize: '12px' }}>\n                Market Cap: ${roundAndFormatNumber(bombCirculatingSupply * bombPriceInDollars, 2)} <br />\n                Circulating Supply: {roundAndFormatNumber(bombCirculatingSupply, 2)} <br />\n                Total Supply: {roundAndFormatNumber(bombTotalSupply, 2)}\n              </span>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* BSHARE */}\n        <Grid item xs={12} sm={4}>\n          <Card>\n            <CardContent align=\"center\" style={{ position: 'relative' }}>\n              <Button\n                onClick={() => {\n                  bombFinance.watchAssetInMetamask('BSHARE');\n                }}\n                style={{ position: 'absolute', top: '10px', right: '10px', border: '1px grey solid' }}\n              >\n                {' '}\n                <b>+</b>&nbsp;&nbsp;\n                <img alt=\"metamask fox\" style={{ width: '20px', filter: 'grayscale(100%)' }} src={MetamaskFox} />\n              </Button>\n              <Box mt={2}>\n                <CardIcon>\n                  <TokenSymbol symbol=\"BSHARE\" />\n                </CardIcon>\n              </Box>\n              <h2 style={{ marginBottom: '10px' }}>BSHARE</h2>\n              Current Price\n              <Box>\n                <span style={{ fontSize: '30px', color: 'white' }}>\n                  {bSharePriceInBNB ? bSharePriceInBNB : '-.----'} BNB\n                </span>\n              </Box>\n              <Box>\n                <span style={{ fontSize: '16px' }}>\n                  ${bSharePriceInDollars ? bSharePriceInDollars : '-.--'} / BSHARE\n                </span>\n              </Box>\n              <span style={{ fontSize: '12px' }}>\n                Market Cap: ${roundAndFormatNumber((bShareCirculatingSupply * bSharePriceInDollars).toFixed(2), 2)}{' '}\n                <br />\n                Circulating Supply: {roundAndFormatNumber(bShareCirculatingSupply, 2)} <br />\n                Total Supply: {roundAndFormatNumber(bShareTotalSupply, 2)}\n              </span>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* BBOND */}\n        <Grid item xs={12} sm={4}>\n          <Card>\n            <CardContent align=\"center\" style={{ position: 'relative' }}>\n              <Button\n                onClick={() => {\n                  bombFinance.watchAssetInMetamask('BBOND');\n                }}\n                style={{ position: 'absolute', top: '10px', right: '10px', border: '1px grey solid' }}\n              >\n                {' '}\n                <b>+</b>&nbsp;&nbsp;\n                <img alt=\"metamask fox\" style={{ width: '20px', filter: 'grayscale(100%)' }} src={MetamaskFox} />\n              </Button>\n              <Box mt={2}>\n                <CardIcon>\n                  <TokenSymbol symbol=\"BBOND\" />\n                </CardIcon>\n              </Box>\n              <h2 style={{ marginBottom: '10px' }}>BBOND</h2>\n              10,000 BBOND\n              <Box>\n                <span style={{ fontSize: '30px', color: 'white' }}>\n                  {tBondPriceInBNB ? tBondPriceInBNB : '-.----'} BTC\n                </span>\n              </Box>\n              <Box>\n                <span style={{ fontSize: '16px' }}>${tBondPriceInDollars ? tBondPriceInDollars : '-.--'} / BBOND</span>\n              </Box>\n              <span style={{ fontSize: '12px' }}>\n                Market Cap: ${roundAndFormatNumber((tBondCirculatingSupply * tBondPriceInDollars).toFixed(2), 2)} <br />\n                Circulating Supply: {roundAndFormatNumber(tBondCirculatingSupply, 2)} <br />\n                Total Supply: {roundAndFormatNumber(tBondTotalSupply, 2)}\n              </span>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Card>\n            <CardContent align=\"center\">\n              <Box mt={2}>\n                <CardIcon>\n                  <TokenSymbol symbol=\"BOMB-BTCB-LP\" />\n                </CardIcon>\n              </Box>\n              <h2>BOMB-BTCB PancakeSwap LP</h2>\n              <Box mt={2}>\n                <Button disabled onClick={onPresentBombZap} className=\"shinyButtonDisabledSecondary\">\n                  Zap In\n                </Button>\n              </Box>\n              <Box mt={2}>\n                <span style={{ fontSize: '26px' }}>\n                  {bombLPStats?.tokenAmount ? bombLPStats?.tokenAmount : '-.--'} BOMB /{' '}\n                  {bombLPStats?.ftmAmount ? bombLPStats?.ftmAmount : '-.--'} BTCB\n                </span>\n              </Box>\n              <Box>${bombLPStats?.priceOfOne ? bombLPStats.priceOfOne : '-.--'}</Box>\n              <span style={{ fontSize: '12px' }}>\n                Liquidity: ${bombLPStats?.totalLiquidity ? roundAndFormatNumber(bombLPStats.totalLiquidity, 2) : '-.--'}{' '}\n                <br />\n                Total Supply: {bombLPStats?.totalSupply ? roundAndFormatNumber(bombLPStats.totalSupply, 2) : '-.--'}\n              </span>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Card>\n            <CardContent align=\"center\">\n              <Box mt={2}>\n                <CardIcon>\n                  <TokenSymbol symbol=\"BSHARE-BNB-LP\" />\n                </CardIcon>\n              </Box>\n              <h2>BSHARE-BNB PancakeSwap LP</h2>\n              <Box mt={2}>\n                <Button onClick={onPresentBshareZap} className=\"shinyButtonSecondary\">\n                  Zap In\n                </Button>\n              </Box>\n              <Box mt={2}>\n                <span style={{ fontSize: '26px' }}>\n                  {bshareLPStats?.tokenAmount ? bshareLPStats?.tokenAmount : '-.--'} BSHARE /{' '}\n                  {bshareLPStats?.ftmAmount ? bshareLPStats?.ftmAmount : '-.--'} BNB\n                </span>\n              </Box>\n              <Box>${bshareLPStats?.priceOfOne ? bshareLPStats.priceOfOne : '-.--'}</Box>\n              <span style={{ fontSize: '12px' }}>\n                Liquidity: $\n                {bshareLPStats?.totalLiquidity ? roundAndFormatNumber(bshareLPStats.totalLiquidity, 2) : '-.--'}\n                <br />\n                Total Supply: {bshareLPStats?.totalSupply ? roundAndFormatNumber(bshareLPStats.totalSupply, 2) : '-.--'}\n              </span>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Page>\n  );\n};\n\nexport default Home;\n","import {useCallback} from 'react';\nimport {TransactionResponse} from '@ethersproject/providers';\nimport {useTransactionAdder} from '../state/transactions/hooks';\nimport {useAddPopup} from '../state/application/hooks';\n\nfunction useHandleTransactionReceipt(): (promise: Promise<TransactionResponse>, summary: string) => void {\n  const addTransaction = useTransactionAdder();\n  const addPopup = useAddPopup();\n\n  return useCallback(\n    (promise: Promise<TransactionResponse>, summary: string) => {\n      promise\n        .then((tx) => addTransaction(tx, {summary}))\n        .catch((err) => {\n          if (err.message.includes('User denied')) {\n            // User denied transaction signature on MetaMask.\n            return;\n          }\n          const message = `Unable to ${summary[0].toLowerCase()}${summary.slice(1)}`;\n          console.error(`${message}: ${err.message || err.stack}`);\n          addPopup({error: {message, stack: err.message || err.stack}});\n        });\n    },\n    [addPopup, addTransaction],\n  );\n}\n\nexport default useHandleTransactionReceipt;\n","import {TransactionResponse} from '@ethersproject/providers';\nimport {useCallback, useMemo} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {useWallet} from 'use-wallet';\n\nimport {AppDispatch, AppState} from '../index';\nimport {addTransaction, clearAllTransactions} from './actions';\nimport {TransactionDetails} from './reducer';\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {summary?: string; approval?: {tokenAddress: string; spender: string}},\n) => void {\n  const {chainId, account} = useWallet();\n  const dispatch = useDispatch<AppDispatch>();\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {summary, approval}: {summary?: string; approval?: {tokenAddress: string; spender: string}} = {},\n    ) => {\n      if (!account) return;\n      if (!chainId) return;\n\n      const {hash} = response;\n      if (!hash) {\n        throw Error('No transaction hash found.');\n      }\n      dispatch(addTransaction({hash, from: account, chainId, approval, summary}));\n    },\n    [dispatch, chainId, account],\n  );\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): {[txHash: string]: TransactionDetails} {\n  const {chainId} = useWallet();\n  const state = useSelector<AppState, AppState['transactions']>((state) => state.transactions);\n\n  return chainId ? state[chainId] ?? {} : {};\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions();\n  if (!transactionHash || !transactions[transactionHash]) {\n    return false;\n  }\n  return !transactions[transactionHash].receipt;\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000;\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions();\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash];\n        if (!tx) return false;\n        if (tx.receipt) {\n          return false;\n        } else {\n          const approval = tx.approval;\n          if (!approval) return false;\n          return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx);\n        }\n      }),\n    [allTransactions, spender, tokenAddress],\n  );\n}\n\nexport function useClearAllTransactions(): {clearAllTransactions: () => void} {\n  const {chainId} = useWallet();\n  const dispatch = useDispatch<AppDispatch>();\n  return {\n    clearAllTransactions: useCallback(() => dispatch(clearAllTransactions({chainId})), [dispatch, chainId]),\n  };\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode;\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void;\n  placeholder?: string;\n  startAdornment?: React.ReactNode;\n  value: string;\n}\n\nconst Input: React.FC<InputProps> = ({endAdornment, onChange, placeholder, startAdornment, value}) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  );\n};\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.color.grey[200]};\n  border-radius: ${(props) => props.theme.borderRadius}px;\n  display: flex;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`;\n\nconst StyledInput = styled.input`\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.color.grey[600]};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`;\n\nexport default Input;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport {Button} from '@material-ui/core';\nimport Input, {InputProps} from '../Input';\n\ninterface TokenInputProps extends InputProps {\n  max: number | string;\n  symbol: string;\n  onSelectMax?: () => void;\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({max, symbol, onChange, onSelectMax, value}) => {\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} Available\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            {/* <StyledTokenSymbol>{symbol}</StyledTokenSymbol> */}\n            <StyledSpacer />\n            <div>\n              <Button size=\"small\" color=\"primary\" variant=\"contained\" onClick={onSelectMax}>\n                Max\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n    </StyledTokenInput>\n  );\n};\n\n/*\n            <div>\n              <Button size=\"sm\" text=\"Max\" />\n            </div>\n*/\n\nconst StyledTokenInput = styled.div``;\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`;\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`;\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.color.grey[400]};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`;\n\nexport default TokenInput;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst ModalActions: React.FC = ({children}) => {\n  const l = React.Children.toArray(children).length;\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <StyledSpacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  );\n};\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.color.grey[100]}00;\n  display: flex;\n  height: 96px;\n  margin: ${(props) => props.theme.spacing[4]}px ${(props) => -props.theme.spacing[4]}px\n    ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n`;\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`;\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[4]}px;\n`;\n\nexport default ModalActions;\n","import { useCallback, useEffect, useState } from 'react';\nimport { useWallet } from 'use-wallet';\nimport { BigNumber } from 'ethers';\nimport ERC20 from '../bomb-finance/ERC20';\n\nconst useAllowance = (token: ERC20, spender: string, pendingApproval?: boolean) => {\n  const [allowance, setAllowance] = useState<BigNumber>(null);\n  const { account } = useWallet();\n\n  const fetchAllowance = useCallback(async () => {\n    const allowance = await token.allowance(account, spender);\n    setAllowance(allowance);\n  }, [account, spender, token]);\n\n  useEffect(() => {\n    if (account && spender && token) {\n      fetchAllowance().catch((err) => console.error(`Failed to fetch allowance: ${err.stack}`));\n    }\n  }, [account, spender, token, pendingApproval, fetchAllowance]);\n\n  return allowance;\n};\n\nexport default useAllowance;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface CardIconProps {\n  children?: React.ReactNode;\n}\n\nconst CardIcon: React.FC<CardIconProps> = ({children}) => <StyledCardIcon>{children}</StyledCardIcon>;\n\nconst StyledCardIcon = styled.div`\n  background-color: #363746;\n  font-size: 36px;\n  height: 95px;\n  width: 95px;\n  border-radius: 95px;\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  margin: 0 auto ${(props) => props.theme.spacing[3]}px;\n`;\n\nexport default CardIcon;\n"],"sourceRoot":""}