{"version":3,"sources":["hooks/useBondStats.ts","hooks/useTotalValueLocked.ts","hooks/useStakedBalanceOnBoardroom.ts","hooks/useEarningsOnBoardroom.ts","hooks/useCurrentEpoch.ts","hooks/useCashPriceInEstimatedTWAP.ts","hooks/useTreasuryAllocationTimes.ts","hooks/useTotalStakedOnBoardroom.ts","hooks/useCashPriceInLastTWAP.ts","views/Dashboard/components/Supplies.jsx","views/Dashboard/components/Epoch.jsx","views/Dashboard/components/ProgressCountdown.tsx","views/Dashboard/components/Summary.jsx","views/Dashboard/components/btcCard.jsx","views/Dashboard/components/Boardroom.jsx","views/Dashboard/components/BombFarms.jsx","views/Dashboard/components/Bonds.jsx","views/Dashboard/Dashboard.tsx"],"names":["useBondStats","useState","stat","setStat","slowRefresh","useRefresh","bombFinance","useBombFinance","useEffect","a","getBondStat","console","error","fetchBondPrice","useTotalValueLocked","totalValueLocked","setTotalValueLocked","getTotalValueLocked","fetchTVL","useStakedBalanceOnBoardroom","BigNumber","from","balance","setBalance","isUnlocked","getStakedSharesOnBoardroom","fetchBalance","useEarningsOnBoardroom","getEarningsOnBoardroom","useCurrentEpoch","currentEpoch","setCurrentEpoch","getCurrentEpoch","fetchCurrentEpoch","useCashPriceInEstimatedTWAP","getBombStatInEstimatedTWAP","fetchCashPrice","useTreasuryAllocationTimes","Date","to","time","setTime","getTreasuryNextAllocationTime","then","useTotalStakedOnBoardroom","totalStaked","setTotalStaked","getTotalStakedInBoardroom","fetchTotalStaked","useCashPriceInLastTWAP","price","setPrice","useCallback","getBombPriceInLastTWAP","catch","err","stack","refreshInterval","setInterval","config","clearInterval","Supplies","props","className","style","display","gap","color","padding","borderBottom","width","height","backgroundColor","borderRadius","textAlign","icon","title","currentSupply","totalSupply","flexDirection","alignItems","priceInBtc","src","MetamaskFox","alt","Epoch","fontSize","nextEpoch","lineHeight","liveTwap","TVL","lastEpoch","StyledCountdown","styled","p","theme","grey","StyledProgressOuter","div","StyledProgress","progress","StyledCardContentInner","spacing","ProgressCountdown","base","deadline","hideBar","percentage","description","now","getTime","key","date","renderer","countdownProps","days","hours","minutes","seconds","h","String","m","s","padStart","card","backdropFilter","border","Summary","bombStats","useBombStats","bShareStats","usebShareStats","tBondStats","cashStat","scalingFactor","useMemo","Number","priceInDollars","toFixed","bombPriceInDollars","bombPriceInBNB","tokenInFtm","bSharePriceInDollars","bSharePriceInBNB","tBondPriceInDollars","tBondPriceInBNB","bombCirculatingSupply","circulatingSupply","bShareCirculatingSupply","tBondCirculatingSupply","bombTotalSupply","bShareTotalSupply","tBondTotalSupply","cashPrice","bondScale","fontWeight","textTransform","marginBottom","justifyContent","flexWrap","rowGap","TokenSymbol","symbol","size","Intl","NumberFormat","notation","format","roundAndFormatNumber","moment","toDate","end","separator","prefix","btcCard","mb","alignSelf","marginLeft","subHead","align","margin","stakeDisp","staked","dailyReturn","stakeIcon","yourStake","stakeInDollars","earnedIcon","Earned","earningInDollars","btnwrap","Button","variant","borderColor","upper","flex","lower","Boardroom","stakedBalance","tokenPriceInDollars","earnings","earnedInDollars","getDisplayBalance","marginTop","href","rel","target","textDecoration","BombFarms","Bonds","bondBalance","useTokenBalance","BBOND","paddingBottom","BackgroundImage","createGlobalStyle","HomeImage","Dashboard","path","useRouteMatch","Page","Helmet","exact"],"mappings":"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","file":"static/js/17.8f194e20.chunk.js","sourcesContent":["import {useEffect, useState} from 'react';\nimport useBombFinance from './useBombFinance';\nimport {TokenStat} from '../bomb-finance/types';\nimport useRefresh from './useRefresh';\n\nconst useBondStats = () => {\n  const [stat, setStat] = useState<TokenStat>();\n  const {slowRefresh} = useRefresh();\n  const bombFinance = useBombFinance();\n\n  useEffect(() => {\n    async function fetchBondPrice() {\n      try {\n        setStat(await bombFinance.getBondStat());\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchBondPrice();\n  }, [setStat, bombFinance, slowRefresh]);\n\n  return stat;\n};\n\nexport default useBondStats;\n","import {useEffect, useState} from 'react';\nimport useBombFinance from './useBombFinance';\nimport useRefresh from './useRefresh';\n\nconst useTotalValueLocked = () => {\n  const [totalValueLocked, setTotalValueLocked] = useState<Number>(0);\n  const {slowRefresh} = useRefresh();\n  const bombFinance = useBombFinance();\n\n  useEffect(() => {\n    async function fetchTVL() {\n      try {\n        setTotalValueLocked(await bombFinance.getTotalValueLocked());\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchTVL();\n  }, [setTotalValueLocked, bombFinance, slowRefresh]);\n\n  return totalValueLocked;\n};\n\nexport default useTotalValueLocked;\n","import {useEffect, useState} from 'react';\nimport {BigNumber} from 'ethers';\nimport useBombFinance from './useBombFinance';\nimport useRefresh from './useRefresh';\n\nconst useStakedBalanceOnBoardroom = () => {\n  const {slowRefresh} = useRefresh();\n  const [balance, setBalance] = useState(BigNumber.from(0));\n  const bombFinance = useBombFinance();\n  const isUnlocked = bombFinance?.isUnlocked;\n  useEffect(() => {\n    async function fetchBalance() {\n      try {\n        setBalance(await bombFinance.getStakedSharesOnBoardroom());\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    if (isUnlocked) {\n      fetchBalance();\n    }\n  }, [slowRefresh, isUnlocked, bombFinance]);\n  return balance;\n};\n\nexport default useStakedBalanceOnBoardroom;\n","import {useEffect, useState} from 'react';\nimport {BigNumber} from 'ethers';\nimport useBombFinance from './useBombFinance';\nimport useRefresh from './useRefresh';\n\nconst useEarningsOnBoardroom = () => {\n  const {slowRefresh} = useRefresh();\n  const [balance, setBalance] = useState(BigNumber.from(0));\n  const bombFinance = useBombFinance();\n  const isUnlocked = bombFinance?.isUnlocked;\n\n  useEffect(() => {\n    async function fetchBalance() {\n      try {\n        setBalance(await bombFinance.getEarningsOnBoardroom());\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    if (isUnlocked) {\n      fetchBalance();\n    }\n  }, [isUnlocked, bombFinance, slowRefresh]);\n\n  return balance;\n};\n\nexport default useEarningsOnBoardroom;\n","import {useEffect, useState} from 'react';\nimport useBombFinance from './useBombFinance';\nimport {BigNumber} from 'ethers';\nimport useRefresh from './useRefresh';\n\nconst useCurrentEpoch = () => {\n  const [currentEpoch, setCurrentEpoch] = useState<BigNumber>(BigNumber.from(0));\n  const bombFinance = useBombFinance();\n  const {slowRefresh} = useRefresh();\n\n  useEffect(() => {\n    async function fetchCurrentEpoch() {\n      try {\n        setCurrentEpoch(await bombFinance.getCurrentEpoch());\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchCurrentEpoch();\n  }, [setCurrentEpoch, bombFinance, slowRefresh]);\n\n  return currentEpoch;\n};\n\nexport default useCurrentEpoch;\n","import {useEffect, useState} from 'react';\nimport useBombFinance from './useBombFinance';\nimport {TokenStat} from '../bomb-finance/types';\nimport useRefresh from './useRefresh';\n\nconst useCashPriceInEstimatedTWAP = () => {\n  const [stat, setStat] = useState<TokenStat>();\n  const bombFinance = useBombFinance();\n  const {slowRefresh} = useRefresh();\n\n  useEffect(() => {\n    async function fetchCashPrice() {\n      try {\n        setStat(await bombFinance.getBombStatInEstimatedTWAP());\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchCashPrice();\n  }, [setStat, bombFinance, slowRefresh]);\n\n  return stat;\n};\n\nexport default useCashPriceInEstimatedTWAP;\n","import {useEffect, useState} from 'react';\nimport useBombFinance from './useBombFinance';\nimport {AllocationTime} from '../bomb-finance/types';\nimport useRefresh from './useRefresh';\n\nconst useTreasuryAllocationTimes = () => {\n  const {slowRefresh} = useRefresh();\n  const [time, setTime] = useState<AllocationTime>({\n    from: new Date(),\n    to: new Date(),\n  });\n  const bombFinance = useBombFinance();\n  useEffect(() => {\n    if (bombFinance) {\n      bombFinance.getTreasuryNextAllocationTime().then(setTime);\n    }\n  }, [bombFinance, slowRefresh]);\n  return time;\n};\n\nexport default useTreasuryAllocationTimes;\n","import {useEffect, useState} from 'react';\nimport {BigNumber} from 'ethers';\nimport useBombFinance from './useBombFinance';\nimport useRefresh from './useRefresh';\n\nconst useTotalStakedOnBoardroom = () => {\n  const [totalStaked, setTotalStaked] = useState(BigNumber.from(0));\n  const bombFinance = useBombFinance();\n  const {slowRefresh} = useRefresh();\n  const isUnlocked = bombFinance?.isUnlocked;\n\n  useEffect(() => {\n    async function fetchTotalStaked() {\n      try {\n        setTotalStaked(await bombFinance.getTotalStakedInBoardroom());\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchTotalStaked();\n  }, [isUnlocked, slowRefresh, bombFinance]);\n\n  return totalStaked;\n};\n\nexport default useTotalStakedOnBoardroom;\n","import {useCallback, useEffect, useState} from 'react';\nimport useBombFinance from './useBombFinance';\nimport config from '../config';\nimport {BigNumber} from 'ethers';\n\nconst useCashPriceInLastTWAP = () => {\n  const [price, setPrice] = useState<BigNumber>(BigNumber.from(0));\n  const bombFinance = useBombFinance();\n\n  const fetchCashPrice = useCallback(async () => {\n    setPrice(await bombFinance.getBombPriceInLastTWAP());\n  }, [bombFinance]);\n\n  useEffect(() => {\n    fetchCashPrice().catch((err) => console.error(`Failed to fetch BOMB price: ${err.stack}`));\n    const refreshInterval = setInterval(fetchCashPrice, config.refreshInterval);\n    return () => clearInterval(refreshInterval);\n  }, [setPrice, bombFinance, fetchCashPrice]);\n\n  return price;\n};\n\nexport default useCashPriceInLastTWAP;\n","import React from 'react'\r\nimport MetamaskFox from '../../../assets/img/metamask-fox.svg';\r\nconst Supplies = (props) => {\r\n    return (\r\n        <div className='supply' style={{ display: \"flex\", gap: \"3rem\", color: \"white\", padding: \"1rem 1rem 1.2rem .1rem\", borderBottom: \"solid 1px rgba(195, 197, 203, 0.75)\", width: \"max-content\" }}>\r\n            <span style={{ display: \"flex\", gap: \".5rem\", color: \"white\", width : \"6rem\" }}> <span style={{ height: \"1.2rem\", width: \"1.2rem\", backgroundColor: \"rgba(55, 55, 71, .8)\", borderRadius: \"2rem\", textAlign: \"center\", padding: \"2.5px\" }}>{props.icon} </span><span>{props.title}</span></span>\r\n            <span style={{width : \"4rem\"}}> {props.currentSupply}</span>\r\n            <span style={{width : \"3rem\"}}> {props.totalSupply}</span>\r\n            <span style={{ display: \"flex\", flexDirection: \"Column\", alignItems: \"center\" }}> ${props.price} <span>{props.priceInBtc} BTC</span> </span>\r\n            <span>\r\n                <img src={MetamaskFox} alt=\"\" />\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Supplies","import React from 'react'\r\n\r\nconst Epoch = (props) => {\r\n    return (\r\n        <div style={{color : \"white\", display:\"flex\", flexDirection : \"column\", textAlign:'center', alignItems:'center', width:'10rem'}}>\r\n            <div style={{ display:\"flex\", flexDirection : \"column\", borderBottom: \"solid 1px rgba(195, 197, 203, 0.75)\", width: \"max-content\", padding:'.5rem'}}>\r\n                <span>Current Epoch</span>\r\n                <span style={{fontSize:\"2rem\"}}>{props.Epoch}</span>\r\n            </div>\r\n            <div style={{ display:\"flex\", flexDirection : \"column\", borderBottom: \"solid 1px rgba(195, 197, 203, 0.75)\", width: \"max-content\", padding:'.5rem'}}>\r\n                <span style={{fontSize:\"2rem\"}}>{props.nextEpoch}</span>\r\n                <span>Next Epoch in</span>\r\n            </div>\r\n            <div style={{ display:\"flex\", flexDirection : \"column\", width: \"max-content\", padding:'.5rem', lineHeight : '1.5'}}>\r\n                <span>Live TWAP: <span style={{color : \"rgba(0, 232, 162, 1)\"}}>{props.liveTwap}</span></span>\r\n                <span>TVL: <span style={{color : \"rgba(0, 232, 162, 1)\"}}>{props.TVL}</span></span>\r\n                <span>Last Epoch TWAP: <span style={{color : \"rgba(0, 232, 162, 1)\"}}>{props.lastEpoch}</span></span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Epoch","import React from 'react';\nimport styled from 'styled-components';\nimport Countdown, {CountdownRenderProps} from 'react-countdown';\n\ninterface ProgressCountdownProps {\n  base: Date;\n  deadline: Date;\n  hideBar?: boolean;\n  description: string;\n}\n\nconst ProgressCountdown: React.FC<ProgressCountdownProps> = ({base, deadline, hideBar, description}) => {\n  const percentage =\n    Date.now() >= deadline.getTime()\n      ? 100\n      : ((Date.now() - base.getTime()) / (deadline.getTime() - base.getTime())) * 100;\n\n  const countdownRenderer = (countdownProps: CountdownRenderProps) => {\n    const {days, hours, minutes, seconds} = countdownProps;\n    const h = String(days * 24 + hours);\n    const m = String(minutes);\n    const s = String(seconds);\n    return (\n      <StyledCountdown>\n        {h.padStart(2, '0')}:{m.padStart(2, '0')}:{s.padStart(2, '0')}\n      </StyledCountdown>\n    );\n  };\n  return (\n    // <Card>\n    <StyledCardContentInner>\n      {/* <StyledDesc>{description}</StyledDesc> */}\n      <Countdown key={new Date().getTime()} date={deadline} renderer={countdownRenderer} />\n      {hideBar ? (\n        ''\n      ) : (\n        <StyledProgressOuter>\n          <StyledProgress progress={percentage} />\n        </StyledProgressOuter>\n      )}\n    </StyledCardContentInner>\n    // </Card>\n  );\n};\n\nconst StyledCountdown = styled.p`\n  // font-size: 14px;\n  font-weight: 700;\n  // color: ${(props) => props.theme.color.grey[100]};\n  margin: 0 0 6px 0;\n`;\n\nconst StyledProgressOuter = styled.div`\n  width: 100%;\n  height: 8px;\n  border-radius: 3px;\n  background: ${(props) => props.theme.color.grey[700]};\n`;\n\nconst StyledProgress = styled.div<{progress: number}>`\n  width: ${(props) => props.progress}%;\n  height: 100%;\n  border-radius: 3px;\n  background: ${(props) => props.theme.color.grey[100]};\n`;\n\nconst StyledCardContentInner = styled.div`\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  // padding: ${(props) => props.theme.spacing[2]}px ${(props) => props.theme.spacing[4]}px;\n`;\n\nexport default ProgressCountdown;\n","import React, { useMemo, useState } from 'react'\r\nimport Supplies from './Supplies.jsx';\r\nimport Epoch from './Epoch'\r\nimport TokenSymbol from '../../../components/TokenSymbol';\r\nimport useBombStats from '../../../hooks/useBombStats';\r\nimport useBondStats from '../../../hooks/useBondStats';\r\nimport usebShareStats from '../../../hooks/usebShareStats';\r\nimport { roundAndFormatNumber } from '../../../0x';\r\nimport useTotalValueLocked from '../../../hooks/useTotalValueLocked';\r\nimport useCurrentEpoch from '../../../hooks/useCurrentEpoch';\r\nimport ProgressCountdown from './ProgressCountdown';\r\nimport moment from 'moment';\r\nimport useTreasuryAllocationTimes from '../../../hooks/useTreasuryAllocationTimes';\r\nimport CountUp from 'react-countup';\r\nimport useCashPriceInEstimatedTWAP from '../../../hooks/useCashPriceInEstimatedTWAP';\r\nimport useCashPriceInLastTWAP from '../../../hooks/useCashPriceInLastTWAP';\r\n\r\nconst card = {\r\n    backdropFilter: 'blur(2px) saturate(180%)',\r\n    backgroundColor: 'rgba(35, 40, 75, 0.75)',\r\n    borderRadius: '12px',\r\n    border: '1px solid rgba(114, 140, 223, 1)',\r\n    padding: '1.5rem 3rem'\r\n}\r\n\r\nconst language = \"en\"\r\n\r\n\r\nconst Summary = () => {\r\n\r\n    const bombStats = useBombStats();\r\n    const bShareStats = usebShareStats();\r\n    const tBondStats = useBondStats();\r\n    const currentEpoch = useCurrentEpoch();\r\n    const { to } = useTreasuryAllocationTimes();\r\n    const TVL = useTotalValueLocked();\r\n    const cashStat = useCashPriceInEstimatedTWAP();\r\n    const scalingFactor = useMemo(() => (cashStat ? Number(cashStat.priceInDollars).toFixed(4) : null), [cashStat]);\r\n\r\n    const bombPriceInDollars = useMemo(\r\n        () => (bombStats ? Number(bombStats.priceInDollars).toFixed(2) : null),\r\n        [bombStats],\r\n    );\r\n    const bombPriceInBNB = useMemo(() => (bombStats ? Number(bombStats.tokenInFtm).toFixed(4) : null), [bombStats]);\r\n\r\n    const bSharePriceInDollars = useMemo(\r\n        () => (bShareStats ? Number(bShareStats.priceInDollars).toFixed(2) : null),\r\n        [bShareStats],\r\n      );\r\n      const bSharePriceInBNB = useMemo(\r\n        () => (bShareStats ? Number(bShareStats.tokenInFtm).toFixed(4) : null),\r\n        [bShareStats],\r\n      );\r\n\r\n      const tBondPriceInDollars = useMemo(\r\n        () => (tBondStats ? Number(tBondStats.priceInDollars).toFixed(2) : null),\r\n        [tBondStats],\r\n      );\r\n      const tBondPriceInBNB = useMemo(() => (tBondStats ? Number(tBondStats.tokenInFtm).toFixed(4) : null), [tBondStats]);\r\n      \r\n\r\n  const bombCirculatingSupply = useMemo(() => (bombStats ? String(bombStats.circulatingSupply) : null), [bombStats]);\r\n\r\n  const bShareCirculatingSupply = useMemo(\r\n    () => (bShareStats ? String(bShareStats.circulatingSupply) : null),\r\n    [bShareStats],\r\n  );\r\n  const tBondCirculatingSupply = useMemo(\r\n    () => (tBondStats ? String(tBondStats.circulatingSupply) : null),\r\n    [tBondStats],\r\n  );\r\n\r\n  const bombTotalSupply = useMemo(() => (bombStats ? String(bombStats.totalSupply) : null), [bombStats]);\r\n\r\n  const bShareTotalSupply = useMemo(() => (bShareStats ? String(bShareStats.totalSupply) : null), [bShareStats]);\r\n\r\n  const tBondTotalSupply = useMemo(() => (tBondStats ? String(tBondStats.totalSupply) : null), [tBondStats]);\r\n\r\n  const cashPrice = useCashPriceInLastTWAP();\r\n  const bondScale = (Number(cashPrice) / 100000000000000).toFixed(4);\r\n    return (\r\n        <div style={card}>\r\n            <h2 style={{ color: 'white !important', textAlign: 'center', padding: '1rem', fontSize: '1.2rem', fontWeight: '400', textTransform: 'capitalize',borderBottom: \"solid 1px rgba(195, 197, 203, 0.75)\", marginBottom:'1rem' }}> Bomb Finance Summary</h2>\r\n            <div style={{ display: \"flex\", justifyContent: 'space-between', flexWrap:'wrap', alignItems:'center', rowGap:'2rem'}}>\r\n                <div>\r\n                    <div style={{color : 'white',display:'flex', gap:'2rem', fontSize:'.9rem', justifyContent:'center'}}>\r\n                        <span>Current Supply</span>\r\n                        <span>Total Supply</span>\r\n                        <span>Price</span>\r\n                    </div>\r\n                    <Supplies\r\n                        icon={<TokenSymbol symbol=\"BOMB\" size=\"20\" />}\r\n                        title=\"$BOMB\"\r\n                        currentSupply={Intl.NumberFormat(language, {notation: \"compact\"}).format(bombCirculatingSupply)}\r\n                        totalSupply={Intl.NumberFormat(language, {notation: \"compact\"}).format(bombTotalSupply)}\r\n                        price={bombPriceInDollars ? roundAndFormatNumber(bombPriceInDollars, 2) : '-.--'}\r\n                        priceInBtc={bombPriceInBNB ? bombPriceInBNB : '-.----'}\r\n                    />\r\n                    <Supplies\r\n                        icon={<TokenSymbol symbol=\"BSHARE\" size=\"20\" />}\r\n                        title=\"$BSHARE\"\r\n                        currentSupply={Intl.NumberFormat(language, {notation: \"compact\"}).format(bShareCirculatingSupply)}\r\n                        totalSupply={Intl.NumberFormat(language, {notation: \"compact\"}).format(bShareTotalSupply)}\r\n                        price={bSharePriceInDollars ? bSharePriceInDollars : '-.--'}\r\n                        priceInBtc={bSharePriceInBNB ? bSharePriceInBNB : '-.----'}\r\n                    />\r\n                    <Supplies\r\n                        icon={<TokenSymbol symbol=\"BBOND\" size=\"20\" />}\r\n                        title=\"$BBOND\"\r\n                        currentSupply={Intl.NumberFormat(language, {notation: \"compact\"}).format(tBondCirculatingSupply)}\r\n                        totalSupply={Intl.NumberFormat(language, {notation: \"compact\"}).format(tBondTotalSupply)}\r\n                        price={tBondPriceInDollars ? tBondPriceInDollars : '-.--'}\r\n                        priceInBtc={tBondPriceInBNB ? tBondPriceInBNB : '-.----'}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <Epoch \r\n                    Epoch={Number(currentEpoch)}\r\n                    nextEpoch={<ProgressCountdown base={moment().toDate()} hideBar={true} deadline={to} description=\"Next Epoch\" />}\r\n                    TVL={<CountUp end={TVL} separator=\",\" prefix=\"$\" />}\r\n                    liveTwap={scalingFactor}\r\n                    lastEpoch={bondScale || '-'}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Summary","import { Button } from '@material-ui/core';\r\nimport React from 'react'\r\n\r\n\r\nconst btcCard = (props) => {\r\n    return (\r\n        <div style={{ color: 'white', marginBottom:`${props.mb}` }}>\r\n            <div style={{ display: 'flex', gap: '1rem', color: 'white', }}>\r\n                <span> {props.icon}</span>\r\n                <div style={{\r\n                    width: '100%', borderBottom: 'solid 1px rgba(195, 197, 203, 0.75)', display: 'flex', justifyContent: 'space-between', alignSelf: 'start'\r\n                }}>\r\n                    <div>\r\n                        <span style={{ fontSize: '1.2rem', color: 'white', fontWeight: '600' }}>{props.title}</span>\r\n                        <span style={{ fontSize: '.8rem', color: 'white', backgroundColor: 'rgba(0, 232, 162, 0.5)', borderRadius: '.5rem', padding: '.2rem', marginLeft: '1rem' }}>Recommended</span>\r\n                        <p style={{ fontSize: '.9rem', fontWeight: '100', marginBottom: '.2rem'}}>{props.subHead}</p>\r\n                    </div>\r\n                    <div style={{ alignSelf: `${props.align}` }}>\r\n                        <span>TVL : {props.TVL}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div style={{ textAlign: 'right', width: '100%', margin: '1rem 0', display:`${props.stakeDisp}` }}>\r\n                <span> Total Staked:{props.staked}</span>\r\n            </div>\r\n            <div style={{ display: 'flex', gap: '2rem', lineHeight: '1.5', justifyContent: 'space-between' }}>\r\n                <span style={{ width: '8rem' }}>Daily returns : <span style={{fontSize:'1.3rem'}}>{props.dailyReturn}%</span></span>\r\n                <span style={{ width: '8rem' }}>Your Stake :<br/>\r\n                 {props.stakeIcon}{props.yourStake} <br/>\r\n                    ≈ ${props.stakeInDollars}\r\n                </span>\r\n                <span style={{ width: '8rem' }}>\r\n                    Earned: <br/>\r\n                    {props.earnedIcon}\r\n                    {props.Earned} <br/>\r\n                    ≈ ${props.earningInDollars}\r\n                </span>\r\n                <div style={{\r\n                    display: 'flex',\r\n                    flexWrap: `${props.btnwrap}`,\r\n                    height:`${props.height}`,\r\n                    alignSelf:`${props.alignSelf}`,\r\n                    gap: '0.5rem',\r\n                    justifyContent: 'center',\r\n                    width: `${props.width}`\r\n                }}>\r\n                    <Button variant='outlined' style={{ borderColor: 'white', borderRadius: '1rem' }}>Deposit</Button>\r\n                    <Button variant='outlined' style={{ borderColor: 'white', borderRadius: '1rem' }}>Withdraw</Button>\r\n                    <Button variant='outlined' style={{ borderColor: 'white', borderRadius: '1rem' }}>Claim Rewards</Button>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default btcCard","import { Button } from '@material-ui/core'\r\nimport React , {useMemo} from 'react'\r\nimport BtcCard from './btcCard'\r\nimport TokenSymbol from '../../../components/TokenSymbol';\r\nimport useTotalStakedOnBoardroom from '../../../hooks/useTotalStakedOnBoardroom';\r\nimport { getDisplayBalance } from '../../../utils/formatBalance';\r\nimport CountUp from 'react-countup';\r\nimport useTotalValueLocked from '../../../hooks/useTotalValueLocked';\r\nimport useEarningsOnBoardroom from '../../../hooks/useEarningsOnBoardroom';\r\nimport useStakedBalanceOnBoardroom from '../../../hooks/useStakedBalanceOnBoardroom';\r\nimport useBombStats from '../../../hooks/useBombStats';\r\n\r\n\r\nconst card = {\r\n    upper: {\r\n        backdropFilter: 'blur(2px) saturate(180%)',\r\n        backgroundColor: 'rgba(35, 40, 75, 0.75)',\r\n        borderRadius: '12px',\r\n        border: '1px solid rgba(114, 140, 223, 1)',\r\n        padding: '1rem 2rem',\r\n        color: 'white',\r\n        flex: '2'\r\n    },\r\n    lower: {\r\n        backdropFilter: 'blur(2px) saturate(180%)',\r\n        backgroundColor: 'rgba(35, 40, 75, 0.75)',\r\n        borderRadius: '12px',\r\n        border: '1px solid rgba(114, 140, 223, 1)',\r\n        padding: '1rem 2rem',\r\n        color: 'white',\r\n        flex: '1'\r\n    }\r\n}\r\n\r\nconst Boardroom = () => {\r\n    // const stakedBalance = useStakedBalanceOnBoardroom();\r\n    const totalStaked = useTotalStakedOnBoardroom();\r\n    const TVL = useTotalValueLocked();\r\n    const stakedBalance = useStakedBalanceOnBoardroom();\r\n    const bombStats = useBombStats();\r\n    const tokenPriceInDollars = useMemo(\r\n        () => (bombStats ? Number(bombStats.priceInDollars).toFixed(2) : null),\r\n        [bombStats],\r\n      );\r\n    const earnings = useEarningsOnBoardroom();\r\n    const earnedInDollars = (Number(tokenPriceInDollars) * Number(getDisplayBalance(earnings))).toFixed(2);\r\n\r\n    return (\r\n        <div style={{ display: 'flex', gap: '2rem', marginTop: '2rem', flexWrap: 'wrap', justifyContent: 'center' }}>\r\n            <div>\r\n                <div>\r\n                    <div style={{ textAlign: 'right' }}>\r\n                        <span><a href=\"https://docs.bomb.money/welcome-start-here/readme\" style={{ color: 'rgba(158, 230, 255, 1)' }}>Read Investment Strategy</a></span>\r\n                    </div>\r\n                    <Button\r\n                        variant='text' style={{ backgroundColor: 'rgba(0, 173, 232, 0.8)', color: 'black', width: '100%', margin: '.5rem 0', fontWeight: '600', textTransform: 'capitalize', fontSize: '1.1rem' }}> Invest Now </Button>\r\n                    <div style={{ display: 'flex', gap: '1rem', marginBottom: '1rem' }}>\r\n                        <Button variant='text' style={{ backgroundColor: 'rgba(255, 255, 255, 0.5)', color: 'black', width: '50%', fontWeight: '600', textTransform: 'capitalize', fontSize: '1.1rem' }}>\r\n                            <a\r\n                                href=\"http://discord.bomb.money/\"\r\n                                rel=\"noopener noreferrer\"\r\n                                target=\"_blank\"\r\n                                style={{ textDecoration: 'none', color: '#FFFFFF' }}\r\n                            >\r\n                            Chat on Discord</a> </Button>\r\n                        <Button variant='text' style={{ backgroundColor: 'rgba(255, 255, 255, 0.5)', color: 'black', width: '50%', fontWeight: '600', textTransform: 'capitalize', fontSize: '1.1rem' }}> <a\r\n                                href=\"https://docs.bomb.money/welcome-start-here/readme\"\r\n                                rel=\"noopener noreferrer\"\r\n                                target=\"_blank\"\r\n                                style={{ textDecoration: 'none', color: '#FFFFFF' }}\r\n                            >\r\n                            Read Docs</a> </Button>\r\n                    </div>\r\n                </div>\r\n                <div style={card.upper}>\r\n                    <BtcCard\r\n                        title=\"Boardroom\"\r\n                        icon={<TokenSymbol symbol=\"BSHARE\" size=\"50\" />}\r\n                        subHead=\"Stake BSHARE and earn BOMB every epoch\"\r\n                        TVL= {<CountUp style={{ fontSize: '20px' }} end={TVL} separator=\",\" prefix=\"$\" />}\r\n                        staked={Number(getDisplayBalance(totalStaked)).toFixed(2)}\r\n                        dailyReturn=\"2\"\r\n                        yourStake={getDisplayBalance(stakedBalance)}\r\n                        stakeInDollars={tokenPriceInDollars}\r\n                        stakeIcon={<TokenSymbol symbol=\"BSHARE\" size=\"20\" />}\r\n                        Earned={getDisplayBalance(earnings)}\r\n                        earningInDollars={earnedInDollars}\r\n                        earnedIcon={<TokenSymbol symbol=\"BOMB\" size=\"20\" />}\r\n                        align=\"end\"\r\n                        btnwrap=\"wrap\"\r\n                        width=\"13rem\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div style={card.lower}>\r\n                <span>Latest News</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Boardroom","import React from 'react'\r\nimport { Button } from '@material-ui/core';\r\nimport BtcCard from './btcCard'\r\nimport TokenSymbol from '../../../components/TokenSymbol';\r\nimport useTotalValueLocked from '../../../hooks/useTotalValueLocked';\r\nimport CountUp from 'react-countup';\r\n\r\nconst card = {\r\n    backdropFilter: 'blur(2px) saturate(180%)',\r\n        backgroundColor: 'rgba(35, 40, 75, 0.75)',\r\n        borderRadius: '12px',\r\n        border: '1px solid rgba(114, 140, 223, 1)',\r\n        padding: '1rem 2rem',\r\n        color: 'white',    \r\n        marginTop:'2rem'\r\n}\r\n\r\nconst BombFarms = () => {\r\n    // const stakedBalance = useStakedBalanceOnBoardroom();\r\n    const TVL = useTotalValueLocked();\r\n    return (\r\n\r\n        <div style={card}>\r\n            <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom:'2rem' }}>\r\n                <div>\r\n                    <span style={{ fontSize: '1.2rem', color: 'white', fontWeight: '600' }}>Bomb Farms</span>\r\n                    <p style={{ fontSize: '.9rem', fontWeight: '100', marginBottom: '.2rem' }}>Stake your LP tokens in our farms to start earning $BSHARE</p>\r\n                </div>\r\n                <div>\r\n                <Button variant='outlined' style={{ borderColor: 'white', borderRadius: '1rem' }}>Claim All</Button>\r\n                </div>\r\n            </div>\r\n            <BtcCard\r\n                    title=\"BOMB-BTCB\"\r\n                    icon={<TokenSymbol symbol=\"BOMB-BTCB-LP\" size=\"50\" />}    \r\n                    TVL={<CountUp style={{ fontSize: '20px' }} end={TVL} separator=\",\" prefix=\"$\" />}\r\n                    dailyReturn=\"2\"\r\n                    yourStake=\" 6.0000 \"\r\n                    stakeIcon={<TokenSymbol symbol=\"BOMB-BTCB-LP\" size=\"20\" />}\r\n                    Earned=\" 1660.44\" \r\n                    earnedIcon={<TokenSymbol symbol=\"BSHARE\" size=\"20\" />}\r\n                    align=\"center\"\r\n                    stakeDisp=\"none\"\r\n                    btnwrap=\"nowrap\"\r\n                    height=\"2rem\"\r\n                    alignSelf=\"end\"\r\n                    width='auto'\r\n                    mb='1.5rem'\r\n                    />\r\n            <BtcCard\r\n                    title=\"BSHARE-BNB\"\r\n                    icon={<TokenSymbol symbol=\"BSHARE-BNB-LP\" size=\"50\" />}    \r\n                    TVL={<CountUp style={{ fontSize: '20px' }} end={TVL} separator=\",\" prefix=\"$\" />}\r\n                    dailyReturn=\"2\"\r\n                    yourStake=\" 6.0000 \"\r\n                    stakeIcon={<TokenSymbol symbol=\"BSHARE-BNB-LP\" size=\"20\" />}\r\n                    Earned=\" 1660.44\" \r\n                    earnedIcon={<TokenSymbol symbol=\"BSHARE\" size=\"20\" />}\r\n                    align=\"center\"\r\n                    stakeDisp=\"none\"\r\n                    btnwrap=\"nowrap\"\r\n                    height=\"2rem\"\r\n                    alignSelf=\"end\"\r\n                    width='auto'\r\n                    mb='1rem'\r\n                    />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BombFarms","import React, { useMemo } from 'react';\r\nimport TokenSymbol from '../../../components/TokenSymbol';\r\nimport { Button } from '@material-ui/core';\r\nimport useBondStats from '../../../hooks/useBondStats';\r\nimport { getDisplayBalance } from '../../../utils/formatBalance';\r\nimport useTokenBalance from '../../../hooks/useTokenBalance';\r\nimport useBombFinance from '../../../hooks/useBombFinance';\r\n\r\n\r\nconst card = {\r\n    backdropFilter: 'blur(2px) saturate(180%)',\r\n        backgroundColor: 'rgba(35, 40, 75, 0.75)',\r\n        borderRadius: '12px',\r\n        border: '1px solid rgba(114, 140, 223, 1)',\r\n        padding: '1rem 2rem',\r\n        color: 'white',    \r\n        marginTop:'2rem'\r\n}\r\n\r\nconst Bonds = (props) => {\r\n  const tBondStats = useBondStats();\r\n  const tBondPriceInBNB = useMemo(() => (tBondStats ? Number(tBondStats.tokenInFtm).toFixed(4) : null), [tBondStats]);\r\n  const bombFinance = useBombFinance();\r\n  const bondBalance = useTokenBalance(bombFinance?.BBOND);\r\n\r\n    return (\r\n        <div style={card}>\r\n            <div style={{ display: 'flex', gap: '1rem', color: 'white'}}>\r\n                <span> <TokenSymbol symbol=\"BBOND\" size=\"50\" /></span>\r\n                <div>\r\n                    <span style={{ fontSize: '1.2rem', color: 'white', fontWeight: '600' }}>Bonds </span>\r\n                    <p style={{ fontSize: '.9rem', fontWeight: '100', marginBottom: '.2rem', color:'rgba(195, 197, 203, 1)'}}>BBOND can be purchased only on contraction periods, when TWAP of BOMB is below 1</p>\r\n                </div>\r\n            </div>\r\n            <div style={{display:'flex', justifyContent:'space-between', gap:'5rem'}}>\r\n                <div style={{display:'flex', gap:'7rem', flex:'3', marginTop:'1.5rem'}}>\r\n                    <div style={{display:'flex', flexDirection:'column', gap:'.8rem'}}>\r\n                        <span style={{color:'rgba(195, 197, 203, 1)'}}>Current Price: (Bomb)^2</span>\r\n                        <span style={{fontSize:'1.3rem'}}>BBond = {tBondPriceInBNB ? tBondPriceInBNB : '-.----'} BTCB</span>\r\n                    </div>\r\n                    <div style={{display:'flex', flexDirection:'column', gap:'.4rem', textAlign:'center'}}>\r\n                        <span>Available to redeem: </span>\r\n                        <span style={{fontSize:'1.7rem',display:'flex', justifyContent:'center'}}>\r\n                          <span><TokenSymbol symbol=\"BBOND\" size=\"40\" /></span><span style={{alignSelf:'center'}}>{getDisplayBalance(bondBalance)}</span> </span>\r\n                    </div>\r\n                </div>\r\n                <div style={{display:'flex', flexDirection:'column', gap:'1rem', flex:'2'}}>\r\n                    <div style={{display:'flex', gap:'2rem', justifyContent:'space-between', alignItems:'center',borderBottom: 'solid 1px rgba(195, 197, 203, 0.75)',paddingBottom:'1rem'}}>\r\n                        <div style={{display:'flex', flexDirection:'column'}}>\r\n                            <span>Purchase BBond</span>\r\n                            <span style={{color:'rgba(195, 197, 203, 1)'}}>Bomb is over peg</span>\r\n                        </div>\r\n                        <div>\r\n                            <Button variant='outlined' style={{ borderColor: 'white', borderRadius: '1rem' }}>Purchase</Button>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{display:'flex', gap:'2rem', justifyContent:'space-between', alignItems:'center'}}>\r\n                        <span>\r\n                            Redeem Bomb\r\n                        </span>\r\n                        <div>\r\n                            <Button variant='outlined' style={{ borderColor: 'white', borderRadius: '1rem' }}>Redeem</Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Bonds","import React from 'react'\r\nimport Page from '../../components/Page';\r\nimport {createGlobalStyle} from 'styled-components';\r\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\r\nimport Summary from './components/Summary';\r\nimport HomeImage from '../../assets/img/background.jpg';\r\nimport { Helmet } from 'react-helmet';\r\nimport Boardroom from './components/Boardroom';\r\nimport BombFarms from './components/BombFarms';\r\nimport Bonds from './components/Bonds';\r\n\r\n\r\nconst BackgroundImage = createGlobalStyle`\r\n  body {\r\n    background: url(${HomeImage}) repeat !important;\r\n    background-size: cover !important;\r\n    background-color: #171923;\r\n  }\r\n`;\r\n\r\nconst TITLE = 'bomb.money | Dashboard'\r\n\r\nconst Dashboard = () => {\r\n  const { path } = useRouteMatch();\r\n\r\n  return (\r\n    <Switch>\r\n      <Page>\r\n        <BackgroundImage />\r\n              <Helmet>\r\n        <title>{TITLE}</title>\r\n      </Helmet>\r\n      <Route exact path={path}>\r\n          <Summary/>\r\n          <Boardroom/>\r\n          <BombFarms/>\r\n          <Bonds/>\r\n      </Route>\r\n            \r\n            \r\n      </Page>\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default Dashboard"],"sourceRoot":""}