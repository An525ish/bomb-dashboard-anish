{"version":3,"sources":["components/Spacer/Spacer.tsx","hooks/useStakedBalanceOnBoardroom.ts","hooks/useStakedTokenPriceInDollars.ts","hooks/useEarningsOnBoardroom.ts","hooks/useCurrentEpoch.ts","hooks/useCashPriceInEstimatedTWAP.ts","hooks/useTreasuryAllocationTimes.ts","hooks/useTotalStakedOnBoardroom.ts","hooks/boardroom/useClaimRewardTimerBoardroom.ts","hooks/boardroom/useClaimRewardCheck.ts","views/Boardroom/components/ProgressCountdown.tsx","hooks/useHarvestFromBoardroom.ts","views/Boardroom/components/Harvest.tsx","hooks/boardroom/useWithdrawCheck.ts","views/Boardroom/components/DepositModal.tsx","views/Boardroom/components/WithdrawModal.tsx","hooks/boardroom/useUnstakeTimerBoardroom.ts","hooks/useStakeToBoardroom.ts","hooks/useWithdrawFromBoardroom.ts","views/Boardroom/components/Stake.tsx","hooks/useRedeemOnBoardroom.ts","hooks/useFetchBoardroomAPR.ts","views/Boardroom/Boardroom.js","hooks/useHandleTransactionReceipt.ts","state/transactions/hooks.tsx","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","components/ModalActions/ModalActions.tsx","hooks/useAllowance.ts","components/CardIcon/CardIcon.tsx","hooks/useApprove.ts","components/UnlockWallet/UnlockWallet.tsx","components/Value/Value.tsx","components/Icon/Icon.tsx","components/icons/AddIcon.tsx","components/icons/RemoveIcon.tsx","components/IconButton/IconButton.tsx"],"names":["StyledSpacer","styled","div","props","size","Spacer","s","spacing","useContext","ThemeContext","useStakedBalanceOnBoardroom","slowRefresh","useRefresh","useState","BigNumber","from","balance","setBalance","bombFinance","useBombFinance","isUnlocked","useEffect","a","getStakedSharesOnBoardroom","console","error","fetchBalance","useStakedTokenPriceInDollars","stakedTokenName","stakedToken","stakedTokenPriceInDollars","setStakedTokenPriceInDollars","useCallback","getDepositTokenPriceInDollars","catch","err","stack","refreshStakedTokenPriceInDollars","setInterval","config","refreshInterval","clearInterval","useEarningsOnBoardroom","getEarningsOnBoardroom","useCurrentEpoch","currentEpoch","setCurrentEpoch","getCurrentEpoch","fetchCurrentEpoch","useCashPriceInEstimatedTWAP","stat","setStat","getBombStatInEstimatedTWAP","fetchCashPrice","useTreasuryAllocationTimes","Date","to","time","setTime","getTreasuryNextAllocationTime","then","useTotalStakedOnBoardroom","totalStaked","setTotalStaked","getTotalStakedInBoardroom","fetchTotalStaked","useClaimRewardTimerBoardroom","getUserClaimRewardTime","useClaimRewardCheck","canClaimReward","setCanClaimReward","canUserClaimRewardFromBoardroom","canUserClaimReward","StyledCountdown","p","theme","color","grey","StyledProgressOuter","StyledProgress","progress","StyledCardContentInner","ProgressCountdown","base","deadline","hideBar","percentage","description","now","getTime","key","date","renderer","countdownProps","days","hours","minutes","seconds","h","String","m","padStart","useHarvestFromBoardroom","handleTransactionReceipt","useHandleTransactionReceipt","onReward","harvestCashFromBoardroom","StyledCardHeader","StyledCardActions","Harvest","bombStats","useBombStats","earnings","tokenPriceInDollars","useMemo","Number","priceInDollars","toFixed","earnedInDollars","getDisplayBalance","Box","Card","CardContent","CardIcon","TokenSymbol","symbol","Value","value","Label","text","variant","Button","onClick","className","eq","disabled","mt","style","Typography","textAlign","useWithdrawCheck","canWithdraw","setCanWithdraw","canUserUnstakeFromBoardroom","canUserWithdraw","DepositModal","max","onConfirm","onDismiss","tokenName","val","setVal","fullBalance","getFullDisplayBalance","handleChange","e","currentTarget","handleSelectMax","Modal","ModalTitle","TokenInput","onSelectMax","onChange","ModalActions","WithdrawModal","useUnstakeTimerBoardroom","getUserUnstakeTime","useStakeToBoardroom","onStake","amount","stakeShareToBoardroom","useWithdrawFromBoardroom","onWithdraw","withdrawShareFromBoardroom","StyledActionSpacer","Stake","useApprove","BSHARE","contracts","Boardroom","address","approveStatus","approve","tokenBalance","useTokenBalance","stakedBalance","toString","canWithdrawFromBoardroom","useModal","onDismissDeposit","onPresentDeposit","onDismissWithdraw","onPresentWithdraw","ApprovalState","APPROVED","NOT_APPROVED","marginTop","IconButton","useRedeemOnBoardroom","onRedeem","alertDesc","exitFromBoardroom","useFetchBoardroomAPR","apr","setApr","getBoardroomAPR","fetchBoardroomAPR","BackgroundImage","createGlobalStyle","HomeImage","useStyles","makeStyles","gridItem","height","breakpoints","up","StyledBoardroom","StyledCardsWrapper","StyledCardWrapper","classes","account","useWallet","cashStat","boardroomAPR","scalingFactor","Page","Helmet","align","gutterBottom","Grid","container","justify","item","xs","md","lg","textTransform","moment","toDate","width","Alert","severity","href","UnlockWallet","addTransaction","useTransactionAdder","addPopup","useAddPopup","promise","summary","tx","message","includes","toLowerCase","slice","chainId","dispatch","useDispatch","response","approval","hash","Error","useAllTransactions","state","useSelector","transactions","useHasPendingApproval","tokenAddress","spender","allTransactions","Object","keys","some","receipt","addedTime","isTransactionRecent","StyledInputWrapper","borderRadius","StyledInput","input","Input","endAdornment","placeholder","startAdornment","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","toLocaleString","StyledModalActions","StyledModalAction","children","l","React","Children","toArray","length","map","child","i","useAllowance","token","pendingApproval","allowance","setAllowance","fetchAllowance","StyledCardIcon","APPROVE_AMOUNT","ethers","constants","MaxUint256","APPROVE_BASE_AMOUNT","currentAllowance","approvalState","lt","PENDING","UNKNOWN","AccountButton","StyledValue","StyledIcon","Icon","AddIcon","themeColor","viewBox","d","fill","RemoveIcon","StyledButton","button","undefined","StyledLink","Link"],"mappings":"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","file":"static/js/10.92df0613.chunk.js","sourcesContent":["import React, {useContext} from 'react';\nimport styled, {ThemeContext} from 'styled-components';\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg';\n}\n\nconst Spacer: React.FC<SpacerProps> = ({size = 'md'}) => {\n  const {spacing} = useContext(ThemeContext);\n\n  let s: number;\n  switch (size) {\n    case 'lg':\n      s = spacing[6];\n      break;\n    case 'sm':\n      s = spacing[2];\n      break;\n    case 'md':\n    default:\n      s = spacing[4];\n  }\n\n  return <StyledSpacer size={s} />;\n};\n\ninterface StyledSpacerProps {\n  size: number;\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`;\n\nexport default Spacer;\n","import {useEffect, useState} from 'react';\nimport {BigNumber} from 'ethers';\nimport useBombFinance from './useBombFinance';\nimport useRefresh from './useRefresh';\n\nconst useStakedBalanceOnBoardroom = () => {\n  const {slowRefresh} = useRefresh();\n  const [balance, setBalance] = useState(BigNumber.from(0));\n  const bombFinance = useBombFinance();\n  const isUnlocked = bombFinance?.isUnlocked;\n  useEffect(() => {\n    async function fetchBalance() {\n      try {\n        setBalance(await bombFinance.getStakedSharesOnBoardroom());\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    if (isUnlocked) {\n      fetchBalance();\n    }\n  }, [slowRefresh, isUnlocked, bombFinance]);\n  return balance;\n};\n\nexport default useStakedBalanceOnBoardroom;\n","import {useCallback, useEffect, useState} from 'react';\n\nimport useBombFinance from './useBombFinance';\nimport config from '../config';\nimport ERC20 from '../bomb-finance/ERC20';\n\nconst useStakedTokenPriceInDollars = (stakedTokenName: string, stakedToken: ERC20) => {\n  const [stakedTokenPriceInDollars, setStakedTokenPriceInDollars] = useState('0');\n  const bombFinance = useBombFinance();\n  const isUnlocked = bombFinance?.isUnlocked;\n\n  const fetchBalance = useCallback(async () => {\n    const balance = await bombFinance.getDepositTokenPriceInDollars(stakedTokenName, stakedToken);\n    setStakedTokenPriceInDollars(balance);\n  }, [stakedToken, stakedTokenName, bombFinance]);\n\n  useEffect(() => {\n    if (isUnlocked) {\n      fetchBalance().catch((err) => console.error(err.stack));\n\n      const refreshStakedTokenPriceInDollars = setInterval(fetchBalance, config.refreshInterval);\n      return () => clearInterval(refreshStakedTokenPriceInDollars);\n    }\n  }, [isUnlocked, setStakedTokenPriceInDollars, bombFinance, fetchBalance]);\n\n  return stakedTokenPriceInDollars;\n};\n\nexport default useStakedTokenPriceInDollars;\n","import {useEffect, useState} from 'react';\nimport {BigNumber} from 'ethers';\nimport useBombFinance from './useBombFinance';\nimport useRefresh from './useRefresh';\n\nconst useEarningsOnBoardroom = () => {\n  const {slowRefresh} = useRefresh();\n  const [balance, setBalance] = useState(BigNumber.from(0));\n  const bombFinance = useBombFinance();\n  const isUnlocked = bombFinance?.isUnlocked;\n\n  useEffect(() => {\n    async function fetchBalance() {\n      try {\n        setBalance(await bombFinance.getEarningsOnBoardroom());\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    if (isUnlocked) {\n      fetchBalance();\n    }\n  }, [isUnlocked, bombFinance, slowRefresh]);\n\n  return balance;\n};\n\nexport default useEarningsOnBoardroom;\n","import {useEffect, useState} from 'react';\nimport useBombFinance from './useBombFinance';\nimport {BigNumber} from 'ethers';\nimport useRefresh from './useRefresh';\n\nconst useCurrentEpoch = () => {\n  const [currentEpoch, setCurrentEpoch] = useState<BigNumber>(BigNumber.from(0));\n  const bombFinance = useBombFinance();\n  const {slowRefresh} = useRefresh();\n\n  useEffect(() => {\n    async function fetchCurrentEpoch() {\n      try {\n        setCurrentEpoch(await bombFinance.getCurrentEpoch());\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchCurrentEpoch();\n  }, [setCurrentEpoch, bombFinance, slowRefresh]);\n\n  return currentEpoch;\n};\n\nexport default useCurrentEpoch;\n","import {useEffect, useState} from 'react';\nimport useBombFinance from './useBombFinance';\nimport {TokenStat} from '../bomb-finance/types';\nimport useRefresh from './useRefresh';\n\nconst useCashPriceInEstimatedTWAP = () => {\n  const [stat, setStat] = useState<TokenStat>();\n  const bombFinance = useBombFinance();\n  const {slowRefresh} = useRefresh();\n\n  useEffect(() => {\n    async function fetchCashPrice() {\n      try {\n        setStat(await bombFinance.getBombStatInEstimatedTWAP());\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchCashPrice();\n  }, [setStat, bombFinance, slowRefresh]);\n\n  return stat;\n};\n\nexport default useCashPriceInEstimatedTWAP;\n","import {useEffect, useState} from 'react';\nimport useBombFinance from './useBombFinance';\nimport {AllocationTime} from '../bomb-finance/types';\nimport useRefresh from './useRefresh';\n\nconst useTreasuryAllocationTimes = () => {\n  const {slowRefresh} = useRefresh();\n  const [time, setTime] = useState<AllocationTime>({\n    from: new Date(),\n    to: new Date(),\n  });\n  const bombFinance = useBombFinance();\n  useEffect(() => {\n    if (bombFinance) {\n      bombFinance.getTreasuryNextAllocationTime().then(setTime);\n    }\n  }, [bombFinance, slowRefresh]);\n  return time;\n};\n\nexport default useTreasuryAllocationTimes;\n","import {useEffect, useState} from 'react';\nimport {BigNumber} from 'ethers';\nimport useBombFinance from './useBombFinance';\nimport useRefresh from './useRefresh';\n\nconst useTotalStakedOnBoardroom = () => {\n  const [totalStaked, setTotalStaked] = useState(BigNumber.from(0));\n  const bombFinance = useBombFinance();\n  const {slowRefresh} = useRefresh();\n  const isUnlocked = bombFinance?.isUnlocked;\n\n  useEffect(() => {\n    async function fetchTotalStaked() {\n      try {\n        setTotalStaked(await bombFinance.getTotalStakedInBoardroom());\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchTotalStaked();\n  }, [isUnlocked, slowRefresh, bombFinance]);\n\n  return totalStaked;\n};\n\nexport default useTotalStakedOnBoardroom;\n","import {useEffect, useState} from 'react';\nimport useBombFinance from '../useBombFinance';\nimport {AllocationTime} from '../../bomb-finance/types';\n\nconst useClaimRewardTimerBoardroom = () => {\n  const [time, setTime] = useState<AllocationTime>({\n    from: new Date(),\n    to: new Date(),\n  });\n  const bombFinance = useBombFinance();\n\n  useEffect(() => {\n    if (bombFinance) {\n      bombFinance.getUserClaimRewardTime().then(setTime);\n    }\n  }, [bombFinance]);\n  return time;\n};\n\nexport default useClaimRewardTimerBoardroom;\n","import {useEffect, useState} from 'react';\nimport useRefresh from '../useRefresh';\nimport useBombFinance from '../useBombFinance';\n\nconst useClaimRewardCheck = () => {\n  const {slowRefresh} = useRefresh();\n  const [canClaimReward, setCanClaimReward] = useState(false);\n  const bombFinance = useBombFinance();\n  const isUnlocked = bombFinance?.isUnlocked;\n\n  useEffect(() => {\n    async function canUserClaimReward() {\n      try {\n        setCanClaimReward(await bombFinance.canUserClaimRewardFromBoardroom());\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    if (isUnlocked) {\n      canUserClaimReward();\n    }\n  }, [isUnlocked, slowRefresh, bombFinance]);\n\n  return canClaimReward;\n};\n\nexport default useClaimRewardCheck;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Countdown, {CountdownRenderProps} from 'react-countdown';\n\ninterface ProgressCountdownProps {\n  base: Date;\n  deadline: Date;\n  hideBar?: boolean;\n  description: string;\n}\n\nconst ProgressCountdown: React.FC<ProgressCountdownProps> = ({base, deadline, hideBar, description}) => {\n  const percentage =\n    Date.now() >= deadline.getTime()\n      ? 100\n      : ((Date.now() - base.getTime()) / (deadline.getTime() - base.getTime())) * 100;\n\n  const countdownRenderer = (countdownProps: CountdownRenderProps) => {\n    const {days, hours, minutes, seconds} = countdownProps;\n    const h = String(days * 24 + hours);\n    const m = String(minutes);\n    const s = String(seconds);\n    return (\n      <StyledCountdown>\n        {h.padStart(2, '0')}:{m.padStart(2, '0')}:{s.padStart(2, '0')}\n      </StyledCountdown>\n    );\n  };\n  return (\n    // <Card>\n    <StyledCardContentInner>\n      {/* <StyledDesc>{description}</StyledDesc> */}\n      <Countdown key={new Date().getTime()} date={deadline} renderer={countdownRenderer} />\n      {hideBar ? (\n        ''\n      ) : (\n        <StyledProgressOuter>\n          <StyledProgress progress={percentage} />\n        </StyledProgressOuter>\n      )}\n    </StyledCardContentInner>\n    // </Card>\n  );\n};\n\nconst StyledCountdown = styled.p`\n  // font-size: 14px;\n  font-weight: 700;\n  // color: ${(props) => props.theme.color.grey[100]};\n  margin: 0 0 6px 0;\n`;\n\nconst StyledProgressOuter = styled.div`\n  width: 100%;\n  height: 8px;\n  border-radius: 3px;\n  background: ${(props) => props.theme.color.grey[700]};\n`;\n\nconst StyledProgress = styled.div<{progress: number}>`\n  width: ${(props) => props.progress}%;\n  height: 100%;\n  border-radius: 3px;\n  background: ${(props) => props.theme.color.grey[100]};\n`;\n\nconst StyledCardContentInner = styled.div`\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  // padding: ${(props) => props.theme.spacing[2]}px ${(props) => props.theme.spacing[4]}px;\n`;\n\nexport default ProgressCountdown;\n","import {useCallback} from 'react';\nimport useBombFinance from './useBombFinance';\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\n\nconst useHarvestFromBoardroom = () => {\n  const bombFinance = useBombFinance();\n  const handleTransactionReceipt = useHandleTransactionReceipt();\n\n  const handleReward = useCallback(() => {\n    handleTransactionReceipt(bombFinance.harvestCashFromBoardroom(), 'Claim BOMB from Boardroom');\n  }, [bombFinance, handleTransactionReceipt]);\n\n  return {onReward: handleReward};\n};\n\nexport default useHarvestFromBoardroom;\n","import React, {useMemo} from 'react';\nimport styled from 'styled-components';\n\nimport {Box, Button, Card, CardContent, Typography} from '@material-ui/core';\n\nimport TokenSymbol from '../../../components/TokenSymbol';\nimport Label from '../../../components/Label';\nimport Value from '../../../components/Value';\nimport CardIcon from '../../../components/CardIcon';\nimport useClaimRewardTimerBoardroom from '../../../hooks/boardroom/useClaimRewardTimerBoardroom';\nimport useClaimRewardCheck from '../../../hooks/boardroom/useClaimRewardCheck';\nimport ProgressCountdown from './ProgressCountdown';\nimport useHarvestFromBoardroom from '../../../hooks/useHarvestFromBoardroom';\nimport useEarningsOnBoardroom from '../../../hooks/useEarningsOnBoardroom';\nimport useBombStats from '../../../hooks/useBombStats';\nimport {getDisplayBalance} from '../../../utils/formatBalance';\n\nconst Harvest: React.FC = () => {\n  const bombStats = useBombStats();\n  const {onReward} = useHarvestFromBoardroom();\n  const earnings = useEarningsOnBoardroom();\n  const canClaimReward = useClaimRewardCheck();\n\n  const tokenPriceInDollars = useMemo(\n    () => (bombStats ? Number(bombStats.priceInDollars).toFixed(2) : null),\n    [bombStats],\n  );\n\n  const earnedInDollars = (Number(tokenPriceInDollars) * Number(getDisplayBalance(earnings))).toFixed(2);\n\n  const {from, to} = useClaimRewardTimerBoardroom();\n\n  return (\n    <Box>\n      <Card>\n        <CardContent>\n          <StyledCardContentInner>\n            <StyledCardHeader>\n              <CardIcon>\n                <TokenSymbol symbol=\"BOMB\" />\n              </CardIcon>\n              <Value value={getDisplayBalance(earnings)} />\n              <Label text={`≈ $${earnedInDollars}`} variant=\"yellow\" />\n              <Label text=\"BOMB Earned\" variant=\"yellow\" />\n            </StyledCardHeader>\n            <StyledCardActions>\n              <Button\n                onClick={onReward}\n                className={earnings.eq(0) || !canClaimReward ? 'shinyButtonDisabled' : 'shinyButton'}\n                disabled={earnings.eq(0) || !canClaimReward}\n              >\n                Claim Reward\n              </Button>\n            </StyledCardActions>\n          </StyledCardContentInner>\n        </CardContent>\n      </Card>\n      <Box mt={2} style={{color: '#FFF'}}>\n        {canClaimReward ? (\n          ''\n        ) : (\n          <Card>\n            <CardContent>\n              <Typography style={{textAlign: 'center'}}>Claim possible in</Typography>\n              <ProgressCountdown hideBar={true} base={from} deadline={to} description=\"Claim available in\" />\n            </CardContent>\n          </Card>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${(props) => props.theme.spacing[6]}px;\n  width: 100%;\n`;\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport default Harvest;\n","import {useEffect, useState} from 'react';\nimport useBombFinance from '../useBombFinance';\nimport useRefresh from '../useRefresh';\n\nconst useWithdrawCheck = () => {\n  const [canWithdraw, setCanWithdraw] = useState(false);\n  const bombFinance = useBombFinance();\n  const {slowRefresh} = useRefresh();\n  const isUnlocked = bombFinance?.isUnlocked;\n\n  useEffect(() => {\n    async function canUserWithdraw() {\n      try {\n        setCanWithdraw(await bombFinance.canUserUnstakeFromBoardroom());\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    if (isUnlocked) {\n      canUserWithdraw();\n    }\n  }, [isUnlocked, bombFinance, slowRefresh]);\n\n  return canWithdraw;\n};\n\nexport default useWithdrawCheck;\n","import React, {useCallback, useMemo, useState} from 'react';\n\nimport {Button} from '@material-ui/core';\n// import Button from '../../../components/Button'\nimport Modal, {ModalProps} from '../../../components/Modal';\nimport ModalActions from '../../../components/ModalActions';\nimport ModalTitle from '../../../components/ModalTitle';\nimport TokenInput from '../../../components/TokenInput';\n\nimport {getFullDisplayBalance} from '../../../utils/formatBalance';\nimport {BigNumber} from 'ethers';\n\ninterface DepositModalProps extends ModalProps {\n  max: BigNumber;\n  onConfirm: (amount: string) => void;\n  tokenName?: string;\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({max, onConfirm, onDismiss, tokenName = ''}) => {\n  const [val, setVal] = useState('');\n\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max, tokenName === 'USDC' ? 6 : 18);\n  }, [max, tokenName]);\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value);\n    },\n    [setVal],\n  );\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance);\n  }, [fullBalance, setVal]);\n\n  return (\n    <Modal>\n      <ModalTitle text={`Deposit ${tokenName}`} />\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button color=\"primary\" variant=\"contained\" onClick={() => onConfirm(val)}>\n          Confirm\n        </Button>\n      </ModalActions>\n    </Modal>\n  );\n};\n\nexport default DepositModal;\n","import React, {useCallback, useMemo, useState} from 'react';\n\nimport {Button} from '@material-ui/core';\nimport Modal, {ModalProps} from '../../../components/Modal';\nimport ModalActions from '../../../components/ModalActions';\nimport ModalTitle from '../../../components/ModalTitle';\nimport TokenInput from '../../../components/TokenInput';\n\nimport {getFullDisplayBalance} from '../../../utils/formatBalance';\nimport {BigNumber} from 'ethers';\n\ninterface WithdrawModalProps extends ModalProps {\n  max: BigNumber;\n  onConfirm: (amount: string) => void;\n  tokenName?: string;\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({onConfirm, onDismiss, max, tokenName = ''}) => {\n  const [val, setVal] = useState('');\n\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max);\n  }, [max]);\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value);\n    },\n    [setVal],\n  );\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance);\n  }, [fullBalance, setVal]);\n\n  return (\n    <Modal>\n      <ModalTitle text={`Withdraw ${tokenName}`} />\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button color=\"primary\" variant=\"contained\" onClick={() => onConfirm(val)}>\n          Confirm\n        </Button>\n        {/* <Button text=\"Cancel\" variant=\"secondary\" onClick={onDismiss} />\n        <Button text=\"Confirm\" onClick={() => onConfirm(val)} /> */}\n      </ModalActions>\n    </Modal>\n  );\n};\n\nexport default WithdrawModal;\n","import {useEffect, useState} from 'react';\nimport useBombFinance from '../useBombFinance';\nimport {AllocationTime} from '../../bomb-finance/types';\n\nconst useUnstakeTimerBoardroom = () => {\n  const [time, setTime] = useState<AllocationTime>({\n    from: new Date(),\n    to: new Date(),\n  });\n  const bombFinance = useBombFinance();\n\n  useEffect(() => {\n    if (bombFinance) {\n      bombFinance.getUserUnstakeTime().then(setTime);\n    }\n  }, [bombFinance]);\n  return time;\n};\n\nexport default useUnstakeTimerBoardroom;\n","import {useCallback} from 'react';\nimport useBombFinance from './useBombFinance';\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\n\nconst useStakeToBoardroom = () => {\n  const bombFinance = useBombFinance();\n  const handleTransactionReceipt = useHandleTransactionReceipt();\n\n  const handleStake = useCallback(\n    (amount: string) => {\n      handleTransactionReceipt(bombFinance.stakeShareToBoardroom(amount), `Stake ${amount} BSHARE to the boardroom`);\n    },\n    [bombFinance, handleTransactionReceipt],\n  );\n  return {onStake: handleStake};\n};\n\nexport default useStakeToBoardroom;\n","import {useCallback} from 'react';\nimport useBombFinance from './useBombFinance';\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\n\nconst useWithdrawFromBoardroom = () => {\n  const bombFinance = useBombFinance();\n  const handleTransactionReceipt = useHandleTransactionReceipt();\n\n  const handleWithdraw = useCallback(\n    (amount: string) => {\n      handleTransactionReceipt(\n        bombFinance.withdrawShareFromBoardroom(amount),\n        `Withdraw ${amount} BSHARE from the boardroom`,\n      );\n    },\n    [bombFinance, handleTransactionReceipt],\n  );\n  return {onWithdraw: handleWithdraw};\n};\n\nexport default useWithdrawFromBoardroom;\n","import React, {useMemo} from 'react';\nimport styled from 'styled-components';\n\nimport {Box, Button, Card, CardContent, Typography} from '@material-ui/core';\n\n// import Button from '../../../components/Button';\n// import Card from '../../../components/Card';\n// import CardContent from '../../../components/CardContent';\nimport CardIcon from '../../../components/CardIcon';\nimport {AddIcon, RemoveIcon} from '../../../components/icons';\nimport IconButton from '../../../components/IconButton';\nimport Label from '../../../components/Label';\nimport Value from '../../../components/Value';\n\nimport useApprove, {ApprovalState} from '../../../hooks/useApprove';\nimport useModal from '../../../hooks/useModal';\nimport useTokenBalance from '../../../hooks/useTokenBalance';\nimport useWithdrawCheck from '../../../hooks/boardroom/useWithdrawCheck';\n\nimport {getDisplayBalance} from '../../../utils/formatBalance';\n\nimport DepositModal from './DepositModal';\nimport WithdrawModal from './WithdrawModal';\nimport useBombFinance from '../../../hooks/useBombFinance';\nimport ProgressCountdown from './ProgressCountdown';\nimport useStakedBalanceOnBoardroom from '../../../hooks/useStakedBalanceOnBoardroom';\nimport useStakedTokenPriceInDollars from '../../../hooks/useStakedTokenPriceInDollars';\nimport useUnstakeTimerBoardroom from '../../../hooks/boardroom/useUnstakeTimerBoardroom';\nimport TokenSymbol from '../../../components/TokenSymbol';\nimport useStakeToBoardroom from '../../../hooks/useStakeToBoardroom';\nimport useWithdrawFromBoardroom from '../../../hooks/useWithdrawFromBoardroom';\n\nconst Stake: React.FC = () => {\n  const bombFinance = useBombFinance();\n  const [approveStatus, approve] = useApprove(bombFinance.BSHARE, bombFinance.contracts.Boardroom.address);\n\n  const tokenBalance = useTokenBalance(bombFinance.BSHARE);\n  const stakedBalance = useStakedBalanceOnBoardroom();\n  const {from, to} = useUnstakeTimerBoardroom();\n\n  const stakedTokenPriceInDollars = useStakedTokenPriceInDollars('BSHARE', bombFinance.BSHARE);\n  const tokenPriceInDollars = useMemo(\n    () =>\n      stakedTokenPriceInDollars\n        ? (Number(stakedTokenPriceInDollars) * Number(getDisplayBalance(stakedBalance))).toFixed(2).toString()\n        : null,\n    [stakedTokenPriceInDollars, stakedBalance],\n  );\n  // const isOldBoardroomMember = boardroomVersion !== 'latest';\n\n  const {onStake} = useStakeToBoardroom();\n  const {onWithdraw} = useWithdrawFromBoardroom();\n  const canWithdrawFromBoardroom = useWithdrawCheck();\n\n  const [onPresentDeposit, onDismissDeposit] = useModal(\n    <DepositModal\n      max={tokenBalance}\n      onConfirm={(value) => {\n        onStake(value);\n        onDismissDeposit();\n      }}\n      tokenName={'BShare'}\n    />,\n  );\n\n  const [onPresentWithdraw, onDismissWithdraw] = useModal(\n    <WithdrawModal\n      max={stakedBalance}\n      onConfirm={(value) => {\n        onWithdraw(value);\n        onDismissWithdraw();\n      }}\n      tokenName={'BShare'}\n    />,\n  );\n\n  return (\n    <Box>\n      <Card>\n        <CardContent>\n          <StyledCardContentInner>\n            <StyledCardHeader>\n              <CardIcon>\n                <TokenSymbol symbol=\"BSHARE\" />\n              </CardIcon>\n              <Value value={getDisplayBalance(stakedBalance)} />\n              <Label text={`≈ $${tokenPriceInDollars}`} variant=\"yellow\" />\n              <Label text={'BSHARE Staked'} variant=\"yellow\" />\n            </StyledCardHeader>\n            <StyledCardActions>\n              {approveStatus !== ApprovalState.APPROVED ? (\n                <Button\n                  disabled={approveStatus !== ApprovalState.NOT_APPROVED}\n                  className={approveStatus === ApprovalState.NOT_APPROVED ? 'shinyButton' : 'shinyButtonDisabled'}\n                  style={{marginTop: '20px'}}\n                  onClick={approve}\n                >\n                  Approve BSHARE\n                </Button>\n              ) : (\n                <>\n                  <IconButton disabled={!canWithdrawFromBoardroom} onClick={onPresentWithdraw}>\n                    <RemoveIcon color={!canWithdrawFromBoardroom ? '' : 'yellow'} />\n                  </IconButton>\n                  <StyledActionSpacer />\n                  <IconButton onClick={onPresentDeposit}>\n                    <AddIcon color={!canWithdrawFromBoardroom ? '' : 'yellow'} />\n                  </IconButton>\n                </>\n              )}\n            </StyledCardActions>\n          </StyledCardContentInner>\n        </CardContent>\n      </Card>\n      <Box mt={2} style={{color: '#FFF'}}>\n        {canWithdrawFromBoardroom ? (\n          ''\n        ) : (\n          <Card>\n            <CardContent>\n              <Typography style={{textAlign: 'center'}}>Withdraw possible in</Typography>\n              <ProgressCountdown hideBar={true} base={from} deadline={to} description=\"Withdraw available in\" />\n            </CardContent>\n          </Card>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 28px;\n  width: 100%;\n`;\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`;\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport default Stake;\n","import {useCallback} from 'react';\nimport useBombFinance from './useBombFinance';\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\n\nconst useRedeemOnBoardroom = (description?: string) => {\n  const bombFinance = useBombFinance();\n  const handleTransactionReceipt = useHandleTransactionReceipt();\n\n  const handleRedeem = useCallback(() => {\n    const alertDesc = description || 'Redeem BSHARE from Boardroom';\n    handleTransactionReceipt(bombFinance.exitFromBoardroom(), alertDesc);\n  }, [bombFinance, description, handleTransactionReceipt]);\n  return {onRedeem: handleRedeem};\n};\n\nexport default useRedeemOnBoardroom;\n","import {useEffect, useState} from 'react';\nimport useBombFinance from './useBombFinance';\nimport useRefresh from './useRefresh';\n\nconst useFetchBoardroomAPR = () => {\n  const [apr, setApr] = useState<number>(0);\n  const bombFinance = useBombFinance();\n  const {slowRefresh} = useRefresh();\n\n  useEffect(() => {\n    async function fetchBoardroomAPR() {\n      try {\n        setApr(await bombFinance.getBoardroomAPR());\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchBoardroomAPR();\n  }, [setApr, bombFinance, slowRefresh]);\n\n  return apr;\n};\n\nexport default useFetchBoardroomAPR;\n","import React, { useMemo } from 'react';\nimport { useWallet } from 'use-wallet';\nimport moment from 'moment';\nimport styled from 'styled-components';\nimport Spacer from '../../components/Spacer';\nimport Harvest from './components/Harvest';\nimport Stake from './components/Stake';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Box, Card, CardContent, Button, Typography, Grid } from '@material-ui/core';\n\nimport { Alert } from '@material-ui/lab';\n\nimport UnlockWallet from '../../components/UnlockWallet';\nimport Page from '../../components/Page';\n\nimport useRedeemOnBoardroom from '../../hooks/useRedeemOnBoardroom';\nimport useStakedBalanceOnBoardroom from '../../hooks/useStakedBalanceOnBoardroom';\nimport { getDisplayBalance } from '../../utils/formatBalance';\nimport useCurrentEpoch from '../../hooks/useCurrentEpoch';\nimport useFetchBoardroomAPR from '../../hooks/useFetchBoardroomAPR';\n\nimport useCashPriceInEstimatedTWAP from '../../hooks/useCashPriceInEstimatedTWAP';\nimport useTreasuryAllocationTimes from '../../hooks/useTreasuryAllocationTimes';\nimport useTotalStakedOnBoardroom from '../../hooks/useTotalStakedOnBoardroom';\nimport useClaimRewardCheck from '../../hooks/boardroom/useClaimRewardCheck';\nimport useWithdrawCheck from '../../hooks/boardroom/useWithdrawCheck';\nimport ProgressCountdown from './components/ProgressCountdown';\nimport { createGlobalStyle } from 'styled-components';\nimport { Helmet } from 'react-helmet';\n\nimport HomeImage from '../../assets/img/background.jpg';\nconst BackgroundImage = createGlobalStyle`\n  body {\n    background: url(${HomeImage}) repeat !important;\n    background-size: cover !important;\n    background-color: #171923;\n  }\n`;\nconst TITLE = 'bomb.money | Boardroom';\n\nconst useStyles = makeStyles((theme) => ({\n  gridItem: {\n    height: '100%',\n    [theme.breakpoints.up('md')]: {\n      height: '90px',\n    },\n  },\n}));\n\nconst Boardroom = () => {\n  const classes = useStyles();\n  const { account } = useWallet();\n  const { onRedeem } = useRedeemOnBoardroom();\n  const stakedBalance = useStakedBalanceOnBoardroom();\n  const currentEpoch = useCurrentEpoch();\n  const cashStat = useCashPriceInEstimatedTWAP();\n  const totalStaked = useTotalStakedOnBoardroom();\n  const boardroomAPR = useFetchBoardroomAPR();\n  const canClaimReward = useClaimRewardCheck();\n  const canWithdraw = useWithdrawCheck();\n  const scalingFactor = useMemo(() => (cashStat ? Number(cashStat.priceInDollars).toFixed(4) : null), [cashStat]);\n  const { to } = useTreasuryAllocationTimes();\n\n  return (\n    <Page>\n      <BackgroundImage />\n      <Helmet>\n        <title>{TITLE}</title>\n      </Helmet>\n          <Typography color=\"textPrimary\" align=\"center\" variant=\"h3\" gutterBottom>\n            Boardroom\n          </Typography>\n          <Box mt={5}>\n            <Grid container justify=\"center\" spacing={3}>\n              <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\n                <Card className={classes.gridItem}>\n                  <CardContent style={{ textAlign: 'center' }}>\n                    <Typography style={{ textTransform: 'uppercase', color: '#f9d749' }}>Next Epoch</Typography>\n                    <ProgressCountdown base={moment().toDate()} hideBar={true} deadline={to} description=\"Next Epoch\" />\n                  </CardContent>\n                </Card>\n              </Grid>\n              <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\n                <Card className={classes.gridItem}>\n                  <CardContent align=\"center\">\n                    <Typography style={{ textTransform: 'uppercase', color: '#f9d749' }}>Current Epoch</Typography>\n                    <Typography>{Number(currentEpoch)}</Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n              <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\n                <Card className={classes.gridItem}>\n                  <CardContent align=\"center\">\n                    <Typography style={{ textTransform: 'uppercase', color: '#f9d749' }}>\n                      BOMB PEG <small>(TWAP)</small>\n                    </Typography>\n                    <Typography>{scalingFactor} BTC</Typography>\n                    <Typography>\n                      <small>per 10,000 BOMB</small>\n                    </Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n              <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\n                <Card className={classes.gridItem}>\n                  <CardContent align=\"center\">\n                    <Typography style={{ textTransform: 'uppercase', color: '#f9d749' }}>APR</Typography>\n                    <Typography>{boardroomAPR.toFixed(2)}%</Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n              <Grid item xs={12} md={2} lg={2}>\n                <Card className={classes.gridItem}>\n                  <CardContent align=\"center\">\n                    <Typography style={{ textTransform: 'uppercase', color: '#f9d749' }}>BSHARES Staked</Typography>\n                    <Typography>{getDisplayBalance(totalStaked)}</Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n            </Grid>\n\n            <Grid container justify=\"center\">\n              <Box mt={3} style={{ width: '600px' }}>\n                <Alert variant=\"filled\" severity=\"info\">\n                  <h2> Let's Maintain PEG Together! </h2>\n                  <a href=\"https://app.bomb.money/xbomb\">xBOMB</a> is a great place to put your BOMB rewards , 20% of\n                  all minted BOMB goes directly to xBOMB stakers.\n                  <br />\n                  <br />\n                  Please consider putting your earned BOMB into xBOMB, especially when we are not over 1.1 peg.\n                </Alert>\n              </Box>\n            </Grid>\n\n        {!!account ? (\n            <Box mt={4}>\n              <StyledBoardroom>\n                <StyledCardsWrapper>\n                  <StyledCardWrapper>\n                    <Harvest />\n                  </StyledCardWrapper>\n                  <Spacer />\n                  <StyledCardWrapper>\n                    <Stake />\n                  </StyledCardWrapper>\n                </StyledCardsWrapper>\n              </StyledBoardroom>\n            </Box>\n        ) : (\n            <UnlockWallet />\n        )}\n\n            {/* <Grid container justify=\"center\" spacing={3}>\n            <Grid item xs={4}>\n              <Card>\n                <CardContent align=\"center\">\n                  <Typography>Rewards</Typography>\n\n                </CardContent>\n                <CardActions style={{justifyContent: 'center'}}>\n                  <Button color=\"primary\" variant=\"outlined\">Claim Reward</Button>\n                </CardActions>\n                <CardContent align=\"center\">\n                  <Typography>Claim Countdown</Typography>\n                  <Typography>00:00:00</Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item xs={4}>\n              <Card>\n                <CardContent align=\"center\">\n                  <Typography>Stakings</Typography>\n                  <Typography>{getDisplayBalance(stakedBalance)}</Typography>\n                </CardContent>\n                <CardActions style={{justifyContent: 'center'}}>\n                  <Button>+</Button>\n                  <Button>-</Button>\n                </CardActions>\n              </Card>\n            </Grid>\n          </Grid> */}\n          </Box>\n\n        {!!account && (\n          <Box mt={5}>\n            <Grid container justify=\"center\" spacing={3} mt={10}>\n              <Button\n                disabled={stakedBalance.eq(0) || (!canWithdraw && !canClaimReward)}\n                onClick={onRedeem}\n                className={\n                  stakedBalance.eq(0) || (!canWithdraw && !canClaimReward)\n                    ? 'shinyButtonDisabledSecondary'\n                    : 'shinyButtonSecondary'\n                }\n              >\n                Claim &amp; Withdraw\n              </Button>\n            </Grid>\n          </Box>\n        )}\n    </Page>\n  );\n};\n\nconst StyledBoardroom = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst StyledCardsWrapper = styled.div`\n  display: flex;\n  width: 600px;\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-flow: column nowrap;\n    align-items: center;\n  }\n`;\n\nconst StyledCardWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 80%;\n  }\n`;\n\nexport default Boardroom;\n","import {useCallback} from 'react';\nimport {TransactionResponse} from '@ethersproject/providers';\nimport {useTransactionAdder} from '../state/transactions/hooks';\nimport {useAddPopup} from '../state/application/hooks';\n\nfunction useHandleTransactionReceipt(): (promise: Promise<TransactionResponse>, summary: string) => void {\n  const addTransaction = useTransactionAdder();\n  const addPopup = useAddPopup();\n\n  return useCallback(\n    (promise: Promise<TransactionResponse>, summary: string) => {\n      promise\n        .then((tx) => addTransaction(tx, {summary}))\n        .catch((err) => {\n          if (err.message.includes('User denied')) {\n            // User denied transaction signature on MetaMask.\n            return;\n          }\n          const message = `Unable to ${summary[0].toLowerCase()}${summary.slice(1)}`;\n          console.error(`${message}: ${err.message || err.stack}`);\n          addPopup({error: {message, stack: err.message || err.stack}});\n        });\n    },\n    [addPopup, addTransaction],\n  );\n}\n\nexport default useHandleTransactionReceipt;\n","import {TransactionResponse} from '@ethersproject/providers';\nimport {useCallback, useMemo} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {useWallet} from 'use-wallet';\n\nimport {AppDispatch, AppState} from '../index';\nimport {addTransaction, clearAllTransactions} from './actions';\nimport {TransactionDetails} from './reducer';\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {summary?: string; approval?: {tokenAddress: string; spender: string}},\n) => void {\n  const {chainId, account} = useWallet();\n  const dispatch = useDispatch<AppDispatch>();\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {summary, approval}: {summary?: string; approval?: {tokenAddress: string; spender: string}} = {},\n    ) => {\n      if (!account) return;\n      if (!chainId) return;\n\n      const {hash} = response;\n      if (!hash) {\n        throw Error('No transaction hash found.');\n      }\n      dispatch(addTransaction({hash, from: account, chainId, approval, summary}));\n    },\n    [dispatch, chainId, account],\n  );\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): {[txHash: string]: TransactionDetails} {\n  const {chainId} = useWallet();\n  const state = useSelector<AppState, AppState['transactions']>((state) => state.transactions);\n\n  return chainId ? state[chainId] ?? {} : {};\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions();\n  if (!transactionHash || !transactions[transactionHash]) {\n    return false;\n  }\n  return !transactions[transactionHash].receipt;\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000;\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions();\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash];\n        if (!tx) return false;\n        if (tx.receipt) {\n          return false;\n        } else {\n          const approval = tx.approval;\n          if (!approval) return false;\n          return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx);\n        }\n      }),\n    [allTransactions, spender, tokenAddress],\n  );\n}\n\nexport function useClearAllTransactions(): {clearAllTransactions: () => void} {\n  const {chainId} = useWallet();\n  const dispatch = useDispatch<AppDispatch>();\n  return {\n    clearAllTransactions: useCallback(() => dispatch(clearAllTransactions({chainId})), [dispatch, chainId]),\n  };\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode;\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void;\n  placeholder?: string;\n  startAdornment?: React.ReactNode;\n  value: string;\n}\n\nconst Input: React.FC<InputProps> = ({endAdornment, onChange, placeholder, startAdornment, value}) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  );\n};\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.color.grey[200]};\n  border-radius: ${(props) => props.theme.borderRadius}px;\n  display: flex;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`;\n\nconst StyledInput = styled.input`\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.color.grey[600]};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`;\n\nexport default Input;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport {Button} from '@material-ui/core';\nimport Input, {InputProps} from '../Input';\n\ninterface TokenInputProps extends InputProps {\n  max: number | string;\n  symbol: string;\n  onSelectMax?: () => void;\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({max, symbol, onChange, onSelectMax, value}) => {\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} Available\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            {/* <StyledTokenSymbol>{symbol}</StyledTokenSymbol> */}\n            <StyledSpacer />\n            <div>\n              <Button size=\"small\" color=\"primary\" variant=\"contained\" onClick={onSelectMax}>\n                Max\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n    </StyledTokenInput>\n  );\n};\n\n/*\n            <div>\n              <Button size=\"sm\" text=\"Max\" />\n            </div>\n*/\n\nconst StyledTokenInput = styled.div``;\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`;\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`;\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.color.grey[400]};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`;\n\nexport default TokenInput;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst ModalActions: React.FC = ({children}) => {\n  const l = React.Children.toArray(children).length;\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <StyledSpacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  );\n};\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.color.grey[100]}00;\n  display: flex;\n  height: 96px;\n  margin: ${(props) => props.theme.spacing[4]}px ${(props) => -props.theme.spacing[4]}px\n    ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n`;\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`;\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[4]}px;\n`;\n\nexport default ModalActions;\n","import { useCallback, useEffect, useState } from 'react';\nimport { useWallet } from 'use-wallet';\nimport { BigNumber } from 'ethers';\nimport ERC20 from '../bomb-finance/ERC20';\n\nconst useAllowance = (token: ERC20, spender: string, pendingApproval?: boolean) => {\n  const [allowance, setAllowance] = useState<BigNumber>(null);\n  const { account } = useWallet();\n\n  const fetchAllowance = useCallback(async () => {\n    const allowance = await token.allowance(account, spender);\n    setAllowance(allowance);\n  }, [account, spender, token]);\n\n  useEffect(() => {\n    if (account && spender && token) {\n      fetchAllowance().catch((err) => console.error(`Failed to fetch allowance: ${err.stack}`));\n    }\n  }, [account, spender, token, pendingApproval, fetchAllowance]);\n\n  return allowance;\n};\n\nexport default useAllowance;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface CardIconProps {\n  children?: React.ReactNode;\n}\n\nconst CardIcon: React.FC<CardIconProps> = ({children}) => <StyledCardIcon>{children}</StyledCardIcon>;\n\nconst StyledCardIcon = styled.div`\n  background-color: #363746;\n  font-size: 36px;\n  height: 95px;\n  width: 95px;\n  border-radius: 95px;\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  margin: 0 auto ${(props) => props.theme.spacing[3]}px;\n`;\n\nexport default CardIcon;\n","import {BigNumber, ethers} from 'ethers';\nimport {useCallback, useMemo} from 'react';\nimport {useHasPendingApproval, useTransactionAdder} from '../state/transactions/hooks';\nimport useAllowance from './useAllowance';\nimport ERC20 from '../bomb-finance/ERC20';\n\nconst APPROVE_AMOUNT = ethers.constants.MaxUint256;\nconst APPROVE_BASE_AMOUNT = BigNumber.from('1000000000000000000000000');\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nfunction useApprove(token: ERC20, spender: string): [ApprovalState, () => Promise<void>] {\n  const pendingApproval = useHasPendingApproval(token.address, spender);\n  const currentAllowance = useAllowance(token, spender, pendingApproval);\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN;\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lt(APPROVE_BASE_AMOUNT)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED;\n  }, [currentAllowance, pendingApproval]);\n\n  const addTransaction = useTransactionAdder();\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily');\n      return;\n    }\n\n    const response = await token.approve(spender, APPROVE_AMOUNT);\n    addTransaction(response, {\n      summary: `Approve ${token.symbol}`,\n      approval: {\n        tokenAddress: token.address,\n        spender: spender,\n      },\n    });\n  }, [approvalState, token, spender, addTransaction]);\n\n  return [approvalState, approve];\n}\n\nexport default useApprove;\n","import React from 'react';\nimport {Box} from '@material-ui/core';\nimport AccountButton from '../Nav/AccountButton';\n\nconst UnlockWallet = () => {\n  return (\n    <Box style={{'textAlign': 'center', 'marginTop': '25px'}}>\n      <AccountButton />\n      {/* <Button color=\"primary\" variant=\"contained\" onClick={() => connect('injected')}>Unlock Wallet</Button> */}\n    </Box>\n  );\n};\n\nexport default UnlockWallet;\n","import React from 'react';\n\nimport styled from 'styled-components';\n\ninterface ValueProps {\n  value: string;\n}\n\nconst Value: React.FC<ValueProps> = ({value}) => {\n  return <StyledValue>{value}</StyledValue>;\n};\n\nconst StyledValue = styled.div`\n  font-size: 36px;\n  font-weight: 700;\n`;\n\nexport default Value;\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport interface IconProps {\n  color?: string;\n  children?: string;\n}\n\nconst Icon: React.FC = ({children}) => <StyledIcon>{children}</StyledIcon>;\n\nconst StyledIcon = styled.div``;\n\nexport default Icon;\n","import React, {useContext} from 'react';\nimport {ThemeContext} from 'styled-components';\n\nimport Icon, {IconProps} from '../Icon';\n\nconst AddIcon: React.FC<IconProps> = ({color}) => {\n  const {color: themeColor} = useContext(ThemeContext);\n  return (\n    <Icon>\n      <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\" fill={color ? color : themeColor.grey[400]} />\n      </svg>\n    </Icon>\n  );\n};\n\nexport default AddIcon;\n","import React, {useContext} from 'react';\nimport {ThemeContext} from 'styled-components';\n\nimport Icon, {IconProps} from '../Icon';\n\nconst RemoveIcon: React.FC<IconProps> = ({color}) => {\n  const {color: themeColor} = useContext(ThemeContext);\n  return (\n    <Icon>\n      <svg viewBox=\"0 0 24 24\" fill={color ? color : themeColor.grey[400]} width=\"18px\" height=\"18px\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M19 13H5v-2h14v2z\" />\n      </svg>\n    </Icon>\n  );\n};\n\nexport default RemoveIcon;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport {Link} from 'react-router-dom';\n\ninterface IconButtonProps {\n  children?: React.ReactNode;\n  disabled?: boolean;\n  onClick?: () => void;\n  to?: string;\n}\n\nconst IconButton: React.FC<IconButtonProps> = ({children, disabled, onClick, to}) => {\n  return (\n    <StyledButton disabled={disabled} onClick={onClick}>\n      {!!to ? <StyledLink to={to}>{children}</StyledLink> : children}\n    </StyledButton>\n  );\n};\n\ninterface StyledButtonProps {\n  disabled?: boolean;\n}\n/*\n  box-shadow: 6px 6px 12px ${props => props.theme.color.grey[600]},\n    -12px -12px 24px ${props => props.theme.color.grey[800]}aa;\n */\n\n// background-color: ${(props) => (!props.disabled ? '#571eb1' : props.theme.color.grey[900])};\n// color: ${(props) => (!props.disabled ? props.theme.color.primary.main : props.theme.color.grey[500])};\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  align-items: center;\n  border: 2px solid;\n  border-radius: 28px;\n  background-color: #171923;\n  box-shadow: ${(props) => ('0px 0px 5px 0px ' + !props.disabled ? 'rgba(251,221,76,1)' : 'grey' )};\n  color: ${(props) => (!props.disabled ? '#f9d749' : 'grey')};\n  cursor: pointer;\n  display: flex;\n  font-weight: 700;\n  height: 56px;\n  justify-content: center;\n  letter-spacing: 1px;\n  outline: none;\n  padding: 0;\n  margin: 0;\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\n  text-transform: uppercase;\n  width: 56px;\n\n  &:hover {\n    background-color: #f9d749;\n    color: #171923;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`;\n\nexport default IconButton;\n"],"sourceRoot":""}